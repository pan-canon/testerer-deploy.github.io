export class BaseMirrorQuest {
  constructor(eventManager, appInstance) {
    this.eventManager = eventManager;
    this.app = appInstance;
    this.key = "mirror_quest"; // —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    this.doneKey = "mirror_done"; // –∫–ª—é—á –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    this.registerEvents(); // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–∞–º–µ—Ä–∞–º–∏
  }

  async activate() {
    if (!this.eventManager.isEventLogged(this.key)) {
      console.log(`–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ: ${this.key}`);
      await this.eventManager.addDiaryEntry(this.key);
      
      // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –∑–µ—Ä–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç –∞–∫—Ç–∏–≤–µ–Ω
      localStorage.setItem("mirrorQuestActive", "true");
      
      // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∫–∞–º–µ—Ä—ã
      const cameraBtn = document.getElementById("toggle-camera");
      if (cameraBtn) {
        cameraBtn.classList.add("glowing");
      }
      
      // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–ø–æ—Å—Ç–∏—Ç—å", –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç
      if (!document.getElementById("post-button")) {
        const postButton = document.createElement("button");
        postButton.id = "post-button";
        postButton.textContent = "–ó–∞–ø–æ—Å—Ç–∏—Ç—å";
        postButton.addEventListener("click", async () => {
          await this.finish();
          postButton.remove();
        });
        document.getElementById("main-screen").appendChild(postButton);
      }
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥)
      this.questTimeout = setTimeout(() => {
        if (localStorage.getItem("mirrorQuestActive") === "true") {
          if (cameraBtn) cameraBtn.classList.remove("glowing");
          localStorage.removeItem("mirrorQuestActive");
          alert("–í—Ä–µ–º—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ.");
          const postButton = document.getElementById("post-button");
          if (postButton) postButton.remove();
        }
      }, 60000);
    }
  }

  async checkStatus() {
    console.log("ü™û –ó–µ—Ä–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç –∞–∫—Ç–∏–≤–Ω–æ. –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É...");
    return new Promise(resolve => {
      setTimeout(async () => {
        console.log("‚è± –ó–∞–ø—É—Å–∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–¥—Ä–∞...");
        const success = await this.app.compareCurrentFrame();
        console.log("‚è± –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:", success);
        resolve(success);
      }, 3000);
    });
  }

  async finish() {
    if (this.eventManager.isEventLogged(this.doneKey)) {
      console.log(`–ö–≤–µ—Å—Ç "${this.key}" —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.`);
      return;
    }

    const success = await this.checkStatus();
    if (success) {
      if (this.questTimeout) {
        clearTimeout(this.questTimeout);
      }
      if (!this.eventManager.isEventLogged(this.doneKey)) {
        await this.eventManager.addDiaryEntry(this.doneKey);
        await this.eventManager.addDiaryEntry("what_was_it", this.app.lastMirrorPhoto);
      }
      const cameraBtn = document.getElementById("toggle-camera");
      if (cameraBtn) {
        cameraBtn.classList.remove("glowing");
      }
      localStorage.removeItem("mirrorQuestActive");
      alert("‚úÖ –ó–∞–¥–∞–Ω–∏–µ ¬´–ø–æ–¥–æ–π—Ç–∏ –∫ –∑–µ—Ä–∫–∞–ª—É¬ª –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!");
      if (this.app.ghostManager) {
        this.app.ghostManager.triggerNextPhenomenon();
      }
    } else {
      alert("‚ùå –ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!");
    }
  }

  registerEvents() {
    const cameraBtn = document.getElementById("toggle-camera");
    if (cameraBtn) {
      cameraBtn.addEventListener("click", async () => {
        if (localStorage.getItem("mirrorQuestActive") === "true") {
          console.log("ü™û –ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏–µ –∫–Ω–æ–ø–∫–∏");
          await this.finish();
        }
      });
    }
  }
}