(()=>{var e={61:(e,t,a)=>{"use strict";a.d(t,{Z:()=>o});var n=a(350),s=a(713);class o extends n.e{constructor(e,t,a,n){super(e),this.app=t,this.languageManager=n,this.key=a.key}async activate(){this.eventManager.isEventLogged(this.key)?console.log(`Event '${this.key}' is already logged, skipping activation.`):(console.log(`Activating final event: '${this.key}'`),await this.addDiaryEntry(this.key,!0),s.f.set(s.f.KEYS.GAME_FINALIZED,"true"),this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.triggerGhostAppearanceEffect&&this.app.visualEffectsManager.triggerGhostAppearanceEffect("ghost_fade_out"),await this.app.ghostManager.finishCurrentGhost(),this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!1),this.app.questManager&&"function"==typeof this.app.questManager.syncQuestState&&await this.app.questManager.syncQuestState(),s.f.setActiveQuestKey(null),this.app.viewManager&&"function"==typeof this.app.viewManager.showNotification?this.app.viewManager.showNotification("üéâ Congratulations, the scenario is finished!"):console.log("üéâ Congratulations, the scenario is finished!"),document.dispatchEvent(new CustomEvent("gameEventCompleted",{detail:this.key})))}}},89:(e,t,a)=>{"use strict";a.d(t,{Y:()=>s});var n=a(350);a(713);class s extends n.e{constructor(e,t,a,n){super(e),this.app=t,this.key=a.key}async activate(){this.eventManager.isEventLogged(this.key)?console.log(`[PostMirrorEvent] Event '${this.key}' is already logged, skipping activation.`):(console.log(`[PostMirrorEvent] Activating event '${this.key}'.`),await this.addDiaryEntry(this.key,!0),this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!0),this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.triggerMirrorEffect&&this.app.visualEffectsManager.triggerMirrorEffect(),console.log("[PostMirrorEvent] Mirror quest cycle ended; waiting for user action to trigger the next quest."),document.dispatchEvent(new CustomEvent("gameEventCompleted",{detail:this.key})))}}},166:(e,t,a)=>{"use strict";a.d(t,{S:()=>s});class n{showNotification(e){"Notification"in window?"granted"===Notification.permission?new Notification(e):"denied"!==Notification.permission&&Notification.requestPermission().then((t=>{"granted"===t&&new Notification(e)})):console.warn("‚ö†Ô∏è Notifications are not supported in this browser.")}}class s{static logError(e,t=""){console.error(`Error${t?" in "+t:""}:`,e)}static showError(e){(new n).showNotification(e)}}},222:(e,t,a)=>{var n={"./triad-final_event":[911,792],"./triad-final_event.js":[911,792],"./triad-post_mirror_event":[849,792],"./triad-post_mirror_event.js":[849,792],"./triad-post_repeating_event":[413,792],"./triad-post_repeating_event.js":[413,792],"./triad-welcome":[622,792],"./triad-welcome.js":[622,792]};function s(e){if(!a.o(n,e))return Promise.resolve().then((()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=n[e],s=t[0];return a.e(t[1]).then((()=>a(s)))}s.keys=()=>Object.keys(n),s.id=222,e.exports=s},350:(e,t,a)=>{"use strict";a.d(t,{e:()=>s});var n=a(166);class s{constructor(e){this.eventManager=e,this.key=""}async activate(){try{this.eventManager.isEventLogged(this.key)||(console.log(`Activating event: ${this.key}`),await this.eventManager.addDiaryEntry(this.key))}catch(e){n.S.logError(e,"BaseEvent.activate"),n.S.showError("An error occurred during event activation.")}}async addDiaryEntry(e,t=!1){try{await this.eventManager.addDiaryEntry(e,t)}catch(e){n.S.logError(e,"BaseEvent.addDiaryEntry"),n.S.showError("An error occurred while adding a diary entry.")}}}},413:(e,t,a)=>{"use strict";a.r(t),a.d(t,{BaseRepeatingQuest:()=>r,FinalEvent:()=>l.Z,PostRepeatingEvent:()=>n.y});var n=a(476),s=a(350),o=a(713);const i=["toilet","clock","lamp","chair","table","couch","bed","refrigerator","book","cup"];class r extends s.e{constructor(e,t,a={}){super(e),this.app=t,this.key=a.key||"repeating_quest",this.doneKey=a.doneKey||this.key+"_done",this.statusElementId=a.statusElementId||"repeating-quest-status",this.shootButtonId=a.shootButtonId||"btn_shoot",this.totalStages=a.totalStages||3,this.currentStage=1,this.activated=!1,this.finished=!1,this.finalRepeatingQuestCompleted=!1,this.loadState();const n=o.f.get("remainingItems");this.remainingItems=n?JSON.parse(n):[...i],o.f.set("remainingItems",JSON.stringify(this.remainingItems)),this.currentTarget=this.remainingItems.length>0?this.remainingItems[0]:null,document.addEventListener("objectDetected",this.onObjectDetected.bind(this))}generateDetectionConfig(){return console.log(`[BaseRepeatingQuest] Providing detection target: ${this.currentTarget}`),{target:this.currentTarget}}loadState(){const e=o.f.get(`quest_state_${this.key}`);if(e)try{const t=JSON.parse(e);this.currentStage=t.currentStage,this.finished=t.finished,t.totalStages&&(this.totalStages=t.totalStages),console.log(`[BaseRepeatingQuest] Restored quest state: stage=${this.currentStage}, finished=${this.finished}`)}catch(e){console.error("[BaseRepeatingQuest] Error parsing saved quest state:",e)}}saveState(){const e={currentStage:this.currentStage,finished:this.finished,totalStages:this.totalStages};o.f.set(`quest_state_${this.key}`,JSON.stringify(e)),console.log(`[BaseRepeatingQuest] Saved quest state: stage=${this.currentStage}, finished=${this.finished}`)}async activate(){console.log(`Activating repeating quest: ${this.key}`),await this.addDiaryEntry(this.key,!0),await this.app.databaseManager.saveQuestRecord({quest_key:this.key,status:"active",current_stage:this.currentStage,total_stages:this.totalStages}),this.app.viewManager?.setCameraButtonActive&&this.app.viewManager.setCameraButtonActive(!0),this.activated=!0,this.app.isCameraOpen?this.startCheckLoop():document.addEventListener("cameraReady",(()=>{console.log("[BaseRepeatingQuest] cameraReady received ‚Äî starting quest loop"),this.startCheckLoop()}),{once:!0})}startCheckLoop(){this.app.isCameraOpen&&this.activated&&!this.finished&&(console.log(`[BaseRepeatingQuest] Starting AI detection for target '${this.currentTarget}'.`),this.app.cameraSectionManager?.startAIDetection?.({target:this.currentTarget})),this.app.viewManager?.startRepeatingQuestUI?this.app.viewManager.startRepeatingQuestUI({statusElementId:this.statusElementId,shootButtonId:this.shootButtonId,stage:this.currentStage,totalStages:this.totalStages,target:this.currentTarget,onShoot:()=>this.finishStage(),quest:this}):console.error("[BaseRepeatingQuest] ViewManager.startRepeatingQuestUI is not available."),console.log("[BaseRepeatingQuest] Repeating quest UI updated. Awaiting user action to capture snapshot.")}restoreUI(){console.log("[BaseRepeatingQuest] Attempting to restore repeating quest UI...");const e=this.app.databaseManager.getQuestRecord(this.key);if(!e||"active"!==e.status)return void console.log("[BaseRepeatingQuest] DB record is not active; UI restoration skipped.");if(this.finished)return void console.log("[BaseRepeatingQuest] Quest is finished; UI restoration skipped.");this.activated||(console.log("[BaseRepeatingQuest] Quest not activated locally; setting activated=true based on DB record."),this.activated=!0);const t=()=>{this.startCheckLoop(),console.log("[BaseRepeatingQuest] UI restored; shoot button will be enabled upon detection.")};this.app.isCameraOpen?t():document.addEventListener("cameraReady",t,{once:!0});const a=this.app.cameraSectionManager.videoElement;o.f.isCameraOpen()&&a&&a.srcObject&&a.readyState>=2&&(console.log("[BaseRepeatingQuest] videoElement.readyState >= 2 ‚Äî —Å—Ä–∞–∑—É –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ç–µ–∫—Ü–∏—é"),t())}async finishStage(){if(this.finished)return;this.app.cameraSectionManager&&"function"==typeof this.app.cameraSectionManager.stopAIDetection&&(this.app.cameraSectionManager.stopAIDetection(),console.log("[BaseRepeatingQuest] AI detection stopped after shoot.")),this.app.viewManager&&"function"==typeof this.app.viewManager.setShootButtonActive&&(this.app.viewManager.setShootButtonActive(!1),console.log("[BaseRepeatingQuest] Shoot button disabled after click."));const e=this.captureSimplePhoto();console.log(`[BaseRepeatingQuest] Captured snapshot for stage ${this.currentStage}.`),await this.addDiaryEntry(`repeating_stage_${this.currentStage} [photo attached]\n${e}`,!1),console.log(`[BaseRepeatingQuest] Completed stage: ${this.currentStage}`),this.currentStage++,this.saveState(),this.currentTarget&&(this.remainingItems.shift(),o.f.set("remainingItems",JSON.stringify(this.remainingItems)),this.currentTarget=this.remainingItems[0]||null,console.log(`[BaseRepeatingQuest] Next detection target: ${this.currentTarget}`)),this.currentStage<=this.totalStages?(await this.app.databaseManager.saveQuestRecord({quest_key:this.key,status:"finished",current_stage:this.currentStage,total_stages:this.totalStages}),this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&(this.app.viewManager.setPostButtonEnabled(!0),console.log("[BaseRepeatingQuest] Post button enabled for next stage.")),document.dispatchEvent(new CustomEvent("questCompleted",{detail:this.key})),console.log("[BaseRepeatingQuest] questCompleted event dispatched for repeating quest stage.")):await this.finishCompletely()}async finishCompletely(){this.finished=!0,await this.app.databaseManager.saveQuestRecord({quest_key:this.key,status:"finished",current_stage:this.currentStage,total_stages:this.totalStages}),o.f.remove(`quest_state_${this.key}`),document.dispatchEvent(new CustomEvent("questCompleted",{detail:this.key})),console.log("[BaseRepeatingQuest] Quest completely finished. questCompleted event dispatched.")}captureSimplePhoto(){const e=this.app.cameraSectionManager?.videoElement;if(!e||!e.srcObject)return console.warn("[BaseRepeatingQuest] Camera is not active ‚Äî returning an empty string"),"";const t=document.createElement("canvas");t.width=e.videoWidth||640,t.height=e.videoHeight||480;return t.getContext("2d").drawImage(e,0,0,t.width,t.height),t.toDataURL("image/png")}resetCycle(){this.finished=!1,this.currentStage=1,console.log("[BaseRepeatingQuest] Quest state has been reset for a new cycle."),this.saveState()}async getCurrentQuestStatus(){const e=this.app.databaseManager.getQuestRecord(this.key),t=o.f.getActiveQuestKey()===this.key;return{key:this.key,active:t,finished:this.finished,currentStage:this.currentStage,totalStages:this.totalStages,dbStatus:e?e.status:"not recorded"}}getRandomLetter(e){if(!e)return"";const t=e.replace(/[^A-Za-z–ê-–Ø–∞-—è–Å—ë]/g,"").split("");return t.length?t[Math.floor(Math.random()*t.length)]:""}onObjectDetected(e){const t=e.detail;t===this.currentTarget&&this.app.isCameraOpen&&(console.log(`[BaseRepeatingQuest] Detected '${t}', enabling Shoot button.`),this.app.viewManager&&"function"==typeof this.app.viewManager.setShootButtonActive&&this.app.viewManager.setShootButtonActive(!0))}}var l=a(61)},470:(e,t,a)=>{"use strict";a.d(t,{IO:()=>s,Sj:()=>o,gO:()=>i,mB:()=>r,o2:()=>n,s0:()=>l});const n=window.location.hostname.includes("github.io")?"/testerer-deploy.github.io":"",s=`${n}/assets`,o=`${s}/libs/db/sql-wasm.js`,i=`${s}/libs/tf.min.js`,r=`${s}/libs/coco-ssd.min.js`,l=`${s}/models/coco-ssd/model.json`},476:(e,t,a)=>{"use strict";a.d(t,{y:()=>s});var n=a(350);a(713);class s extends n.e{constructor(e,t,a,n){super(e),this.app=t,this.key=a.key}async activate(e){const t=e||this.key;if(this.eventManager.isEventLogged(t))return void console.log(`[PostRepeatingEvent] Event '${t}' is already logged, skipping activation.`);console.log(`[PostRepeatingEvent] Activating event '${t}'.`),await this.addDiaryEntry(t,!0);const a=this.app.ghostManager.getCurrentGhost();a&&a.isFinished?console.log("[PostRepeatingEvent] Ghost is finished; ready to dispatch event completion."):(this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!0),this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.triggerMirrorEffect&&this.app.visualEffectsManager.triggerMirrorEffect(),console.log("[PostRepeatingEvent] Repeating quest cycle ended; waiting for user action.")),document.dispatchEvent(new CustomEvent("gameEventCompleted",{detail:t}))}}},507:(e,t,a)=>{"use strict";a.d(t,{H:()=>n});class n{static convertToGrayscale(e){const t=e.getContext("2d"),a=t.getImageData(0,0,e.width,e.height),n=a.data;for(let e=0;e<n.length;e+=4){const t=(n[e]+n[e+1]+n[e+2])/3;n[e]=t,n[e+1]=t,n[e+2]=t}return t.putImageData(a,0,0),e.toDataURL("image/png")}static pixelWiseComparison(e,t){const a=e=>atob(e.split(",")[1]),n=a(e),s=a(t);let o=0;const i=Math.min(n.length,s.length);for(let e=0;e<i;e++)Math.abs(n.charCodeAt(e)-s.charCodeAt(e))<100&&o++;return o/i}static histogramComparison(e,t){const a=this.createHistogram(e),n=this.createHistogram(t);return 1-a.reduce(((e,t,a)=>e+Math.abs(t-n[a])),0)/(1.2*a.reduce(((e,t)=>e+t),0))}static createHistogram(e){const t=new Array(256).fill(0),a=atob(e.split(",")[1]);for(let e=0;e<a.length;e++)t[a.charCodeAt(e)]++;return t}static applyFilterToCanvas(e,t){const a=e.getContext("2d");a.save(),a.filter="nightVision"===t?"brightness(150%) contrast(120%) sepia(100%) hue-rotate(90deg)":"blackWhite"===t?"grayscale(100%)":"none";const n=a.getImageData(0,0,e.width,e.height);return a.clearRect(0,0,e.width,e.height),a.putImageData(n,0,0),a.restore(),e.toDataURL("image/png")}}},622:(e,t,a)=>{"use strict";a.r(t),a.d(t,{BaseMirrorQuest:()=>r,PostMirrorEvent:()=>l.Y,WelcomeEvent:()=>o});var n=a(350),s=a(713);class o extends n.e{constructor(e,t,a,n){super(e),this.app=t,this.languageManager=n,this.key=a.key}async activate(){return"true"===s.f.get(s.f.KEYS.WELCOME_DONE)?(console.log(`Welcome event '${this.key}' already completed; skipping activation.`),void(this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!0))):this.eventManager.isEventLogged(this.key)?(console.log(`Event '${this.key}' is already logged.`),void("mirror_quest"===s.f.get(s.f.KEYS.ACTIVE_QUEST_KEY)?this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&(this.app.viewManager.setPostButtonEnabled(!0),console.log("Post button enabled based on activeQuestKey 'mirror_quest'.")):this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&(this.app.viewManager.setPostButtonEnabled(!1),console.log("Post button remains disabled as activeQuestKey is not set to 'mirror_quest'.")))):(console.log(`Activating event '${this.key}': Logging invitation to approach the mirror`),await this.addDiaryEntry(this.key,!0),this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!0),this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.triggerMirrorEffect&&this.app.visualEffectsManager.triggerMirrorEffect(),s.f.set(s.f.KEYS.WELCOME_DONE,"true"),void document.dispatchEvent(new CustomEvent("gameEventCompleted",{detail:this.key})))}}var i=a(507);class r extends n.e{constructor(e,t,a={}){super(e),this.app=t,this.key=a.key||"mirror_quest",this.doneKey=a.doneKey||"mirror_done",this.statusElementId=a.statusElementId||"mirror-quest-status",this.shootButtonId=a.shootButtonId||"btn_shoot",this.checkInterval=null,this.finished=!1,this.tempCanvas=document.createElement("canvas"),this.tempCtx=this.tempCanvas.getContext("2d"),this.registerEvents()}registerEvents(){document.addEventListener("cameraReady",(()=>{s.f.getActiveQuestKey()===this.key&&this.startCheckLoop()}))}async activate(){this.eventManager.isEventLogged(this.key)||(console.log(`Activating event: ${this.key}`),await this.addDiaryEntry(this.key)),console.log("[BaseMirrorQuest] Mirror quest activated."),await this.app.databaseManager.saveQuestRecord({quest_key:this.key,status:"active",current_stage:1,total_stages:1})}startCheckLoop(){this.checkInterval||(this.app.viewManager&&"function"==typeof this.app.viewManager.startMirrorQuestUI&&this.app.viewManager.startMirrorQuestUI({statusElementId:this.statusElementId,shootButtonId:this.shootButtonId,onShoot:()=>this.finish()}),this.checkInterval=setInterval((async()=>{if(!this.app.isCameraOpen)return console.warn("[BaseMirrorQuest] Camera is not active - stopping check loop."),void this.stopCheckLoop();const e=await this.checkStatus();this.app.viewManager&&"function"==typeof this.app.viewManager.updateMirrorQuestStatus&&this.app.viewManager.updateMirrorQuestStatus(e,this.statusElementId,this.shootButtonId)}),2e3))}stopCheckLoop(){this.checkInterval&&(clearInterval(this.checkInterval),this.checkInterval=null),this.app.viewManager&&"function"==typeof this.app.viewManager.stopMirrorQuestUI&&this.app.viewManager.stopMirrorQuestUI(this.statusElementId)}async checkStatus(){return console.log("[BaseMirrorQuest] checkStatus() -> compareFrameInternally()"),await this.compareFrameInternally()}async compareFrameInternally(){if(!this.app.isCameraOpen)return console.warn("[BaseMirrorQuest] Camera is not active (app.isCameraOpen false)"),!1;if(!this.app.selfieData)return console.warn("[BaseMirrorQuest] No saved selfie (app.selfieData)"),!1;const e=this.app.cameraSectionManager?.videoElement;if(!e||!e.srcObject)return console.warn("[BaseMirrorQuest] Camera is not active!"),!1;this.tempCanvas.width=e.videoWidth||640,this.tempCanvas.height=e.videoHeight||480,this.tempCtx.drawImage(e,0,0,this.tempCanvas.width,this.tempCanvas.height);const t=i.H.convertToGrayscale(this.tempCanvas),a=i.H.pixelWiseComparison(this.app.selfieData,t),n=i.H.histogramComparison(this.app.selfieData,t);console.log(`[BaseMirrorQuest] pixel=${a.toFixed(2)}, hist=${n.toFixed(2)}`);const s=a>.6&&n>.7;return s&&(this.app.lastMirrorPhoto=t),s}updateUIAfterFinish(e){this.app.viewManager&&"function"==typeof this.app.viewManager.updateMirrorQuestUIAfterFinish&&this.app.viewManager.updateMirrorQuestUIAfterFinish(e,{statusElementId:this.statusElementId,shootButtonId:this.shootButtonId,cameraButtonId:"toggle-camera"})}async finish(){if(this.finished)return;this.finished=!0,this.stopCheckLoop();const e=await this.checkStatus(),t=this.app.ghostManager.getCurrentGhost(),a=t?this.getRandomLetter(t.name):"";if(e){const e=this.app.lastMirrorPhoto?` [photo attached]\n${this.app.lastMirrorPhoto}`:"";await this.addDiaryEntry(`user_post_success: ${a}${e}`,!1)}else await this.addDiaryEntry(`user_post_failed: ${a}`,!1);this.updateUIAfterFinish(e),this.app.viewManager&&"function"==typeof this.app.viewManager.setCameraButtonActive&&this.app.viewManager.setCameraButtonActive(!1),await this.app.databaseManager.saveQuestRecord({quest_key:this.key,status:"finished",current_stage:1,total_stages:1}),await this.app.questManager.syncQuestState(),document.dispatchEvent(new CustomEvent("questCompleted",{detail:this.key}))}async getCurrentQuestStatus(){const e=this.app.databaseManager.getQuestRecord(this.key),t=s.f.getActiveQuestKey()===this.key;return{key:this.key,active:t,finished:this.finished,dbStatus:e?e.status:"not recorded"}}getRandomLetter(e){if(!e)return"";const t=e.replace(/[^A-Za-z–ê-–Ø–∞-—è–Å—ë]/g,"").split("");return t.length?t[Math.floor(Math.random()*t.length)]:""}}var l=a(89)},651:(e,t,a)=>{"use strict";a.r(t),a.d(t,{ChatScenarioManager:()=>o});var n=a(470),s=a(713);class o{constructor(e,t=null){this.chatManager=e,this.scenarioConfig=t,this.currentDialogueIndex=0,this.onScenarioEnd=null}async init(){if(!this.scenarioConfig)try{const e=await fetch(`${n.o2}/config/chatDialogueConfig.json`);if(!e.ok)throw new Error("Failed to load dialogue configuration from 'src/config/chatDialogueConfig.json'");this.scenarioConfig=await e.json()}catch(e){return void console.error("Error loading dialogue configuration:",e)}if("true"===s.f.get(this.chatManager.getStateKey("chat_conversation_completed")))return void console.log("Chat conversation already completed, skipping dialogue initialization.");const e=s.f.get(this.chatManager.getStateKey("chat_currentDialogueIndex"));this.currentDialogueIndex=null!==e?parseInt(e,10):0,this.loadCurrentDialogue()}loadCurrentDialogue(){if(!this.scenarioConfig||!this.scenarioConfig.dialogues)return void console.error("Scenario configuration is missing or invalid.");const e=this.scenarioConfig.dialogues[this.currentDialogueIndex];e?this.chatManager.loadDialogue(e):console.warn("No dialogue found at the current index.")}advanceDialogue(e){const t=this.scenarioConfig.dialogues[this.currentDialogueIndex];if(!t||!Array.isArray(t.options)||t.options.length<=e)return void console.error("Invalid option index.");const a=t.options[e];a&&"function"==typeof a.onSelect&&a.onSelect(),a&&"number"==typeof a.nextDialogueIndex?(this.currentDialogueIndex=a.nextDialogueIndex,s.f.set(this.chatManager.getStateKey("chat_currentDialogueIndex"),this.currentDialogueIndex),this.loadCurrentDialogue()):(console.log("No next dialogue defined; scenario may have ended."),s.f.set(this.chatManager.getStateKey("chat_conversation_completed"),"true"),s.f.remove(this.chatManager.getStateKey("chat_currentDialogueIndex")),s.f.remove(this.chatManager.getStateKey("chat_started")),"function"==typeof this.onScenarioEnd&&this.onScenarioEnd())}setScenario(e){this.scenarioConfig=e,this.currentDialogueIndex=0,s.f.set(this.chatManager.getStateKey("chat_currentDialogueIndex"),this.currentDialogueIndex),this.loadCurrentDialogue()}setOnScenarioEnd(e){"function"==typeof e&&(this.onScenarioEnd=e)}}},713:(e,t,a)=>{"use strict";a.d(t,{f:()=>o});var n=a(166);const s={CURRENT_SEQUENCE_INDEX:"currentSequenceIndex",POST_BUTTON_DISABLED:"postButtonDisabled",CAMERA_BUTTON_ACTIVE:"cameraButtonActive",CAMERA_OPEN:"cameraOpen",ACTIVE_QUEST_KEY:"activeQuestKey",MIRROR_QUEST_READY:"mirrorQuestReady",WELCOME_DONE:"welcomeDone",REPEATING_QUEST_STATE:"quest_state_repeating_quest",GAME_FINALIZED:"gameFinalized"};class o{static KEYS=s;static get(e){try{return localStorage.getItem(e)}catch(t){return n.S.logError(`StateManager.get error for key "${e}": ${t}`,"StateManager.get"),null}}static set(e,t){try{localStorage.setItem(e,t)}catch(t){n.S.logError(`StateManager.set error for key "${e}": ${t}`,"StateManager.set")}}static remove(e){try{localStorage.removeItem(e)}catch(t){n.S.logError(`StateManager.remove error for key "${e}": ${t}`,"StateManager.remove")}}static setCameraOpen(e){o.set(o.KEYS.CAMERA_OPEN,e?"true":"false")}static isCameraOpen(){return"true"===o.get(o.KEYS.CAMERA_OPEN)}static setActiveQuestKey(e){e?o.set(o.KEYS.ACTIVE_QUEST_KEY,e):o.remove(o.KEYS.ACTIVE_QUEST_KEY)}static getActiveQuestKey(){return o.get(o.KEYS.ACTIVE_QUEST_KEY)}static canShoot(){return"true"===this.get(o.KEYS.CAMERA_BUTTON_ACTIVE)&&!!this.getActiveQuestKey()}static canPost(){return!o.getActiveQuestKey()}}},849:(e,t,a)=>{"use strict";a.r(t),a.d(t,{PostMirrorEvent:()=>n.Y,PostRepeatingEvent:()=>s.y});var n=a(89),s=a(476)},911:(e,t,a)=>{"use strict";a.r(t),a.d(t,{FinalEvent:()=>n.Z,FinalQuest:()=>i});var n=a(61),s=a(350),o=a(713);class i extends s.e{constructor(e,t,a={}){super(e),this.app=t,this.key=a.key||"final_quest",this.finished=!1}async activate(){this.eventManager.isEventLogged(this.key)||(console.log(`[FinalQuest] Activating final quest: ${this.key}`),await this.addDiaryEntry(this.key,!0)),console.log("[FinalQuest] Final quest initiated.")}async checkStatus(){return!0}async finish(){if(this.finished)return;await this.checkStatus()?(this.finished=!0,console.log(`[FinalQuest] Finishing quest: ${this.key}`),await this.addDiaryEntry(`${this.key}_completed`,!0),o.f.set(o.f.KEYS.GAME_FINALIZED,"true"),o.f.setActiveQuestKey(null),this.app.ghostManager&&await this.app.ghostManager.finishCurrentGhost(),this.app.viewManager&&"function"==typeof this.app.viewManager.showNotification?this.app.viewManager.showNotification("üéâ Final quest completed! Scenario ended!",{duration:15e3}):console.log("üéâ Final quest completed! Scenario ended!"),this.app.questManager&&"function"==typeof this.app.questManager.syncQuestState&&await this.app.questManager.syncQuestState(),document.dispatchEvent(new CustomEvent("questCompleted",{detail:this.key}))):this.app.viewManager&&"function"==typeof this.app.viewManager.showNotification&&this.app.viewManager.showNotification("‚ùå Final quest conditions not met!")}}}},t={};function a(n){var s=t[n];if(void 0!==s)return s.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,a),o.exports}a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.e=()=>Promise.resolve(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=a(470),t=a(166);class n{constructor(e,t){this.app=e,this.controlsPanel=t,this.effectConfig={userText:{speed:100},ghostText:{speed:100}}}playAudioWithStop(e,a){try{const t=new Audio(e);return t.play(),a&&a>0&&setTimeout((()=>{t.pause()}),a),t}catch(e){return t.S.logError(e,"playAudioWithStop"),null}}setControlsBlocked(e){if(this.app.isCameraOpen&&(e=!1),this.app.viewManager&&"function"==typeof this.app.viewManager.setControlsBlocked)this.app.viewManager.setControlsBlocked(e);else if(this.controlsPanel)try{this.controlsPanel.style.pointerEvents=e?"none":"auto"}catch(e){t.S.logError(e,"setControlsBlocked")}}animateHTMLText(e,t,a,n,s,o){e.innerHTML="";let i=0,r="",l=!1,c="";const d=setInterval((()=>{const a=t[i];if(!a)return clearInterval(d),n&&n.pause(),void(s&&s());"\n"===a?r+="<br>":("<"===a&&(l=!0),l?(c+=a,">"===a&&(r+=c,c="",l=!1)):r+=a),e.innerHTML=r,i++,"function"==typeof o&&o(e,r)}),a)}triggerMirrorEffect(){if(this.app.isCameraOpen){if(this.app.viewManager&&"function"==typeof this.app.viewManager.applyBackgroundTransition)this.app.viewManager.applyBackgroundTransition("black",1e3);else try{document.body.style.transition="background 1s",document.body.style.background="black",setTimeout((()=>{document.body.style.background=""}),1e3)}catch(e){t.S.logError(e,"triggerMirrorEffect - fallback")}this.playAudioWithStop(`${e.IO}/audio/phone_ringtone.mp3`,3e3)}else t.S.logError("Mirror effect not triggered: camera is closed.","triggerMirrorEffect")}triggerGhostAppearanceEffect(a){if(this.app.isCameraOpen)if(this.app.viewManager&&"function"==typeof this.app.viewManager.showGhostAppearanceEffect)this.app.viewManager.showGhostAppearanceEffect(a);else try{const t=document.createElement("div");Object.assign(t.style,{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",width:"200px",height:"200px",background:`url('${e.IO}/images/${a}.png') no-repeat center center`,backgroundSize:"contain",opacity:"0.7",transition:"opacity 2s"}),document.body.appendChild(t),setTimeout((()=>{t.style.opacity="0"}),3e3),setTimeout((()=>{t.remove()}),5e3)}catch(e){t.S.logError(e,"triggerGhostAppearanceEffect - fallback")}else t.S.logError("Ghost appearance effect not triggered: camera is closed.","triggerGhostAppearanceEffect")}triggerWhisperEffect(){this.playAudioWithStop("${ASSETS_PATH}/audio/whisper.mp3",5e3)}triggerGhostTextEffect(e,t,a,n){const s=n||this.effectConfig.ghostText;this.setControlsBlocked(!0);const o=new Audio("../../../../assets/audio/ghost_effect.mp3");o.play(),this.animateHTMLText(e,t,s.speed,o,(()=>{this.setControlsBlocked(!1),a&&a()}))}triggerUserTextEffect(e,t,a,n){const s=n||this.effectConfig.userText,o=document.createElement("img");o.src="../../../../assets/images/pencil.png",o.alt="Typing...",Object.assign(o.style,{width:"24px",height:"24px",position:"absolute"});const i=e.parentElement;i.style.position="relative",i.insertBefore(o,e),this.setControlsBlocked(!0);const r=new Audio("../../../../assets/audio/type_sound.mp3");r.loop=!0,r.play();this.animateHTMLText(e,t,s.speed,r,(()=>{o.remove(),this.setControlsBlocked(!1),a&&a()}),(()=>{const t=document.createElement("span");t.innerHTML="&nbsp;",e.appendChild(t);const a=t.getBoundingClientRect(),n=i.getBoundingClientRect();o.style.left=a.left-n.left+"px",o.style.top=a.top-n.top+"px",t.remove()}))}slideUpPanel(e,t=1e3,a="assets/audio/panel_slide.mp3"){e&&(e.style.transition=`transform ${t}ms ease-out, opacity ${t}ms ease-out`,e.style.transform="translateY(100%)",e.style.opacity="0",e.offsetHeight,this.playAudioWithStop(a,t),e.style.transform="translateY(0)",e.style.opacity="1")}showControlsPanelForUnregistered(){"true"!==StateManager.get("registrationCompleted")&&this.slideUpPanel(this.controlsPanel,1e3,"assets/audio/panel_slide.mp3")}applyEffectsToNewElements(e){Array.from(e).forEach((e=>{(e.matches('p[data-animate-on-board="true"]')?[e]:e.querySelectorAll('p[data-animate-on-board="true"]')).forEach((e=>{const t=e.dataset.animateEffect||"user",a=e.textContent;e.textContent="","ghost"===t?this.triggerGhostTextEffect(e,a,(()=>delete e.dataset.animateOnBoard)):this.triggerUserTextEffect(e,a,(()=>delete e.dataset.animateOnBoard))}))}))}}class s{constructor(e={}){this.dbName=e.dbName||"sqliteDB",this.storeName=e.storeName||"dbStore",this.key=e.key||"sqlite"}openDB(){return new Promise(((e,t)=>{const a=indexedDB.open(this.dbName,1);a.onerror=e=>{console.error("Error opening IndexedDB:",e.target.error),t(e.target.error)},a.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains(this.storeName)||t.createObjectStore(this.storeName)},a.onsuccess=t=>{e(t.target.result)}}))}async initDatabase(e){const t=await this.loadDatabase();let a;if(t){const n=atob(t),s=new Uint8Array(n.length);for(let e=0;e<n.length;e++)s[e]=n.charCodeAt(e);a=new e.Database(s),console.log("Database restored from IndexedDB.")}else a=new e.Database,console.log("New database instance created.");return this.migrateDatabase(a),t?console.log("Database migration complete."):console.log("New database created and tables initialized."),a}migrateDatabase(e){e.run("\n      CREATE TABLE IF NOT EXISTS diary (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        entry TEXT,\n        timestamp TEXT\n      );\n      CREATE TABLE IF NOT EXISTS apartment_plan (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        floor_number INTEGER,\n        room_data TEXT\n      );\n      CREATE TABLE IF NOT EXISTS quest_progress (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        quest_key TEXT,\n        status TEXT\n      );\n      CREATE TABLE IF NOT EXISTS ghosts (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT,\n        status TEXT,\n        progress INTEGER\n      );\n      CREATE TABLE IF NOT EXISTS events (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        event_key TEXT,\n        event_text TEXT,\n        timestamp TEXT,\n        completed INTEGER\n      );\n      CREATE TABLE IF NOT EXISTS quests (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        quest_key TEXT,\n        status TEXT,\n        current_stage INTEGER,\n        total_stages INTEGER\n      );\n      CREATE TABLE IF NOT EXISTS chat_messages (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        sender TEXT,\n        message TEXT,\n        timestamp TEXT\n      );\n    ")}async saveDatabase(e){const t=await this.openDB();return new Promise(((a,n)=>{const s=t.transaction([this.storeName],"readwrite");s.oncomplete=()=>{console.log("Database saved successfully in IndexedDB."),a()},s.onerror=e=>{console.error("Transaction error during saveDatabase:",e.target.error),n(e.target.error)};s.objectStore(this.storeName).put(e,this.key).onerror=e=>{console.error("Error saving database data:",e.target.error),n(e.target.error)}}))}async loadDatabase(){const e=await this.openDB();return new Promise(((t,a)=>{const n=e.transaction([this.storeName],"readonly");n.onerror=e=>{console.error("Transaction error during loadDatabase:",e.target.error),a(e.target.error)};const s=n.objectStore(this.storeName).get(this.key);s.onsuccess=e=>{console.log("Database loaded successfully from IndexedDB."),t(e.target.result)},s.onerror=e=>{console.error("Error loading database data:",e.target.error),a(e.target.error)}}))}async resetDatabase(){const e=await this.openDB();return new Promise(((t,a)=>{const n=e.transaction([this.storeName],"readwrite");n.oncomplete=()=>{console.log("SQL database reset successfully in IndexedDB."),t()},n.onerror=e=>{console.error("Transaction error during resetDatabase:",e.target.error),a(e.target.error)};n.objectStore(this.storeName).delete(this.key).onerror=e=>{console.error("Error deleting SQL database data:",e.target.error),a(e.target.error)}}))}async saveProfile(e){const t=await this.openDB();return new Promise(((a,n)=>{const s=t.transaction([this.storeName],"readwrite");s.oncomplete=()=>{console.log("Profile saved successfully in IndexedDB."),a()},s.onerror=e=>{console.error("Transaction error during saveProfile:",e.target.error),n(e.target.error)};s.objectStore(this.storeName).put(JSON.stringify(e),"profile").onerror=e=>{console.error("Error saving profile data:",e.target.error),n(e.target.error)}}))}async getProfile(){const e=await this.openDB();return new Promise(((t,a)=>{const n=e.transaction([this.storeName],"readonly");n.onerror=e=>{console.error("Transaction error during getProfile:",e.target.error),a(e.target.error)};const s=n.objectStore(this.storeName).get("profile");s.onsuccess=e=>{const a=e.target.result;t(a?JSON.parse(a):null)},s.onerror=e=>{console.error("Error loading profile data:",e.target.error),a(e.target.error)}}))}async resetProfile(){const e=await this.openDB();return new Promise(((t,a)=>{const n=e.transaction([this.storeName],"readwrite");n.oncomplete=()=>{console.log("Profile reset successfully in IndexedDB."),t()},n.onerror=e=>{console.error("Transaction error during resetProfile:",e.target.error),a(e.target.error)};n.objectStore(this.storeName).delete("profile").onerror=e=>{console.error("Error deleting profile:",e.target.error),a(e.target.error)}}))}}class o{constructor(e){this.dataManager=e,this.db=null,this.initDatabasePromise=this.initDatabase()}async initDatabase(){try{const t=await initSqlJs({locateFile:t=>`${e.o2}/assets/libs/db/${t}`});this.db=await this.dataManager.initDatabase(t),console.log("üìñ Database initialized!")}catch(e){t.S.logError(e,"DatabaseManager.initDatabase")}}async saveDatabase(){if(!this.db)return;const e=this.db.export();let t="";for(let a=0;a<e.length;a++)t+=String.fromCharCode(e[a]);const a=btoa(t);await this.dataManager.saveDatabase(a),console.log("Database saved (persisted) successfully.")}async addDiaryEntry(e){if(!this.db)return void t.S.logError("Database not initialized!","addDiaryEntry");const a=(new Date).toISOString();this.db.run("INSERT INTO diary (entry, timestamp) VALUES (?, ?)",[e,a]),console.log("‚úÖ Entry added:",e),await this.saveDatabase()}getDiaryEntries(){if(!this.db)return t.S.logError("Database not initialized!","getDiaryEntries"),[];const e=this.db.exec("SELECT * FROM diary ORDER BY timestamp DESC");return e.length>0?e[0].values.map((e=>{let a;try{a=JSON.parse(e[1])}catch(n){a={entry:e[1],postClass:"user-post"},t.S.logError(n,"getDiaryEntries JSON.parse")}return{id:e[0],...a,timestamp:e[2]}})):[]}addQuestProgress(e,a){this.db?(this.db.run("INSERT INTO quest_progress (quest_key, status) VALUES (?, ?)",[e,a]),console.log(`‚úÖ Quest progress added: ${e} - ${a}`),this.saveDatabase()):t.S.logError("Database not initialized!","addQuestProgress")}getQuestProgress(e){if(!this.db)return t.S.logError("Database not initialized!","getQuestProgress"),null;const a=this.db.exec("SELECT * FROM quest_progress WHERE quest_key = ?",[e]);return a.length>0?a[0].values.map((e=>({id:e[0],quest_key:e[1],status:e[2]}))):[]}addApartmentRooms(e,a){if(!this.db)return void t.S.logError("Database not initialized!","addApartmentRooms");const n=JSON.stringify(a);this.db.run("DELETE FROM apartment_plan WHERE floor_number = ?",[e]),this.db.run("INSERT INTO apartment_plan (floor_number, room_data) VALUES (?, ?)",[e,n]),console.log(`‚úÖ Apartment plan for floor ${e} saved.`),this.saveDatabase()}getApartmentPlan(e,a){if(!this.db)return t.S.logError("Database not initialized!","getApartmentPlan"),void a([]);const n=this.db.exec("SELECT room_data FROM apartment_plan WHERE floor_number = ? ORDER BY id",[e]);if(n.length>0){a(n[0].values.map((e=>{try{return JSON.parse(e[0])}catch(a){return t.S.logError(a,"getApartmentPlan JSON.parse"),e[0]}})))}else a([])}saveGhostState(e){this.db?(this.db.run("INSERT OR REPLACE INTO ghosts (id, name, status, progress)\n       VALUES ((SELECT id FROM ghosts WHERE id = ?), ?, ?, ?)",[e.id||null,e.name,e.status||"",e.progress||0]),console.log("‚úÖ Ghost state saved:",e),this.saveDatabase()):t.S.logError("Database not initialized!","saveGhostState")}getGhostState(e){if(!this.db)return t.S.logError("Database not initialized!","getGhostState"),null;const a=this.db.exec("SELECT * FROM ghosts WHERE id = ?",[e]);if(a.length>0){const e=a[0].values[0];return{id:e[0],name:e[1],status:e[2],progress:e[3]}}return null}saveEvent(e){this.db?(this.db.run("INSERT INTO events (event_key, event_text, timestamp, completed)\n       VALUES (?, ?, ?, ?)",[e.event_key,e.event_text,e.timestamp,e.completed?1:0]),console.log("‚úÖ Event saved:",e),this.saveDatabase()):t.S.logError("Database not initialized!","saveEvent")}getEvents(){if(!this.db)return t.S.logError("Database not initialized!","getEvents"),[];const e=this.db.exec("SELECT * FROM events ORDER BY timestamp DESC");return e.length>0?e[0].values.map((e=>({id:e[0],event_key:e[1],event_text:e[2],timestamp:e[3],completed:1===e[4]}))):[]}saveQuestRecord(e){this.db?(this.db.run("INSERT OR REPLACE INTO quests (id, quest_key, status, current_stage, total_stages)\n       VALUES ((SELECT id FROM quests WHERE quest_key = ?), ?, ?, ?, ?)",[e.quest_key,e.quest_key,e.status,e.current_stage,e.total_stages]),console.log("‚úÖ Quest record saved:",e),this.saveDatabase()):t.S.logError("Database not initialized!","saveQuestRecord")}getQuestRecord(e){if(!this.db)return t.S.logError("Database not initialized!","getQuestRecord"),null;const a=this.db.exec("SELECT * FROM quests WHERE quest_key = ?",[e]);if(a.length>0){const e=a[0].values[0];return{id:e[0],quest_key:e[1],status:e[2],current_stage:e[3],total_stages:e[4]}}return null}addChatMessage(e,a,n=(new Date).toISOString()){this.db?(this.db.run("INSERT INTO chat_messages (sender, message, timestamp) VALUES (?, ?, ?)",[e,a,n]),console.log(`‚úÖ Chat message added: [${e}] ${a}`),this.saveDatabase()):t.S.logError("Database not initialized!","addChatMessage")}getChatMessages(){if(!this.db)return t.S.logError("Database not initialized!","getChatMessages"),[];const e=this.db.exec("SELECT * FROM chat_messages ORDER BY timestamp ASC");return e.length>0?e[0].values.map((e=>({id:e[0],sender:e[1],message:e[2],timestamp:e[3]}))):[]}}var i=a(713),r=a(507);class l{constructor(e,a,n){this.app=n,this.container=document.getElementById(e),this.dbManager=a,this.rooms=[],this.currentFloor=1,this.isSelecting=!1,this.startCell=null,this.endCell=null,this.gridRows=16,this.gridCols=16,this.createGrid(),this.attachEvents(),this.dbManager.initDatabasePromise.then((()=>{this.loadFromDB()}));const s=document.getElementById("apartment-plan-next-btn");s?s.addEventListener("click",(()=>{s.disabled=!0,this.app.viewManager.goToSelfieScreen(this.app)})):t.S.logError("Apartment plan Next button not found during initialization.","ApartmentPlanManager")}createGrid(){this.gridContainer=document.createElement("div"),this.gridContainer.style.display="grid",this.gridContainer.style.gridTemplateColumns=`repeat(${this.gridCols}, 50px)`,this.gridContainer.style.gridAutoRows="50px",this.gridContainer.style.gap="1px",this.container.innerHTML="",this.container.appendChild(this.gridContainer),this.initGrid()}initGrid(){this.gridContainer.innerHTML="";for(let e=0;e<this.gridRows;e++)for(let t=0;t<this.gridCols;t++){const a=document.createElement("div");a.dataset.row=e,a.dataset.col=t,a.style.width="50px",a.style.height="50px",a.style.border="1px solid #ccc",a.style.textAlign="center",a.style.verticalAlign="middle",a.style.cursor="pointer",this.gridContainer.appendChild(a)}}attachEvents(){this.gridContainer.addEventListener("mousedown",(e=>this.startSelection(e))),this.gridContainer.addEventListener("mousemove",(e=>this.updateSelection(e))),document.addEventListener("mouseup",(e=>this.finishSelection(e))),this.gridContainer.addEventListener("touchstart",(e=>this.handleTouchStart(e))),this.gridContainer.addEventListener("touchmove",(e=>this.handleTouchMove(e))),this.gridContainer.addEventListener("touchend",(e=>this.handleTouchEnd(e)))}handleTouchStart(e){e.preventDefault();const t=e.touches[0],a=document.elementFromPoint(t.clientX,t.clientY);a&&"DIV"===a.tagName&&this.startSelection({clientX:t.clientX,clientY:t.clientY,target:a})}handleTouchMove(e){e.preventDefault();const t=e.touches[0],a=document.elementFromPoint(t.clientX,t.clientY);a&&"DIV"===a.tagName&&this.updateSelection({clientX:t.clientX,clientY:t.clientY,target:a})}handleTouchEnd(e){e.preventDefault(),this.finishSelection(e)}startSelection(e){if("DIV"===e.target.tagName){this.isSelecting=!0;const t=parseInt(e.target.dataset.row),a=parseInt(e.target.dataset.col);this.startCell={row:t,col:a},this.endCell={row:t,col:a},this.highlightSelection()}}updateSelection(e){if(this.isSelecting&&"DIV"===e.target.tagName){const t=parseInt(e.target.dataset.row),a=parseInt(e.target.dataset.col);this.endCell={row:t,col:a},this.highlightSelection()}}finishSelection(e){e.target.closest("#location-type-modal-overlay")||this.isSelecting&&(this.isSelecting=!1,this.startCell&&this.endCell||(this.startCell={row:0,col:0},this.endCell={row:this.gridRows-1,col:this.gridCols-1}),this.app.viewManager.showLocationTypeModal((e=>{this.app&&this.app.profileManager&&this.app.profileManager.saveLocationType(e);const t={floor:this.currentFloor,startRow:Math.min(this.startCell.row,this.endCell.row),startCol:Math.min(this.startCell.col,this.endCell.col),endRow:Math.max(this.startCell.row,this.endCell.row),endCol:Math.max(this.startCell.col,this.endCell.col),type:e};this.rooms.push(t),this.saveToDB(),this.renderRooms(),this.app&&this.app.viewManager&&"function"==typeof this.app.viewManager.setApartmentPlanNextButtonEnabled&&this.app.viewManager.setApartmentPlanNextButtonEnabled(!0)}),(()=>{console.log("No location selected, default type 'Other' chosen."),this.app&&this.app.profileManager&&this.app.profileManager.saveLocationType("Other");const e={floor:this.currentFloor,startRow:Math.min(this.startCell.row,this.endCell.row),startCol:Math.min(this.startCell.col,this.endCell.col),endRow:Math.max(this.startCell.row,this.endCell.row),endCol:Math.max(this.startCell.col,this.endCell.col),type:"Other"};this.rooms.push(e),this.saveToDB(),this.renderRooms(),this.app&&this.app.viewManager&&"function"==typeof this.app.viewManager.setApartmentPlanNextButtonEnabled&&this.app.viewManager.setApartmentPlanNextButtonEnabled(!0)})))}highlightSelection(){if(Array.from(this.gridContainer.children).forEach((e=>{e.style.backgroundColor=""})),!this.startCell||!this.endCell)return;const e=Math.min(this.startCell.row,this.endCell.row),t=Math.max(this.startCell.row,this.endCell.row),a=Math.min(this.startCell.col,this.endCell.col),n=Math.max(this.startCell.col,this.endCell.col);for(let s=e;s<=t;s++)for(let e=a;e<=n;e++){const t=this.gridContainer.querySelector(`div[data-row='${s}'][data-col='${e}']`);t&&(t.style.backgroundColor="rgba(255, 0, 0, 0.3)")}}renderRooms(){this.initGrid(),this.rooms.forEach((e=>{if(e.floor===this.currentFloor)for(let t=e.startRow;t<=e.endRow;t++)for(let a=e.startCol;a<=e.endCol;a++){const e=this.gridContainer.querySelector(`div[data-row='${t}'][data-col='${a}']`);e&&(e.style.backgroundColor="rgba(0, 150, 255, 0.5)")}}))}saveToDB(){const e=this.rooms.filter((e=>e.floor===this.currentFloor));console.log("Saving rooms to DB: ",e),this.dbManager.addApartmentRooms(this.currentFloor,e)}loadFromDB(){console.log("Loading data for floor: ",this.currentFloor),this.dbManager.getApartmentPlan(this.currentFloor,(e=>{e&&0!==e.length?console.log(`Rooms found for floor ${this.currentFloor}: `,e):console.log(`No rooms found for floor ${this.currentFloor}, using default.`),this.rooms=e,this.renderRooms()}))}nextFloor(){console.log("Switching to next floor"),this.currentFloor++,this.loadFromDB()}prevFloor(){this.currentFloor>1&&(console.log("Switching to previous floor"),this.currentFloor--,this.loadFromDB())}}class c{static render(e,t){return e.replace(/{{\s*([\s\S]+?)\s*}}/g,((e,a)=>{const n=a.trim();return t.hasOwnProperty(n)?t[n]:e}))}static async renderFile(e,t={}){const a=await fetch(e);if(!a.ok)throw new Error(`[TemplateEngine] Failed to load template: ${e}`);const n=await a.text();return c.render(n,t)}}class d{constructor(e){this.app=e,this.loadingOlderPosts=!1,this.controlsPanel=document.getElementById("controls-panel"),this.languageSelector=document.getElementById("language-selector"),this.globalCamera=document.getElementById("global-camera"),this.postBtn=document.getElementById("post-btn"),this.toggleCameraBtn=document.getElementById("toggle-camera"),this.toggleDiaryBtn=document.getElementById("toggle-diary"),this.resetDataBtn=document.getElementById("reset-data"),this.exportProfileBtn=document.getElementById("export-profile-btn"),this.updateBtn=document.getElementById("update-btn"),this.diaryContainer=document.getElementById("diary"),this.cameraManager=null,this.languageManager=null,this.postBtn&&(this.postBtn.disabled=!0,i.f.set(i.f.KEYS.POST_BUTTON_DISABLED,"true"),console.log("[ViewManager] Post button disabled on initialization."))}setCameraManager(e){this.cameraManager=e,console.log("[ViewManager] Camera manager set.")}setLanguageManager(e){this.languageManager=e}getRegistrationData(){return this.nameInput&&this.genderSelect?{name:this.nameInput.value.trim(),gender:this.genderSelect.value.trim(),language:this.languageSelector?this.languageSelector.value:"en"}:null}bindEvents(e){this.languageSelector&&this.languageSelector.addEventListener("change",(()=>{console.log("Language select changed:",this.languageSelector.value)})),this.toggleCameraBtn&&this.toggleCameraBtn.addEventListener("click",(()=>{this.toggleCameraView(e)})),this.toggleDiaryBtn&&this.toggleDiaryBtn.addEventListener("click",(()=>{this.toggleCameraView(e)})),this.resetDataBtn&&this.resetDataBtn.addEventListener("click",(()=>{console.log("Reset Data button clicked."),e.profileManager.resetProfile()})),this.exportProfileBtn&&this.exportProfileBtn.addEventListener("click",(()=>{console.log("Export Profile button clicked."),this.exportProfile(e)})),this.updateBtn&&this.updateBtn.addEventListener("click",(()=>{console.log("Update button clicked."),this.clearCache()}));const t=document.getElementById("chat-btn");t?t.addEventListener("click",(()=>{console.log("Chat button clicked. Triggering toggleChat()."),this.toggleChat(e)})):console.error("Chat button (id='chat-btn') not found in the DOM."),this.postBtn?this.postBtn.addEventListener("click",(()=>{console.log("Post button clicked. Delegating to ghostManager.handlePostButtonClick()..."),e.ghostManager.handlePostButtonClick()})):console.error("Post button (id='post-btn') not found in the DOM.")}async loadTemplate(a,n={}){const s=`${e.o2}/templates/${a}_template.html`;try{const e=await fetch(s);if(!e.ok)throw new Error(`Failed to load template: ${s}`);const t=await e.text(),o=c.render(t,n),i=document.getElementById("global-content");if(i){i.innerHTML+=o;const e=i.lastElementChild;if(console.log(`[ViewManager] Loaded template for screen: ${a}`),this.languageManager&&"function"==typeof this.languageManager.updateContainerLanguage&&this.languageManager.updateContainerLanguage(e),this.app&&this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.applyEffectsToNewElements){const t=e.querySelectorAll("[data-animate-on-board='true']");this.app.visualEffectsManager.applyEffectsToNewElements(t)}return e}throw new Error("Global content container (id='global-content') not found.")}catch(e){return t.S.logError(e,"loadTemplate"),null}}async switchScreen(e,t,a){document.querySelectorAll("section").forEach((e=>{e.style.display="none"}));let n=document.getElementById(e);if(!n&&(n=await this.loadTemplate(e,{}),!n))return void console.error(`[ViewManager] Failed to load screen: ${e}`);if(n.style.display="block",console.log(`[ViewManager] Switched to screen: ${e}`),this.app&&this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.applyEffectsToNewElements){const e=n.querySelectorAll("[data-animate-on-board='true']");this.app.visualEffectsManager.applyEffectsToNewElements(e)}if("main-screen"===e){const e=n.querySelector("#diary");e&&(this.diaryContainer=e,console.log("[ViewManager] Updated diary container for main-screen."),await this.loadLatestDiaryPosts(),window.addEventListener("scroll",this.onScrollLoadOlder.bind(this),{passive:!0}))}if("landing-screen"===e){const e=n.querySelector("#start-registration-btn");e&&e.addEventListener("click",(()=>{this.switchScreen("registration-screen","registration-buttons",a),console.log("[ViewManager] Start registration button clicked, switching to registration screen.")}))}if("registration-screen"===e){this.nameInput=n.querySelector("#player-name"),this.genderSelect=n.querySelector("#player-gender"),this.nextStepBtn=n.querySelector("#next-step-btn");const e=()=>{const e=this.nameInput&&this.nameInput.value.trim().length>0,t=this.genderSelect&&""!==this.genderSelect.value;this.nextStepBtn&&(this.nextStepBtn.disabled=!(e&&t))};this.nameInput&&this.nameInput.addEventListener("input",(()=>{console.log("Name input changed:",this.nameInput.value),e()})),this.genderSelect&&this.genderSelect.addEventListener("change",(()=>{console.log("Gender select changed:",this.genderSelect.value),e()})),this.nextStepBtn&&this.nextStepBtn.addEventListener("click",(async()=>{await this.goToApartmentPlanScreen(a),console.log("[ViewManager] Registration next button clicked. Moving to apartment plan screen.")}))}if("selfie-screen"===e){const e=document.getElementById("capture-btn");e?e.onclick=()=>{console.log("Capture button clicked. Capturing selfie..."),this.captureSelfie(a)}:console.error("Capture button (id='capture-btn') not found in the DOM.");const t=document.getElementById("complete-registration");t?t.onclick=()=>{console.log("Complete registration button clicked."),this.completeRegistration(a)}:console.error("Complete registration button (id='complete-registration') not found in the DOM.")}if("apartment-plan-screen"===e&&a){const e=document.getElementById("prev-floor-btn");e&&e.addEventListener("click",(()=>{a.apartmentPlanManager&&a.apartmentPlanManager.prevFloor()}));const t=document.getElementById("next-floor-btn");t&&t.addEventListener("click",(()=>{a.apartmentPlanManager&&a.apartmentPlanManager.nextFloor()}));const s=n.querySelector("#apartment-plan-next-btn");s&&s.addEventListener("click",(()=>{console.log("Apartment Plan next button clicked. Going to selfie screen."),this.goToSelfieScreen(a)}))}if(document.querySelectorAll("#controls-panel > .buttons").forEach((e=>{e.style.display="none",e.style.pointerEvents="none"})),t){const a=document.getElementById(t);if(a){if(a.style.display="flex",a.style.pointerEvents="auto","main-screen"===e){const e=a.querySelector("#toggle-diary");e&&(e.style.display="none");const t=a.querySelector("#btn_shoot");t&&(t.style.display="none")}console.log(`[ViewManager] Controls panel updated for group: ${t}`)}}const s=document.getElementById("chat-button-container");s&&(s.style.display="flex",s.style.pointerEvents="auto",console.log("[ViewManager] Chat button container set to visible."));const o=document.getElementById("language-container");o&&(o.style.display="landing-screen"===e?"block":"none")}showToggleCameraButton(){this.toggleCameraBtn&&(this.toggleCameraBtn.style.display="inline-block",console.log("[ViewManager] Toggle Camera button shown."))}updateProfileDisplay(e){const t=document.getElementById("profile-name"),a=document.getElementById("profile-photo");t&&(t.textContent=e.name),a&&(a.src=e.selfie,a.style.display="block"),console.log("[ViewManager] Profile display updated.")}updateSelfiePreview(e){const a=document.getElementById("selfie-thumbnail");a?(a.src=e,a.style.display="block",console.log("[ViewManager] Selfie preview updated.")):t.S.logError("Selfie preview element not found.","updateSelfiePreview")}enableCompleteButton(){const e=document.getElementById("complete-registration");e&&(e.disabled=!1,console.log("[ViewManager] Complete button enabled."))}disableCompleteButton(){const e=document.getElementById("complete-registration");e&&(e.disabled=!0,console.log("[ViewManager] Complete button disabled."))}getSelfieSource(){const e=document.getElementById("selfie-thumbnail");return e?e.src:""}getImportFile(){const e=document.getElementById("import-file");return e&&e.files.length>0?e.files[0]:null}showGlobalCamera(){this.globalCamera?(this.globalCamera.style.display="block",console.log("[ViewManager] Global camera displayed.")):t.S.logError("Global camera element not found.","showGlobalCamera")}hideGlobalCamera(){this.globalCamera?(this.globalCamera.style.display="none",console.log("[ViewManager] Global camera hidden.")):t.S.logError("Global camera element not found.","hideGlobalCamera")}showDiaryView(){const e=document.getElementById("diary");if(e&&this.globalCamera){e.style.display="block",this.globalCamera.style.display="none",this.toggleCameraBtn&&(this.toggleCameraBtn.style.display="inline-block"),this.toggleDiaryBtn&&(this.toggleDiaryBtn.style.display="none");const t=document.getElementById("btn_shoot");t&&(t.style.display="none"),this.showPostButton(),console.log("[ViewManager] Switched to diary view.")}}showCameraView(){const e=document.getElementById("diary");if(e&&this.globalCamera){e.style.display="none",this.globalCamera.style.display="flex",this.toggleCameraBtn&&(this.toggleCameraBtn.style.display="none"),this.toggleDiaryBtn&&(this.toggleDiaryBtn.style.display="inline-block"),this.hidePostButton();const t=document.getElementById("btn_shoot");t&&(t.style.display="inline-block",console.log("[ViewManager] Shoot button shown for camera view; quest UI will manage its enabled state.")),console.log("[ViewManager] Switched to camera view.")}}showPostButton(){this.postBtn&&(this.postBtn.style.display="inline-block",console.log("[ViewManager] Post button shown."))}hidePostButton(){this.postBtn&&(this.postBtn.style.display="none",console.log("[ViewManager] Post button hidden."))}setPostButtonEnabled(e){const t=document.getElementById("post-btn");if(t){"true"===i.f.get(i.f.KEYS.GAME_FINALIZED)?(t.disabled=!0,i.f.set(i.f.KEYS.POST_BUTTON_DISABLED,"true"),console.log("[ViewManager] Game finalized. Post button disabled.")):(t.disabled=!e,i.f.set(i.f.KEYS.POST_BUTTON_DISABLED,e?"false":"true"),console.log(`[ViewManager] Post button set to ${e?"enabled":"disabled"}.`))}}setCameraButtonActive(e){const t=document.getElementById("toggle-camera");t&&(e?t.classList.add("active"):t.classList.remove("active"),i.f.set(i.f.KEYS.CAMERA_BUTTON_ACTIVE,JSON.stringify(e)),console.log(`[ViewManager] Camera button active state set to ${e}.`))}restoreCameraButtonState(){const e=!!i.f.getActiveQuestKey();this.setCameraButtonActive(e),console.log("[ViewManager] Camera button state restored using activeQuestKey:",e)}setShootButtonActive(e){const a=document.getElementById("btn_shoot");a?(a.disabled=!e,a.style.pointerEvents=e?"auto":"none",e?a.classList.add("active"):a.classList.remove("active"),console.log(`[ViewManager] Shoot button active state set to ${e}.`)):t.S.logError("Shoot button not found.","setShootButtonActive")}restoreShootButtonState(){this.setShootButtonActive(!1),console.log("[ViewManager] Shoot button state reset to disabled on restore.")}setApartmentPlanNextButtonEnabled(e){const a=document.getElementById("apartment-plan-next-btn");a?(a.disabled=!e,console.log(`Apartment Plan Next button is now ${e?"enabled":"disabled"}.`)):t.S.logError("Apartment plan Next button not found.","setApartmentPlanNextButtonEnabled")}startMirrorQuestUI(e){const a=document.getElementById(e.statusElementId);a&&(a.style.display="block",a.textContent="No match...",console.log("[ViewManager] Mirror quest UI started, status set to 'No match...'"));const n=document.getElementById(e.shootButtonId);if(n){n.style.display="inline-block";const t=void 0!==e.initialActive&&e.initialActive;this.setShootButtonActive(t),n.style.pointerEvents=t?"auto":"none",n.onclick=()=>{this.setShootButtonActive(!1),"function"==typeof e.onShoot&&e.onShoot()},console.log("[ViewManager] Shoot button for mirror quest initialized.")}else t.S.logError("Shoot button not found in the DOM.","startMirrorQuestUI")}updateMirrorQuestStatus(e,t,a){const n=document.getElementById(t);n&&(n.textContent=e?"You are in front of the mirror!":"No match...");const s=document.getElementById(a);s&&(s.disabled=!e,s.style.pointerEvents=e?"auto":"none"),console.log(`[ViewManager] Mirror quest status updated. Success: ${e}`)}stopMirrorQuestUI(e){const t=document.getElementById(e);t&&(t.style.display="none"),this.setCameraButtonActive(!1),this.setShootButtonActive(!1),console.log("[ViewManager] Mirror quest UI stopped.")}startRepeatingQuestUI(e){const a=document.getElementById(e.statusElementId);a&&(a.style.display="block",a.textContent=`Stage ${e.stage} of ${e.totalStages}: find "${e.quest.currentTarget}"`);const n=document.getElementById(e.shootButtonId);n?(n.style.display="inline-block",this.setShootButtonActive(!1),n.style.pointerEvents="none",n.onclick=()=>{e.quest&&e.quest.finished?console.log("[ViewManager] Quest is finished; ignoring Shoot click."):(this.setShootButtonActive(!1),"function"==typeof e.onShoot&&e.onShoot())},console.log("[ViewManager] Shoot button for repeating quest initialized.")):t.S.logError("Shoot button not found in the DOM.","startRepeatingQuestUI")}disableShootButton(e){const t=document.getElementById(e);t&&(t.disabled=!0,t.style.pointerEvents="none",console.log("[ViewManager] Shoot button disabled."))}stopRepeatingQuestUI(e){const t=document.getElementById(e);t&&(t.style.display="none"),this.setCameraButtonActive(!1),this.setShootButtonActive(!1),console.log("[ViewManager] Repeating quest UI stopped.")}updateUIAfterQuestStage({postEnabled:e,cameraActive:t,shootActive:a}){"boolean"==typeof e&&this.setPostButtonEnabled(e),"boolean"==typeof t&&this.setCameraButtonActive(t),"boolean"==typeof a&&this.setShootButtonActive(a),console.log("[ViewManager] UI updated after quest stage:",{postEnabled:e,cameraActive:t,shootActive:a})}createTopCameraControls(){const e=document.getElementById("top-camera-controls");e&&e.remove();const t=document.createElement("div");t.id="top-camera-controls",Object.assign(t.style,{position:"fixed",top:"0",left:"0",width:"100%",padding:"10px",background:"rgba(0, 0, 0, 0.5)",display:"flex",justifyContent:"center",zIndex:"2100"});const a=document.createElement("button");a.className="button is-info",a.innerText="AR Mode",a.onclick=()=>{this.cameraManager&&this.cameraManager.startARMode()},t.appendChild(a);const n=document.createElement("button");n.className="button is-primary",n.style.marginLeft="10px",n.innerText="Start AI Detection",n.onclick=()=>{this.cameraManager&&this.cameraManager.startAIDetection()},t.appendChild(n);const s=document.createElement("button");s.className="button is-warning",s.style.marginLeft="10px",s.innerText="Night Vision",s.onclick=()=>{this.cameraManager&&this.cameraManager.applyFilter("nightVision")},t.appendChild(s);const o=document.createElement("button");o.className="button is-warning",o.style.marginLeft="10px",o.innerText="Black & White",o.onclick=()=>{this.cameraManager&&this.cameraManager.applyFilter("blackWhite")},t.appendChild(o);const i=document.createElement("button");i.className="button",i.style.marginLeft="10px",i.innerText="Clear Filter",i.onclick=()=>{this.cameraManager&&this.cameraManager.applyFilter("")},t.appendChild(i),document.body.appendChild(t),console.log("[ViewManager] Top camera controls created.")}applyBackgroundTransition(e,t){document.body.style.transition=`background ${t}ms`,document.body.style.background=e,setTimeout((()=>{document.body.style.background=""}),t),console.log(`[ViewManager] Applied background transition with color ${e} for ${t}ms.`)}showGhostAppearanceEffect(t){const a=document.createElement("div");Object.assign(a.style,{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",width:"200px",height:"200px",background:`url('${e.o2}/assets/images/${t}.png') no-repeat center center`,backgroundSize:"contain",opacity:"0.7",transition:"opacity 2s"}),document.body.appendChild(a),setTimeout((()=>{a.style.opacity="0"}),3e3),setTimeout((()=>{a.remove()}),5e3),console.log(`[ViewManager] Ghost appearance effect triggered for ghost ${t}.`)}showNotification(e,{actionText:t,onAction:a,duration:n}={}){const s=()=>{const s=document.createElement("div");if(s.textContent=e,Object.assign(s.style,{position:"fixed",bottom:"20px",left:"50%",transform:"translateX(-50%)",backgroundColor:"rgba(0,0,0,0.8)",color:"white",padding:"10px 20px",borderRadius:"5px",zIndex:1e4,opacity:"0",transition:"opacity 0.5s"}),t&&"function"==typeof a){const e=document.createElement("button");e.textContent=t,Object.assign(e.style,{marginLeft:"10px",background:"white",color:"black",border:"none",padding:"5px 10px",borderRadius:"3px",cursor:"pointer"}),e.addEventListener("click",a),s.appendChild(e)}document.body.appendChild(s),setTimeout((()=>{s.style.opacity="1"}),100);const o=null!=n?n:3e3;o>0&&setTimeout((()=>{s.style.opacity="0",setTimeout((()=>s.remove()),500)}),o),console.log("[ViewManager] Notification shown:",e)},o=document.getElementById("loader")||document.querySelector(".loader");if(o){new MutationObserver(((e,t)=>{document.body.contains(o)||(t.disconnect(),s())})).observe(document.body,{childList:!0,subtree:!0})}else s()}setControlsBlocked(e){this.controlsPanel&&(this.controlsPanel.style.pointerEvents=e?"none":"auto",console.log(`[ViewManager] Controls ${e?"blocked":"unblocked"}.`))}clearCache(){"serviceWorker"in navigator&&navigator.serviceWorker.controller?(navigator.serviceWorker.controller.postMessage({action:"CLEAR_CACHE"}),console.log("Clear cache message sent to Service Worker.")):console.warn("No active Service Worker controller found.")}async goToApartmentPlanScreen(e){const a=this.getRegistrationData();a?(i.f.set("regData",JSON.stringify(a)),await this.switchScreen("apartment-plan-screen","apartment-plan-buttons",e),e.apartmentPlanManager||(e.apartmentPlanManager=new l("apartment-plan-container",e.databaseManager,e))):t.S.showError("Registration data missing.")}goToSelfieScreen(e){this.switchScreen("selfie-screen","selfie-buttons",e),this.showGlobalCamera(),e.cameraSectionManager&&e.cameraSectionManager.startCamera(),this.disableCompleteButton()}captureSelfie(e){const a=e.cameraSectionManager.videoElement;if(!a||!a.srcObject)return t.S.logError("Camera is not active!","captureSelfie"),void t.S.showError("Error: Camera is not active.");if(a.readyState<2)return t.S.logError("Camera is not ready yet.","captureSelfie"),void t.S.showError("Please wait for the camera to load.");try{const t=document.createElement("canvas");t.width=a.videoWidth||640,t.height=a.videoHeight||480;const n=t.getContext("2d");if(!n)throw new Error("Failed to get 2D drawing context.");n.drawImage(a,0,0,t.width,t.height);const s=r.H.convertToGrayscale(t);this.updateSelfiePreview(s),this.enableCompleteButton(),e.selfieData=s,console.log("‚úÖ Selfie captured successfully!")}catch(e){t.S.logError(e,"captureSelfie"),t.S.showError("Error capturing selfie! Please try again.")}}completeRegistration(e){const a=this.getSelfieSource();if(!a||""===a)return void t.S.showError("Please capture your selfie before completing registration.");const n=i.f.get("regData");if(!n)return void t.S.showError("Registration data missing.");const s=JSON.parse(n),o={name:s.name,gender:s.gender,language:this.languageSelector?this.languageSelector.value:"en",selfie:a};e.profileManager.saveProfile(o).then((()=>{i.f.set("registrationCompleted","true"),e.cameraSectionManager.stopCamera(),this.hideGlobalCamera(),this.switchScreen("main-screen","main-buttons",e),this.showToggleCameraButton();const t=i.f.getActiveQuestKey();this.setPostButtonEnabled(Boolean(t)),e.profileManager.getProfile().then((t=>{this.updateProfileDisplay(t),e.selfieData=t.selfie})),e.gameEventManager.autoLaunchWelcomeEvent()}))}toggleCameraView(e){e.isCameraOpen?(this.showDiaryView(),e.cameraSectionManager.stopCamera(),e.isCameraOpen=!1,i.f.setCameraOpen(!1),console.log("Camera closed and state saved.")):(this.showCameraView(),e.isCameraOpen=!0,i.f.setCameraOpen(!0),e.cameraSectionManager.startCamera(),console.log("Camera opened and state saved."))}exportProfile(e){e.profileManager.exportProfileData(e.databaseManager,e.apartmentPlanManager)}importProfile(e){const a=this.getImportFile();a?e.profileManager.importProfileData(a,e.databaseManager,e.apartmentPlanManager):t.S.showError("Please select a profile file to import.")}toggleChat(e){e.chatManager&&e.chatManager.container?"block"===e.chatManager.container.style.display?e.chatManager.hide():e.chatManager.show():console.error("ChatManager is not initialized or chat container not found.")}showLocationTypeModal(e,t){const a=document.createElement("div");a.id="location-type-modal-overlay",Object.assign(a.style,{position:"fixed",top:"0",left:"0",width:"100%",height:"100%",backgroundColor:"rgba(0,0,0,0.5)",display:"flex",justifyContent:"center",alignItems:"center",zIndex:"3000"});const n=document.createElement("div");n.id="location-type-modal",Object.assign(n.style,{backgroundColor:"#fff",padding:"20px",borderRadius:"8px",maxWidth:"400px",width:"90%",textAlign:"center"});const s=document.createElement("h3");s.textContent="Select location type",n.appendChild(s);const o=document.createElement("select");["Kitchen","Bedroom","Living Room","Bathroom","Corridor","Other","Entrance","Office","Library","Kids Room","Storage","Garage"].forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,o.appendChild(t)})),o.value="Other",o.style.marginBottom="15px",o.style.display="block",o.style.width="100%",n.appendChild(o);const i=document.createElement("div");i.style.marginTop="15px";const r=document.createElement("button");r.textContent="Confirm",r.style.marginRight="10px",r.addEventListener("click",(()=>{console.log("Confirm button clicked, selected type:",o.value);const t=o.value;e&&e(t),setTimeout((()=>{a.remove()}),50)})),i.appendChild(r);const l=document.createElement("button");l.textContent="Cancel",l.addEventListener("click",(()=>{console.log("Cancel button clicked."),t&&t(),a.remove()})),i.appendChild(l),n.appendChild(i),a.appendChild(n),document.body.appendChild(a)}renderDiary(e,t,a){if(this.diaryContainer){if(this.diaryContainer.innerHTML="",!e||0===e.length){const e=this.languageManager&&this.languageManager.translate("no_diary_entries","Diary is empty.")||"Diary is empty.",t=document.createElement("div");return t.className="diary-empty",t.textContent=e,void this.diaryContainer.appendChild(t)}e.forEach((e=>{let t;if(e.entry.includes("data:image")){const a=e.entry,n=a.indexOf("data:image"),s=a.slice(0,n).trim(),o=a.slice(n).trim(),i='\n          <div class="diary-entry {{postClass}}" data-animate-on-board="true">\n            <p>{{text}}</p>\n            <img src="{{img}}" alt="Diary Image" data-animate-on-board="true" />\n            <span class="diary-timestamp">{{timestamp}}</span>\n          </div>\n        ';t=c.render(i,{postClass:e.postClass,text:s,img:o,timestamp:e.timestamp})}else{const a='\n          <div class="diary-entry {{postClass}}" data-animate-on-board="true">\n            <p>{{entry}}</p>\n            <span class="diary-timestamp">{{timestamp}}</span>\n          </div>\n        ';t=c.render(a,{postClass:e.postClass,entry:e.entry,timestamp:e.timestamp})}this.diaryContainer.innerHTML+=t})),console.log("[ViewManager] Diary updated with "+e.length+" entries.")}else console.error("Diary container not set. Cannot render diary entries.")}async loadLatestDiaryPosts(e=3){const t=await this.app.databaseManager.getDiaryEntries();t.sort(((e,t)=>new Date(t.timestamp)-new Date(e.timestamp)));const a=t.slice(0,e);this.renderDiary(a,this.app.languageManager.getLanguage(),this.app.visualEffectsManager)}async addSingleDiaryPost(t){if(!this.diaryContainer)return;let a=t.text,n="";if(t.text.includes("data:image")){const e=t.text.indexOf("data:image");a=t.text.slice(0,e).trim(),n=t.text.slice(e).trim()}const s=n?`<img src="${n}" alt="Diary image" />`:"",o=`${e.o2}/templates/diaryentry_screen-template.html`,i=await c.renderFile(o,{postClass:t.postClass,text:a,imgTag:s,timestamp:t.timestamp});this.diaryContainer.insertAdjacentHTML("afterbegin",i);const r=this.diaryContainer.querySelector('.diary-entry:first-child p[data-animate-on-board="true"]');r&&this.app.visualEffectsManager&&this.app.visualEffectsManager.applyEffectsToNewElements([r])}async loadEarlierDiaryPosts(t=3){const a=this.diaryContainer.querySelectorAll(".diary-entry").length,n=await this.app.databaseManager.getDiaryEntries();n.sort(((e,t)=>new Date(t.timestamp)-new Date(e.timestamp)));const s=n.slice(a,a+t),o=`${e.o2}/templates/diaryentry_screen-template.html`;for(const e of s){let t=e.entry,a="";if(t.includes("data:image")){const e=t.indexOf("data:image"),n=t.slice(e).trim();t=t.slice(0,e).trim(),a=`<img src="${n}" alt="Diary image" />`}const n=await c.renderFile(o,{postClass:e.postClass,text:t,imgTag:a,timestamp:e.timestamp});this.diaryContainer.insertAdjacentHTML("beforeend",n)}}async onScrollLoadOlder(){if(this.loadingOlderPosts)return;window.innerHeight+window.scrollY>=document.documentElement.scrollHeight-150&&(this.loadingOlderPosts=!0,await this.loadEarlierDiaryPosts(),this.loadingOlderPosts=!1)}}const g={en:{welcome:"Welcome!",post_repeating_event:"–û—Ç–ª–∏—á–Ω–æ, —Ç—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –∑–∞–¥–∞–Ω–∏–µ–º! –í–æ—Ç —Ç–µ–±–µ –Ω–æ–≤–æ–µ.",enter_name:"Enter your name:",select_gender:"Select your gender:",male:"Male",female:"Female",other:"Other",next:"Next",take_selfie:"Take a Selfie",capture:"Capture",complete:"Complete",diary:"Your Diary",empty_diary:"No entries yet...",select_language:"Select Language",reset:"Reset Data",export:"Export Profile",import_profile:"Import Profile",import:"Import",answer:"Answer",ignore:"Ignore",open_camera:"Open Camera",open_diary:"Open Diary",mirror_quest:"They are asking me to come to the mirror...",ignored_call:"I didn't answer, I don't know who it was. Hm.... Text. ‚Äú–ó‚Äù. What would that mean...",what_was_it:"What was that?"},ru:{welcome:"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",post_repeating_event:"–û—Ç–ª–∏—á–Ω–æ, —Ç—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –∑–∞–¥–∞–Ω–∏–µ–º! –í–æ—Ç —Ç–µ–±–µ –Ω–æ–≤–æ–µ.",enter_name:"–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:",select_gender:"–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª:",male:"–ú—É–∂—Å–∫–æ–π",female:"–ñ–µ–Ω—Å–∫–∏–π",other:"–î—Ä—É–≥–æ–π",next:"–î–∞–ª–µ–µ",take_selfie:"–°–¥–µ–ª–∞–π—Ç–µ —Å–µ–ª—Ñ–∏",capture:"–°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ",complete:"–ó–∞–≤–µ—Ä—à–∏—Ç—å",diary:"–í–∞—à –¥–Ω–µ–≤–Ω–∏–∫",empty_diary:"–ó–∞–ø–∏—Å–µ–π –ø–æ–∫–∞ –Ω–µ—Ç...",select_language:"–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫",reset:"–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",export:"–≠–∫—Å–ø–æ—Ä—Ç –ø—Ä–æ—Ñ–∏–ª—è",import_profile:"–ò–º–ø–æ—Ä—Ç –ø—Ä–æ—Ñ–∏–ª—è",import:"–ò–º–ø–æ—Ä—Ç",answer:"–û—Ç–≤–µ—Ç–∏—Ç—å",ignore:"–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å",open_camera:"–û—Ç–∫—Ä—ã—Ç—å –∫–∞–º–µ—Ä—É",open_diary:"–û—Ç–∫—Ä—ã—Ç—å –¥–Ω–µ–≤–Ω–∏–∫",mirror_quest:"–û–Ω–∏ –ø—Ä–æ—Å—è—Ç –ø–æ–¥–æ–π—Ç–∏ –º–µ–Ω—è –∫ –∑–µ—Ä–∫–∞–ª—É.",ignored_call:'–Ø –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª(–∞), —è –Ω–µ –∑–Ω–∞—é, –∫—Ç–æ —ç—Ç–æ. –•–º.... –°–º—Å. "–ó". –ß—Ç–æ –±—ã —ç—Ç–æ –∑–Ω–∞—á–∏–ª–æ...',what_was_it:"–ß—Ç–æ —ç—Ç–æ –±—ã–ª–æ?"},uk:{welcome:"–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ!",post_repeating_event:"–û—Ç–ª–∏—á–Ω–æ, —Ç—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –∑–∞–¥–∞–Ω–∏–µ–º! –í–æ—Ç —Ç–µ–±–µ –Ω–æ–≤–æ–µ.",enter_name:"–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:",select_gender:"–û–±–µ—Ä—ñ—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç—å:",male:"–ß–æ–ª–æ–≤—ñ—á–∞",female:"–ñ—ñ–Ω–æ—á–∞",other:"–Ü–Ω—à–∞",next:"–î–∞–ª—ñ",take_selfie:"–ó—Ä–æ–±—ñ—Ç—å —Å–µ–ª—Ñ—ñ",capture:"–ó—Ä–æ–±–∏—Ç–∏ —Ñ–æ—Ç–æ",complete:"–ó–∞–≤–µ—Ä—à–∏—Ç–∏",diary:"–í–∞—à —â–æ–¥–µ–Ω–Ω–∏–∫",empty_diary:"–ó–∞–ø–∏—Å—ñ–≤ –ø–æ–∫–∏ –Ω–µ–º–∞—î...",select_language:"–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É",reset:"–°–∫–∏–Ω—É—Ç–∏ –¥–∞–Ω—ñ",export:"–ï–∫—Å–ø–æ—Ä—Ç –ø—Ä–æ—Ñ—ñ–ª—é",import_profile:"–Ü–º–ø–æ—Ä—Ç –ø—Ä–æ—Ñ—ñ–ª—é",import:"–Ü–º–ø–æ—Ä—Ç",answer:"–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏",ignore:"–Ü–≥–Ω–æ—Ä—É–≤–∞—Ç–∏",open_camera:"–í—ñ–¥–∫—Ä–∏—Ç–∏ –∫–∞–º–µ—Ä—É",open_diary:"–í—ñ–¥–∫—Ä–∏—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏–∫",mirror_quest:"–í–æ–Ω–∏ –ø—Ä–æ—Å—è—Ç—å –ø—ñ–¥—ñ–π—Ç–∏ –º–µ–Ω–µ –¥–æ –¥–∑–µ—Ä–∫–∞–ª–∞.",ignored_call:"–Ø –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–≤(–ª–∞), —è –Ω–µ –∑–Ω–∞—é, —Ö—Ç–æ —Ü–µ. –•–º.... –°–º—Å. ¬´–ó¬ª. –©–æ –± —Ü–µ –æ–∑–Ω–∞—á–∞–ª–æ...",what_was_it:"What was that?"}},h={en:{...g.en,...{greeting:"Hello! How may I assist you today?",response_prompt:"Please choose one of the following options:",option_1:"Tell me more about this.",option_2:"I don't understand.",option_3:"Ignore.",option_1_1:"Could you elaborate further?",option_1_2:"I'd like more details.",option_2_1:"Please explain further.",user_reply_1:"I have a question regarding the service.",spirit_response_1:"Certainly, let me explain.",user_reply_2:"I'm still not clear on this.",spirit_response_2:"Allow me to provide additional information.",user_reply_3:"Thank you for the clarification.",spirit_response_3:"You're welcome.",end_of_conversation:"Thank you for chatting!",chat_support:"Support Chat"}},ru:{...g.ru,...{greeting:"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",response_prompt:"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:",option_1:"–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ.",option_2:"–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é.",option_3:"–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å.",option_1_1:"–ú–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ?",option_1_2:"–ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏.",option_2_1:"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—ä—è—Å–Ω–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ.",user_reply_1:"–£ –º–µ–Ω—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ —É—Å–ª—É–≥–µ.",spirit_response_1:"–ö–æ–Ω–µ—á–Ω–æ, —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –æ–±—ä—è—Å–Ω–∏—Ç—å.",user_reply_2:"–Ø –≤—Å–µ –µ—â–µ –Ω–µ –ø–æ–Ω–∏–º–∞—é.",spirit_response_2:"–ü–æ–∑–≤–æ–ª—å—Ç–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.",user_reply_3:"–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏–µ.",spirit_response_3:"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞.",end_of_conversation:"–°–ø–∞—Å–∏–±–æ –∑–∞ –±–µ—Å–µ–¥—É!",chat_support:"–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"}},uk:{...g.uk,...{greeting:"–í—ñ—Ç–∞—î–º–æ! –ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?",response_prompt:"–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –æ–¥–∏–Ω —ñ–∑ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤:",option_1:"–†–æ–∑–∫–∞–∂—ñ—Ç—å –¥–æ–∫–ª–∞–¥–Ω—ñ—à–µ.",option_2:"–Ø –Ω–µ —Ä–æ–∑—É–º—ñ—é.",option_3:"–Ü–≥–Ω–æ—Ä—É–≤–∞—Ç–∏.",option_1_1:"–ë—É–¥—å –ª–∞—Å–∫–∞, —Ä–æ–∑–∫–∞–∂—ñ—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ñ—à–µ.",option_1_2:"–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ–¥—Ä–æ–±–∏—Ü—ñ.",option_2_1:"–ü–æ—è—Å–Ω—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –¥–µ—Ç–∞–ª—å–Ω—ñ—à–µ.",user_reply_1:"–£ –º–µ–Ω–µ —î –ø–∏—Ç–∞–Ω–Ω—è —â–æ–¥–æ –ø–æ—Å–ª—É–≥–∏.",spirit_response_1:"–ó–≤–∏—á–∞–π–Ω–æ, –¥–æ–∑–≤–æ–ª—å—Ç–µ –ø–æ—è—Å–Ω–∏—Ç–∏.",user_reply_2:"–Ø –≤—Å–µ —â–µ –Ω–µ —Ä–æ–∑—É–º—ñ—é.",spirit_response_2:"–î–æ–∑–≤–æ–ª—å—Ç–µ –Ω–∞–¥–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.",user_reply_3:"–î—è–∫—É—é –∑–∞ —Ä–æ–∑'—è—Å–Ω–µ–Ω–Ω—è.",spirit_response_3:"–ë—É–¥—å –ª–∞—Å–∫–∞.",end_of_conversation:"–î—è–∫—É—î–º–æ –∑–∞ —Ä–æ–∑–º–æ–≤—É!",chat_support:"–ü—ñ–¥—Ç—Ä–∏–º–∫–∞"}}};class u{constructor(e){this.locales=h,this.selector=document.getElementById(e),this.selector||console.error(`Language selector with id "${e}" not found.`),this.currentLanguage=localStorage.getItem("language")||"en",this.selector&&(this.selector.value=this.currentLanguage),this.applyLanguage(),this.selector&&this.selector.addEventListener("change",(()=>{this.currentLanguage=this.selector.value,localStorage.setItem("language",this.currentLanguage),this.applyLanguage()}))}applyLanguage(){document.querySelectorAll("[data-i18n]").forEach((e=>{const t=e.getAttribute("data-i18n");this.locales[this.currentLanguage]&&this.locales[this.currentLanguage][t]&&(e.textContent=this.locales[this.currentLanguage][t])}))}updateContainerLanguage(e){e&&e.querySelectorAll("[data-i18n]").forEach((e=>{const t=e.getAttribute("data-i18n");this.locales[this.currentLanguage]&&this.locales[this.currentLanguage][t]&&(e.textContent=this.locales[this.currentLanguage][t])}))}startObservingContainer(e){if(!e)return;const t=new MutationObserver((e=>{e.forEach((e=>{e.addedNodes.forEach((e=>{if(e.nodeType===Node.ELEMENT_NODE){if(e.hasAttribute&&e.hasAttribute("data-i18n")){const t=e.getAttribute("data-i18n");this.locales[this.currentLanguage]&&this.locales[this.currentLanguage][t]&&(e.textContent=this.locales[this.currentLanguage][t])}e.querySelectorAll&&e.querySelectorAll("[data-i18n]").forEach((e=>{const t=e.getAttribute("data-i18n");this.locales[this.currentLanguage]&&this.locales[this.currentLanguage][t]&&(e.textContent=this.locales[this.currentLanguage][t])}))}}))}))}));return t.observe(e,{childList:!0,subtree:!0}),console.log("[LanguageManager] Started observing container for localization updates."),t}getLanguage(){return this.currentLanguage}translate(e,t=e){return this.locales[this.currentLanguage]&&this.locales[this.currentLanguage][e]?this.locales[this.currentLanguage][e]:t}}class p{constructor(){this.videoElement=null,this.stream=null,this.onVideoReady=null,this.onCameraClosed=null,this.isDetecting=!1,this.aiDetectionTimer=null,this.aiModel=null,this.aiDetectionInterval=5e3,this.currentDetectionConfig=null,this.recordingStartTime=null,this.recordingTimerId=null,this.detectionFrame=null,document.addEventListener("questCompleted",(e=>{"repeating_quest"===e.detail&&this.resetDetectionFrame()}))}async preloadModel(){this.modelPromise||(console.log("[CameraSectionManager] Preloading AI model..."),this.modelPromise=cocoSsd.load({modelUrl:e.s0}));try{this.aiModel=await this.modelPromise,console.log("[CameraSectionManager] AI model preloaded successfully.")}catch(e){t.S.logError(e,"CameraSectionManager.preloadModel")}}attachTo(e,a={}){const n=document.getElementById(e);if(n){this.videoElement?this.videoElement.parentNode&&this.videoElement.parentNode.removeChild(this.videoElement):(this.videoElement=document.createElement("video"),this.videoElement.autoplay=!0,this.videoElement.playsInline=!0,this.videoElement.id="global-camera-video");for(const e in a)this.videoElement.style[e]=a[e];n.innerHTML="",n.appendChild(this.videoElement)}else t.S.logError(`Container with id "${e}" not found!`,"attachTo")}async startCamera(){if(this.stream)console.log("Camera already started");else try{this.videoElement||(this.attachTo("global-camera",{width:"100%",height:"100%",filter:"grayscale(100%)"}),console.log("Video element was not created; auto-attached to 'global-camera'."));const e={video:{facingMode:/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)?"environment":"user"}};if(console.log(`Starting camera with facing mode: ${e.video.facingMode}`),this.stream=await navigator.mediaDevices.getUserMedia(e),!this.videoElement)return void t.S.logError("Video element not created!","startCamera");this.videoElement.srcObject=this.stream,this.videoElement.readyState>=2?(console.log("Video metadata already ready; dispatching cameraReady immediately"),"function"==typeof this.onVideoReady&&this.onVideoReady(),document.dispatchEvent(new CustomEvent("cameraReady")),this.createDetectionFrame()):this.videoElement.addEventListener("loadedmetadata",(()=>{console.log("loadedmetadata: Video stream is ready"),"function"==typeof this.onVideoReady&&this.onVideoReady(),document.dispatchEvent(new CustomEvent("cameraReady")),this.createDetectionFrame()}),{once:!0})}catch(e){t.S.logError(e,"startCamera")}}stopCamera(){this.stream&&(this.stream.getTracks().forEach((e=>e.stop())),this.stream=null,"function"==typeof this.onCameraClosed&&this.onCameraClosed())}createDetectionFrame(){if(!document.getElementById("detection-frame-style")){const e=document.createElement("style");e.id="detection-frame-style",e.textContent="\n  @keyframes detectionPulse {\n    0%   { transform: scale(1);   opacity: 0.8; }\n    50%  { transform: scale(1.02);opacity: 1;   }\n    100% { transform: scale(1);   opacity: 0.8; }\n  }",document.head.appendChild(e)}this.detectionFrame=document.createElement("div"),Object.assign(this.detectionFrame.style,{position:"absolute",top:"0",left:"0",width:"100%",height:"100%",border:"3px solid #fff",boxSizing:"border-box",pointerEvents:"none",animation:"detectionPulse 2s infinite"}),document.body.appendChild(this.detectionFrame),console.log("Detection frame initialized and pulsing.")}updateDetectionFrame(e){const[t,a,n,s]=e;this.detectionFrame.style.transition="all 0.3s ease-out",this.detectionFrame.style.left=`${t}px`,this.detectionFrame.style.top=`${a}px`,this.detectionFrame.style.width=`${n}px`,this.detectionFrame.style.height=`${s}px`,this.detectionFrame.style.animation="",console.log(`Detection frame moved to bbox: ${e}`)}resetDetectionFrame(){this.detectionFrame.style.transition="all 0.5s ease-out",this.detectionFrame.style.left="0",this.detectionFrame.style.top="0",this.detectionFrame.style.width="100%",this.detectionFrame.style.height="100%",this.detectionFrame.style.animation="detectionPulse 2s infinite",console.log("Detection frame reset to full-screen and pulsing.")}startARMode(){if(!this.videoElement||!this.stream)return void console.warn("Camera is not active. AR mode cannot be started.");const e=`\n      <a-scene embedded arjs="sourceType: video; videoElement: #${this.videoElement.id}">\n        <a-marker preset="hiro">\n          <a-box position="0 0.5 0" material="color: red;"></a-box>\n        </a-marker>\n        <a-camera-static></a-camera-static>\n      </a-scene>\n    `;document.body.insertAdjacentHTML("beforeend",e),console.log("AR mode activated.")}stopARMode(){const e=document.querySelector("a-scene[arjs]");e&&(e.remove(),console.log("AR mode deactivated."))}applyFilter(e){this.videoElement&&(this.videoElement.style.filter="nightVision"===e?"brightness(150%) contrast(120%) sepia(100%) hue-rotate(90deg)":"blackWhite"===e?"grayscale(100%)":"",console.log(`Filter applied: ${e}`))}startRecordingTimer(){this.recordingStartTime=Date.now();const e=document.getElementById("recording-timer");e&&(e.style.display="block",this.recordingTimerId=setInterval((()=>{const t=Math.floor((Date.now()-this.recordingStartTime)/1e3);e.innerText=`Recording: ${t} sec`}),1e3))}stopRecordingTimer(){clearInterval(this.recordingTimerId);const e=document.getElementById("recording-timer");e&&(e.style.display="none")}async updateBatteryStatus(){try{const e=await navigator.getBattery(),t=document.getElementById("battery-status"),a=()=>{t&&(t.innerText=`Battery: ${Math.floor(100*e.level)}%`)};a(),e.addEventListener("levelchange",a),t&&(t.style.display="block")}catch(e){t.S.logError(e,"updateBatteryStatus")}}async startAIDetection(e={}){this.currentDetectionConfig={target:e.target||null},this.isDetecting=!0,console.log(`[CameraSectionManager] startAIDetection(): target = "${this.currentDetectionConfig.target}"`),this.aiModel||(console.log("[CameraSectionManager] Waiting for preloaded model‚Ä¶"),await this.modelPromise,this.aiModel)?this.runAIDetection():console.error("[CameraSectionManager] Model failed to preload")}async runAIDetection(){if(this.isDetecting)if(!this.videoElement||this.videoElement.readyState<2)this.aiDetectionTimer=setTimeout((()=>this.runAIDetection()),this.aiDetectionInterval);else{try{const e=await this.aiModel.detect(this.videoElement);console.log("[CameraSectionManager] predictions:",e),this.handleAIPredictions(e)}catch(e){console.error("[CameraSectionManager] Error during detect():",e)}this.aiDetectionTimer=setTimeout((()=>this.runAIDetection()),this.aiDetectionInterval)}}handleAIPredictions(e){const t=this.currentDetectionConfig?.target;if(console.log(`[CameraSectionManager] handleAIPredictions(): looking for "${t}"`),t)for(const a of e)a.score>.6&&a.class===t&&(console.log(`[CameraSectionManager] MATCH for "${t}" (score=${a.score.toFixed(3)})`,a.bbox),this.animateCornerFrame(a.bbox),document.dispatchEvent(new CustomEvent("objectDetected",{detail:t})))}animateCornerFrame(e){this.detectionFrame&&this.updateDetectionFrame(e)}stopAIDetection(){this.isDetecting=!1,this.aiDetectionTimer&&(clearTimeout(this.aiDetectionTimer),this.aiDetectionTimer=null),console.log("[CameraSectionManager] AI detection stopped.")}}class m{constructor(e){this.dataManager=e}async isProfileSaved(){return!!await this.dataManager.getProfile()}async getProfile(){return await this.dataManager.getProfile()}async saveProfile(e){await this.dataManager.saveProfile(e)}resetProfile(){Promise.all([this.dataManager.resetProfile(),this.dataManager.resetDatabase()]).then((()=>{const e=["language"];for(let t=localStorage.length-1;t>=0;t--){const a=localStorage.key(t);e.includes(a)||localStorage.removeItem(a)}"serviceWorker"in navigator&&navigator.serviceWorker.controller&&(navigator.serviceWorker.controller.postMessage({type:"SKIP_WAITING"}),navigator.serviceWorker.controller.postMessage({action:"CLEAR_CACHE"}),console.log("Service Worker skipWaiting and CLEAR_CACHE messages sent."))})).catch((e=>{t.S.logError(e,"resetProfile")}))}exportProfileData(e,t){this.getProfile().then((a=>{if(!a)return void alert("No profile found to export.");const n={name:a.name,gender:a.gender,language:a.language,selfie:a.selfie},s=e.getDiaryEntries(),o=e.getChatMessages(),i=t?t.rooms:[];let r=[];const l=e.db.exec("SELECT * FROM quest_progress ORDER BY id DESC");l.length>0&&(r=l[0].values.map((e=>({id:e[0],quest_key:e[1],status:e[2]}))));const c={profile:n,diary:s,apartment:i,quests:r,chat:o},d=new Blob([JSON.stringify(c,null,2)],{type:"application/json"}),g=URL.createObjectURL(d),h=document.createElement("a");h.href=g,h.download="profile.json",document.body.appendChild(h),h.click(),document.body.removeChild(h),URL.revokeObjectURL(g)}))}importProfileData(e,a,n){const s=new FileReader;s.onload=e=>{try{const t=JSON.parse(e.target.result);if(!(t.profile&&t.profile.name&&t.profile.gender&&t.profile.selfie&&t.profile.language))return void alert("Invalid profile file. Required profile fields are missing.");this.saveProfile(t.profile),t.diary&&Array.isArray(t.diary)&&(t.diary.forEach((e=>{e.entry&&e.timestamp&&a.db.run("INSERT INTO diary (entry, timestamp) VALUES (?, ?)",[e.entry,e.timestamp])})),a.saveDatabase()),t.apartment&&Array.isArray(t.apartment)&&n&&(n.rooms=t.apartment,n.renderRooms()),t.quests&&Array.isArray(t.quests)&&t.quests.forEach((e=>{e.quest_key&&e.status&&a.addQuestProgress(e.quest_key,e.status)})),t.chat&&Array.isArray(t.chat)&&(t.chat.forEach((e=>{e.sender&&e.message&&e.timestamp&&a.db.run("INSERT INTO chat_messages (sender, message, timestamp) VALUES (?, ?, ?)",[e.sender,e.message,e.timestamp])})),a.saveDatabase()),i.f.remove("cameraButtonActive"),i.f.remove("shootButtonActive"),i.f.remove("quest_state_repeating_quest"),alert("Profile imported successfully. Reloading page."),window.location.reload()}catch(e){t.S.logError(e,"importProfileData"),alert("Error parsing the profile file.")}},s.readAsText(e)}saveGhostProgress(e){this.dataManager.saveGhostProgress(e)}getGhostProgress(){return this.dataManager.getGhostProgress()}resetGhostProgress(){this.dataManager.resetGhostProgress()}saveLocationType(e){this.dataManager.saveLocationType(e)}getLocationType(){return this.dataManager.getLocationType()}}async function y(){const e=await fetch("./config/gameEntities.json");if(!e.ok)throw new Error("Failed to load game entities configuration");return await e.json()}async function f(){const e=await y(),t={};return e.sequence.forEach((e=>{t[e.questKey]=e.eventKey})),t}class v{constructor(e){this.sequenceList=e,this.currentIndex=0}getCurrentEntry(){return this.sequenceList&&this.sequenceList[this.currentIndex]||null}isNextQuest(e){const t=this.getCurrentEntry();return!!t&&t.questKey===e}isNextEvent(e){const t=this.getCurrentEntry();return!!t&&t.eventKey===e}increment(){this.currentIndex<this.sequenceList.length-1&&this.currentIndex++}reset(){this.currentIndex=0}}class E{constructor(e,a,n){this.currentSequenceIndex=e,this.profileManager=a,this.app=n,this.activeQuestKey=i.f.getActiveQuestKey(),this.questActive=!!this.activeQuestKey,this.eventManager=null,this.ghosts=[],this.setupGhosts(),this.currentGhostId=1,this.currentPhenomenonIndex=0;const s=this.getCurrentGhost();console.log(`Current active ghost: ${s?s.name:"not found"}`),y().then((e=>{this.sequenceManager=new v(e.sequence);const t=parseInt(i.f.get(i.f.KEYS.CURRENT_SEQUENCE_INDEX),10)||0;if(this.sequenceManager.currentIndex=t,console.log(`Sequence configuration loaded. Current index: ${this.sequenceManager.currentIndex}`),"true"===i.f.get("registrationCompleted")&&"true"!==i.f.get("welcomeDone")){const e=this.sequenceManager.getCurrentEntry();e&&(console.log(`Auto-launching initial event: ${e.eventKey}`),this.eventManager.activateEvent(e.eventKey),this.activeQuestKey=e.questKey,i.f.set("activeQuestKey",this.activeQuestKey))}})).catch((e=>{t.S.logError(e,"GhostManager.loadConfig"),t.S.showError("Failed to load game configuration")})),document.addEventListener("gameEventCompleted",(e=>{this.onEventCompleted(e.detail)})),document.addEventListener("questCompleted",(e=>{this.onQuestCompleted(e.detail)}))}setupGhosts(){this.ghosts=[{id:1,name:"ghost 1",phenomenaCount:3,isFinished:!1}]}getCurrentGhost(){return this.ghosts.find((e=>e.id===this.currentGhostId))}async setCurrentGhost(e){this.currentGhostId=e;const a=this.getCurrentGhost();a?(console.log(`Ghost ${a.name} activated.`),await this.app.databaseManager.saveGhostState(a)):t.S.logError(`Ghost with ID=${e} not found!`,"setCurrentGhost")}async finishCurrentGhost(){const e=this.getCurrentGhost();e?(e.isFinished=!0,console.log(`Ghost ${e.name} finished.`),await this.app.databaseManager.saveGhostState(e)):t.S.logError("Cannot finish ghost: ghost not found.","finishCurrentGhost")}isCurrentGhostFinished(){const e=this.getCurrentGhost();return!!e&&e.isFinished}async triggerNextPhenomenon(){const e=this.getCurrentGhost();if(e)if(e.isFinished)t.S.logError(`Ghost "${e.name}" is already finished; phenomena unavailable.`,"triggerNextPhenomenon");else if(this.currentPhenomenonIndex<e.phenomenaCount){const t=this.currentPhenomenonIndex+1,a=`${e.name}: Phenomenon ${t} - Approach the mirror`;if(await this.eventManager.addDiaryEntry(a),console.log(`Triggered phenomenon for ${e.name}: ${a}`),this.currentPhenomenonIndex++,await this.profileManager.saveGhostProgress({ghostId:this.currentGhostId,phenomenonIndex:this.currentPhenomenonIndex}),this.currentPhenomenonIndex===e.phenomenaCount){const t=`${e.name}: Final phenomenon ‚Äì ghost finished!`;await this.eventManager.addDiaryEntry(t),console.log(t),console.log(`Triggering final event for ghost "${e.name}"...`),await this.app.gameEventManager.activateEvent("ghost_final_event")}}else t.S.logError(`All phenomena for ghost ${e.name} have been completed (index=${this.currentPhenomenonIndex}).`,"triggerNextPhenomenon");else t.S.logError("No ghost found to trigger phenomenon.","triggerNextPhenomenon")}async resetGhostChain(){this.currentGhostId=1,this.currentPhenomenonIndex=0,await this.profileManager.resetGhostProgress(),console.log("Ghost chain has been reset.");const e=this.getCurrentGhost();e?(e.isFinished=!1,await this.app.databaseManager.saveGhostState(e)):t.S.logError("Failed to reset ghost chain: default ghost not found.","resetGhostChain")}isNextInSequence(e){return!!this.sequenceManager&&this.sequenceManager.isNextQuest(e)}isNextEvent(e){return!!this.sequenceManager&&this.sequenceManager.isNextEvent(e)}canStartQuest(e){const t=this.app.databaseManager.getQuestRecord(e);if(t&&"finished"!==t.status)return console.warn(`Quest "${e}" is already active with status "${t.status}".`),!1;const a=i.f.getActiveQuestKey();return a&&a!==e?(console.warn(`Another quest "${a}" is already active, cannot start quest "${e}".`),!1):!!this.isNextInSequence(e)||(console.error(`Quest "${e}" is not the next expected quest in the sequence.`),!1)}async startQuest(e){this.canStartQuest(e)?(console.log(`GhostManager: Starting quest with key: ${e}`),await this.app.questManager.activateQuest(e),this.activeQuestKey=e,i.f.setActiveQuestKey(e),await this.app.questManager.syncQuestState(),this.app.viewManager.setCameraButtonActive(!0)):console.error(`Cannot start quest with key: ${e}. Unified check failed.`)}async startEvent(e,t=!1){t||this.isNextEvent(e)?(console.log(`GhostManager: Starting event with key: ${e}`),await this.app.gameEventManager.activateEvent(e)):console.error(`Event "${e}" is not next in sequence.`)}updatePostButtonState(){const e=this.sequenceManager?this.sequenceManager.getCurrentEntry():null,t=!!e&&this.canStartQuest(e.questKey);this.app.viewManager.setPostButtonEnabled(t),console.log(`[GhostManager] Post button state updated: enabled=${t}`)}async handlePostButtonClick(){this.app.viewManager.setPostButtonEnabled(!1);const e=this.sequenceManager?this.sequenceManager.getCurrentEntry():null;if(!e)return console.warn("GhostManager: No next sequence entry found."),void this.updatePostButtonState();if(null!==e.questKey)console.log(`GhostManager: Handling Post button click. Next expected quest: "${e.questKey}".`),this.canStartQuest(e.questKey)?(await this.startQuest(e.questKey),this.updatePostButtonState()):this.updatePostButtonState();else{if(e.nextEventKey)try{console.log(`[GhostManager] No quest to start; activating event "${e.nextEventKey}" directly.`),await this.startEvent(e.nextEventKey,!0)}catch(t){console.error(`[GhostManager] Failed to activate event "${e.nextEventKey}":`,t)}else console.warn("[GhostManager] Both questKey and nextEventKey are null; nothing to activate.");this.updatePostButtonState()}}async handlePostButtonClick(){this.app.viewManager.setPostButtonEnabled(!1);const e=this.sequenceManager?this.sequenceManager.getCurrentEntry():null;if(!e)return console.warn("GhostManager: No next sequence entry found."),void this.updatePostButtonState();if(null!==e.questKey)console.log(`GhostManager: Handling Post button click. Next expected quest: "${e.questKey}".`),this.canStartQuest(e.questKey)?(await this.startQuest(e.questKey),this.updatePostButtonState()):this.updatePostButtonState();else{if(e.nextEventKey)try{console.log(`[GhostManager] No quest to start; activating event "${e.nextEventKey}" directly.`),await this.startEvent(e.nextEventKey,!0)}catch(t){console.error(`[GhostManager] Failed to activate event "${e.nextEventKey}":`,t)}else console.warn("[GhostManager] Both questKey and nextEventKey are null; nothing to activate.");this.updatePostButtonState()}}onEventCompleted(e){console.log(`GhostManager: Event completed with key: ${e}`),this.sequenceManager&&this.sequenceManager.getCurrentEntry().nextEventKey===e&&(this.sequenceManager.increment(),i.f.set(i.f.KEYS.CURRENT_SEQUENCE_INDEX,String(this.sequenceManager.currentIndex)),console.log(`GhostManager: Sequence index incremented to ${this.sequenceManager.currentIndex}`))}async onQuestCompleted(e){if(console.log(`GhostManager: Quest completed with key: ${e}`),this.activeQuestKey=null,i.f.setActiveQuestKey(null),this.updatePostButtonState(),this.app.viewManager.setCameraButtonActive(!1),"repeating_quest"===e){const e=this.app.questManager.quests.find((e=>"repeating_quest"===e.key)),t=e?await e.getCurrentQuestStatus():{currentStage:1,totalStages:1};if(console.log("Repeating quest status:",t),t.currentStage<=t.totalStages){const e=`post_repeating_event_stage_${t.currentStage}`;return console.log(`Repeating quest stage completed. Triggering generated event: ${e}`),void await this.startEvent(e,!0)}{const e=this.sequenceManager?this.sequenceManager.getCurrentEntry():null;return e&&e.nextEventKey?(console.log(`Repeating quest fully completed. Now starting ghost event from config: ${e.nextEventKey}`),await this.startEvent(e.nextEventKey,!0)):console.warn("No final event configured for repeating quest completion. Unable to start final event."),this.sequenceManager.increment(),void i.f.set(i.f.KEYS.CURRENT_SEQUENCE_INDEX,String(this.sequenceManager.currentIndex))}}const t=this.sequenceManager?this.sequenceManager.getCurrentEntry():null;t&&t.questKey===e&&t.nextEventKey&&(console.log(`GhostManager: Quest completed. Now starting ghost event: ${t.nextEventKey}`),await this.startEvent(t.nextEventKey,!0))}}class M{constructor(e,t,a,n){this.databaseManager=e,this.languageManager=t,this.ghostManager=a,this.visualEffectsManager=n}isEventLogged(e){return this.databaseManager.getDiaryEntries().some((t=>t.entry===e))}async addDiaryEntry(e,t=!1){const a=t?"ghost-post":"user-post",n={entry:e,postClass:a},s=JSON.stringify(n);if(await this.databaseManager.addDiaryEntry(s),t){const t={event_key:e,event_text:e,timestamp:(new Date).toISOString(),completed:0};this.databaseManager.saveEvent(t)}if(this.viewManager?.addSingleDiaryPost?this.viewManager.addSingleDiaryPost({text:e,img:e.startsWith("data:image")?e:"",timestamp:(new Date).toLocaleString(),postClass:a}):this.updateDiaryDisplay(),this.viewManager&&this.visualEffectsManager&&this.viewManager.diaryContainer){const e=this.viewManager.diaryContainer.querySelectorAll('[data-animate-on-board="true"]');this.visualEffectsManager.applyEffectsToNewElements(e)}}updateDiaryDisplay(){if(this.viewManager&&"function"==typeof this.viewManager.renderDiary){const e=this.databaseManager.getDiaryEntries(),t=this.languageManager.getLanguage();this.viewManager.renderDiary(e,t,this.visualEffectsManager)}else t.S.logError("ViewManager is not available. Cannot update diary display.","updateDiaryDisplay"),t.S.showError("Unable to update diary display.")}}class w{constructor(e,n,s){this.eventManager=e,this.gameEventManager=n,this.app=s,this.quests=[],Promise.all([y(),f()]).then((async([e,n])=>{this.questKeyToEventKey=n;for(const s of e.quests){const e={eventManager:this.eventManager,app:this.app},o=s.dependencies.map((t=>e[t]));s.config&&o.push(s.config);const i=n[s.key];if(i)try{const e=(await a(222)(`./triad-${i}`))[s.className];if(!e){t.S.logError(`Quest class "${s.className}" is not exported from triads/triad-${i}.js.`,"QuestManager");continue}const n=new e(...o);n.key=s.key,this.quests.push(n)}catch(e){t.S.logError(`Failed to import triad for quest "${s.key}": ${e.message}`,"QuestManager")}else t.S.logError(`Cannot find parent eventKey for quest "${s.key}".`,"QuestManager")}console.log("Quests loaded from configuration:",this.quests.map((e=>e.key))),document.addEventListener("questCompleted",(async e=>{const a=e.detail,n=this.questKeyToEventKey[a];if(n)try{await this.gameEventManager.activateEvent(n)}catch(e){t.S.logError(`Failed to activate event "${n}" after quest "${a}": ${e.message}`,"QuestManager")}else t.S.logError(`No next eventKey defined for quest "${a}".`,"QuestManager")}))})).catch((e=>{t.S.logError(e,"QuestManager.loadConfig"),t.S.showError("Failed to load quests configuration")})),this.initCameraListeners(),i.f.get(i.f.KEYS.REPEATING_QUEST_STATE)&&(console.log("[QuestManager] Detected saved state for repeating quest."),this.restoreRepeatingQuestUI()),this.app.viewManager&&"function"==typeof this.app.viewManager.restoreCameraButtonState&&this.app.viewManager.restoreCameraButtonState(),this.app.viewManager&&"function"==typeof this.app.viewManager.restoreShootButtonState&&this.app.viewManager.restoreShootButtonState()}initCameraListeners(){const e=this.app.cameraSectionManager;e&&(e.onVideoReady=async()=>{if(console.log("[QuestManager] onVideoReady signal received."),"repeating_quest"===i.f.getActiveQuestKey()){const e=this.quests.find((e=>"repeating_quest"===e.key));console.log(`[QuestManager] Detection target is "${e.currentTarget}"`);const t=e.generateDetectionConfig();await this.app.cameraSectionManager.startAIDetection(t)}},e.onCameraClosed=()=>{console.log("[QuestManager] onCameraClosed signal received. Stopping detection."),this.app.cameraSectionManager.stopAIDetection()})}async syncQuestStateForQuest(e){if("true"===i.f.get(i.f.KEYS.GAME_FINALIZED))return this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!1),void console.log(`[QuestManager.syncQuestStateForQuest] Game finalized; Post button disabled for quest "${e}".`);const t=i.f.canPost();this.app.viewManager.setPostButtonEnabled(t),console.log(`[QuestManager] Post button ${t?"enabled":"disabled"} for quest "${e}".`)}async syncQuestState(){for(const e of this.quests)await this.syncQuestStateForQuest(e.key)}async activateQuest(e){if(!e)return void console.warn("QuestManager.activateQuest called with null/undefined key; skipping.");const a=this.quests.find((t=>t.key===e));if(!a)return t.S.logError(`Quest "${e}" not found`,"QuestManager.activateQuest"),void t.S.showError(`Cannot activate quest "${e}"`);console.log(`[QuestManager] Activating quest: ${e}`),await a.activate(),i.f.setActiveQuestKey(e),await this.syncQuestState()}async checkQuest(e){const a=this.quests.find((t=>t.key===e));if(!a)return t.S.logError(`Quest "${e}" not found`,"QuestManager.checkQuest"),void t.S.showError(`Cannot finish quest "${e}"`);console.log(`[QuestManager] Finishing quest: ${e}`),await a.finish(),await this.syncQuestState()}async updateQuestProgress(e,t,a,n){const s={quest_key:e,current_stage:t,total_stages:a,status:n};await this.app.databaseManager.saveQuestRecord(s),console.log("[QuestManager] Quest progress updated:",s)}restoreRepeatingQuestUI(){const e=this.quests.find((e=>"repeating_quest"===e.key));e&&"function"==typeof e.restoreUI&&(console.log("[QuestManager] Restoring repeating quest UI..."),e.restoreUI())}restoreAllActiveQuests(){console.log("[QuestManager] Attempting to restore UI for all active quests..."),this.quests.forEach((e=>{const t=this.app.databaseManager.getQuestRecord(e.key);t&&("active"===t.status||"finished"===t.status&&e.currentStage<=e.totalStages)&&!e.finished&&(console.log(`[QuestManager] Found active quest "${e.key}". Restoring UI...`),"function"==typeof e.restoreUI?e.restoreUI():console.log(`[QuestManager] Quest "${e.key}" does not implement restoreUI().`))})),this.app.ghostManager&&"function"==typeof this.app.ghostManager.updatePostButtonState&&this.app.ghostManager.updatePostButtonState()}}class C{constructor(e,n,s){this.eventManager=e,this.app=n,this.languageManager=s,this.events=[],y().then((async e=>{const n=new Set(e.sequence.map((e=>e.eventKey))),s={};for(const t of e.events)s[t.key]=t;for(const e of n){const n=s[e];if(!n){t.S.logError(`No event configuration found for key "${e}" in sequence.`,"GameEventManager");continue}const o=[this.eventManager,this.app,n,this.languageManager];try{const s=(await a(222)(`./triad-${e}`))[n.className];if(!s){t.S.logError(`Event class "${n.className}" is not exported from triads/triad-${e}.js.`,"GameEventManager");continue}const i=new s(...o);this.events.push(i)}catch(a){t.S.logError(`Failed to import triad for event "${e}": ${a.message}`,"GameEventManager")}}console.log("Game events loaded from sequence:",this.events.map((e=>e.key)))})).catch((e=>{t.S.logError(e,"GameEventManager.loadConfig"),t.S.showError("Failed to load game events configuration")}))}async activateEvent(e){let a=this.events.find((t=>t.key===e));!a&&e.startsWith("post_repeating_event")&&(a=this.events.find((e=>"post_repeating_event"===e.key))),a?(await a.activate(e),console.log(`Event '${e}' activated.`)):(t.S.logError(`Event "${e}" not found`,"GameEventManager.activateEvent"),t.S.showError(`Cannot activate event "${e}"`))}async autoLaunchWelcomeEvent(){"true"!==i.f.get(i.f.KEYS.WELCOME_DONE)?(console.log("Auto-launching welcome event in 5 seconds..."),setTimeout((async()=>{await this.activateEvent("welcome")}),5e3)):console.log("Welcome event already completed; auto-launch skipped.")}}class S{constructor(e){this.app=e}show(){const e=this.app.profileManager.getProfile();if(!e)return void alert("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");const t=document.createElement("div");t.id="profile-modal-overlay",Object.assign(t.style,{position:"fixed",top:"0",left:"0",width:"100%",height:"100%",backgroundColor:"rgba(0,0,0,0.5)",display:"flex",justifyContent:"center",alignItems:"center",zIndex:"2000",overflowY:"auto"});const a=document.createElement("div");a.id="profile-modal",Object.assign(a.style,{backgroundColor:"#fff",padding:"20px",borderRadius:"8px",width:"90%",maxWidth:"500px",maxHeight:"90%",overflowY:"auto",boxShadow:"0 0 10px rgba(0,0,0,0.3)"});const n=document.createElement("h2");n.textContent="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è",a.appendChild(n);const s=document.createElement("div");s.style.textAlign="center";const o=document.createElement("img");o.id="profile-modal-avatar",o.src=e.selfie,o.alt="–ê–≤–∞—Ç–∞—Ä",Object.assign(o.style,{width:"100px",height:"100px",borderRadius:"50%"}),s.appendChild(o);const i=document.createElement("button");i.textContent="–û–±–Ω–æ–≤–∏—Ç—å —Å–µ–ª—Ñ–∏",i.style.marginTop="10px",i.addEventListener("click",(()=>{this.showSelfieEditModal((e=>{o.src=e}))})),s.appendChild(i),a.appendChild(s);const r=document.createElement("label");r.textContent="–õ–æ–≥–∏–Ω:",r.style.display="block",r.style.marginTop="15px",a.appendChild(r);const l=document.createElement("input");l.type="text",l.value=e.name,l.style.width="100%",l.style.marginBottom="15px",a.appendChild(l);const c=document.createElement("div");if(c.id="profile-plan-container",c.style.border="1px solid #ccc",c.style.padding="10px",c.style.marginBottom="15px",this.app.apartmentPlanManager)if(this.app.apartmentPlanManager.table||this.app.apartmentPlanManager.createTable(),this.app.apartmentPlanManager.table){const e=this.app.apartmentPlanManager.table.cloneNode(!0);c.appendChild(e);const t=this.app.apartmentPlanManager.rooms.map((e=>e.floor));if([...new Set(t)].length>1){const e=document.createElement("div");e.style.textAlign="center",e.style.marginTop="10px";const t=document.createElement("button");t.textContent="–ü—Ä–µ–¥—ã–¥—É—â–∏–π —ç—Ç–∞–∂",t.addEventListener("click",(()=>{if(this.app.apartmentPlanManager.prevFloor(),c.innerHTML="",this.app.apartmentPlanManager.table){const e=this.app.apartmentPlanManager.table.cloneNode(!0);c.appendChild(e)}else c.textContent="–ü–ª–∞–Ω –∫–≤–∞—Ä—Ç–∏—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."}));const a=document.createElement("button");a.textContent="–°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–∂",a.style.marginLeft="10px",a.addEventListener("click",(()=>{if(this.app.apartmentPlanManager.nextFloor(),c.innerHTML="",this.app.apartmentPlanManager.table){const e=this.app.apartmentPlanManager.table.cloneNode(!0);c.appendChild(e)}else c.textContent="–ü–ª–∞–Ω –∫–≤–∞—Ä—Ç–∏—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."})),e.appendChild(t),e.appendChild(a),c.appendChild(e)}}else c.textContent="–ü–ª–∞–Ω –∫–≤–∞—Ä—Ç–∏—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.";else c.textContent="–ü–ª–∞–Ω –∫–≤–∞—Ä—Ç–∏—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.";a.appendChild(c);const d=document.createElement("p");d.textContent="–ü–µ—Ä–µ–µ—Ö–∞—Ç—å –∏ –Ω–∞—á–∞—Ç—å —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞ - —ç—Ç–æ –∏–Ω–æ–≥–¥–∞ –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –ø—Ä–∏–≤–∏–¥–µ–Ω–∏–π, –Ω–æ –Ω–µ –≤—Å–µ–≥–¥–∞.",d.style.fontStyle="italic",a.appendChild(d);const g=document.createElement("div");g.id="ghost-rewards-container",Object.assign(g.style,{display:"flex",flexWrap:"wrap",justifyContent:"center",marginTop:"20px"});(this.app.ghostManager&&this.app.ghostManager.ghosts||[]).forEach((e=>{const t=document.createElement("div");t.className="ghost-icon",Object.assign(t.style,{width:"60px",height:"60px",borderRadius:"50%",border:"2px solid #ccc",margin:"5px",display:"flex",justifyContent:"center",alignItems:"center",fontSize:"12px",fontWeight:"bold",position:"relative"});const a=this.app.profileManager.getGhostProgress();a&&a.ghostId===e.id?(t.textContent=`${a.phenomenonIndex}/${e.phenomenaCount}`,t.style.borderColor="#4caf50"):(t.textContent=e.name,t.style.filter="grayscale(100%)"),g.appendChild(t)})),a.appendChild(g);const h=document.createElement("div");h.style.textAlign="right",h.style.marginTop="20px";const u=document.createElement("button");u.textContent="–û—Ç–º–µ–Ω–∞",u.style.marginRight="10px",u.addEventListener("click",(()=>{document.body.removeChild(t)})),h.appendChild(u);const p=document.createElement("button");p.textContent="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è",p.addEventListener("click",(()=>{const a=Object.assign({},e,{name:l.value,selfie:o.src});this.app.profileManager.saveProfile(a),this.app.profileNameElem.textContent=a.name,this.app.profilePhotoElem.src=a.selfie,document.body.removeChild(t)})),h.appendChild(p),a.appendChild(h),t.appendChild(a),document.body.appendChild(t)}showSelfieEditModal(e){const t=document.createElement("div");t.id="selfie-edit-overlay",Object.assign(t.style,{position:"fixed",top:"0",left:"0",width:"100%",height:"100%",backgroundColor:"rgba(0,0,0,0.7)",display:"flex",justifyContent:"center",alignItems:"center",zIndex:"2100",overflowY:"auto"});const a=document.createElement("div");a.id="selfie-edit-modal",Object.assign(a.style,{backgroundColor:"#fff",padding:"20px",borderRadius:"8px",width:"90%",maxWidth:"400px",maxHeight:"90%",overflowY:"auto",boxShadow:"0 0 10px rgba(0,0,0,0.3)"});const n=document.createElement("h3");n.textContent="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ–ª—Ñ–∏",a.appendChild(n);const s=document.createElement("div");s.id="selfie-video-container",Object.assign(s.style,{width:"100%",maxWidth:"400px",margin:"10px auto"}),a.appendChild(s),this.app.cameraSectionManager.attachTo("selfie-video-container",{width:"100%",maxWidth:"400px",filter:"grayscale(100%)"}),this.app.cameraSectionManager.startCamera();const o=document.createElement("button");o.textContent="–°–¥–µ–ª–∞—Ç—å —Å–µ–ª—Ñ–∏",o.style.display="block",o.style.margin="10px auto",o.addEventListener("click",(()=>{if(!this.app.cameraSectionManager.videoElement||!this.app.cameraSectionManager.videoElement.srcObject)return void alert("–ö–∞–º–µ—Ä–∞ –Ω–µ –≤–∫–ª—é—á–µ–Ω–∞.");const a=this.app.cameraSectionManager.videoElement,n=document.createElement("canvas");n.width=a.videoWidth||640,n.height=a.videoHeight||480;n.getContext("2d").drawImage(a,0,0,n.width,n.height);const s=window.ImageUtils?window.ImageUtils.convertToGrayscale(n):n.toDataURL();this.app.cameraSectionManager.stopCamera(),document.body.removeChild(t),e&&e(s)})),a.appendChild(o);const i=document.createElement("button");i.textContent="–û—Ç–º–µ–Ω–∞",i.style.display="block",i.style.margin="10px auto",i.addEventListener("click",(()=>{this.app.cameraSectionManager.stopCamera(),document.body.removeChild(t)})),a.appendChild(i),t.appendChild(a),document.body.appendChild(t)}}function b(e,t){e.innerHTML="";t.split("").forEach(((t,a)=>{const n=document.createElement("span");n.innerText=t,n.style.opacity="0",n.style.transition="opacity 0.3s ease-in",e.appendChild(n),setTimeout((()=>{n.style.opacity="1"}),100*a)}))}class I{constructor(t={}){this.templateUrl=t.templateUrl||`${e.o2}/templates/chat_template.html`,this.mode=t.mode||"full",this.container=null,this.databaseManager=t.databaseManager||null,this.languageManager=t.languageManager||null,this.sectionKey=t.sectionKey||null,this.scenarioManager=null}static createChatManagerWrapper(t={}){const a={templateUrl:`${e.o2}/templates/chat_template.html`,mode:"full"};return new I({...a,...t})}getStateKey(e){return this.sectionKey?`${this.sectionKey}_${e}`:e}getLocalizedString(e,t){if(this.languageManager&&this.languageManager.locales&&"function"==typeof this.languageManager.getLanguage){const t=this.languageManager.getLanguage();if(this.languageManager.locales[t]&&this.languageManager.locales[t][e])return this.languageManager.locales[t][e]}return t}async init(){try{const e=await fetch(this.templateUrl);if(!e.ok)throw new Error(`Failed to fetch template from ${this.templateUrl}`);const t=await e.text();let n="";if(this.databaseManager){const e=this.databaseManager.getChatMessages();e&&e.length>0&&(n=e.map((e=>`<div class="chat-message ${e.sender}" style="margin-bottom: 0.5rem; padding: 0.5rem; border-radius: 4px; max-width: 80%; word-wrap: break-word;">${e.message}</div>`)).join(""))}const s={messages:n,spiritBoardContent:this.getLocalizedString("spirit_board","Spirit Board"),options:""},o=c.render(t,s);if(this.container=document.getElementById("chat-section"),!this.container)throw new Error('Chat section container (id="chat-section") not found in index.html');if(this.container.innerHTML=o,this.container.style.display="none","board-only"===this.mode){const e=this.container.querySelector("#chat-options");e&&(e.style.display="none")}if(console.log("ChatManager initialized."),this.isConversationActive())console.log("Conversation already active; skipping dialogue load to prevent duplicates.");else try{const e=await Promise.resolve().then(a.bind(a,651));this.scenarioManager=new e.ChatScenarioManager(this,null),await this.scenarioManager.init()}catch(e){console.error("Failed to resume ChatScenarioManager:",e)}}catch(e){console.error("Error initializing ChatManager:",e)}}isConversationActive(){const e="true"===i.f.get(this.getStateKey("chat_started")),t=this.container&&this.container.querySelector("#chat-messages"),a=t&&t.children.length>0;return e&&a}show(){this.container&&(this.container.style.display="block",console.log("ChatManager is now visible."))}hide(){this.container&&(this.container.style.display="none",console.log("ChatManager is now hidden."))}sendInitialMessage(e){if(!this.container)return void console.error("ChatManager is not initialized.");const t=this.container.querySelector("#chat-messages");if(t){const a=`<div class="chat-message spirit" style="margin-bottom: 0.5rem; padding: 0.5rem; border-radius: 4px; max-width: 80%; word-wrap: break-word;">${e}</div>`;t.innerHTML+=a,console.log("Initial message sent:",e)}}async saveMessage(e){this.databaseManager&&"function"==typeof this.databaseManager.addChatMessage&&(await this.databaseManager.addChatMessage(e.sender,e.text),console.log(`Message saved: [${e.sender}] ${e.text}`))}async loadDialogue(e){if(!this.container)return void console.error("ChatManager is not initialized.");let t="";for(const a of e.messages){const e=this.getLocalizedString(a.text,a.text);if(t+=`<div class="chat-message ${a.sender}" style="margin-bottom: 0.5rem; padding: 0.5rem; border-radius: 4px; max-width: 80%; word-wrap: break-word;">${e}</div>`,a.animateOnBoard){const t=this.container.querySelector("#spirit-board");t&&b(t,e)}await this.saveMessage({sender:a.sender,text:e})}const a=this.container.querySelector("#chat-messages");a&&(a.innerHTML+=t),this.updateDialogueOptions(e.options);const n=this.container.querySelector("#spirit-board");n&&(n.innerHTML=""),console.log("Dialogue loaded in ChatManager.")}updateDialogueOptions(e){const t=this.container.querySelector("#chat-options");if(t){let a="";e&&e.length>0&&e.forEach(((e,t)=>{const n=this.getLocalizedString(e.text,e.text);a+=`<button class="button is-link dialogue-option" style="margin-bottom: 0.5rem;">${n}</button>`})),e&&e.length>3?(t.style.maxHeight="200px",t.style.overflowY="auto"):(t.style.maxHeight="",t.style.overflowY=""),t.innerHTML=a;t.querySelectorAll(".dialogue-option").forEach(((t,a)=>{t.addEventListener("click",(()=>{if(this.scenarioManager&&"function"==typeof this.scenarioManager.advanceDialogue)this.scenarioManager.advanceDialogue(a);else{const t=e[a];console.log(`Option selected: ${t.text}`)}}))})),console.log("Dialogue options updated in ChatManager.")}else console.error("Options container not found in ChatManager.")}setMode(e){if(this.mode=e,this.container){const t=this.container.querySelector("#chat-options");"board-only"===e&&t?t.style.display="none":t&&(t.style.display="block")}console.log(`ChatManager mode set to: ${e}`)}async restartConversation(){if(i.f.set(this.getStateKey("chat_started"),"true"),i.f.remove(this.getStateKey("chat_conversation_completed")),i.f.remove(this.getStateKey("chat_currentDialogueIndex")),this.container){const e=this.container.querySelector("#chat-messages");e&&(e.innerHTML="")}try{const e=await Promise.resolve().then(a.bind(a,651));this.scenarioManager=new e.ChatScenarioManager(this,null),await this.scenarioManager.init(),console.log("Conversation restarted for section:",this.sectionKey||"(global)")}catch(e){console.error("Failed to restart conversation:",e)}}scheduleConversationStartIfInactive(e=5e3){setTimeout((()=>{this.isConversationActive()?console.log("Conversation is already active; restart aborted."):this.restartConversation()}),e),console.log(`Conversation restart scheduled in ${e} ms.`)}clearChat(e){const t=e?`${e}_`:"";i.f.remove(`${t}chat_started`),i.f.remove(`${t}chat_currentDialogueIndex`),i.f.remove(`${t}chat_conversation_completed`),console.log(`Chat cleared for section: ${e||"global"}`)}}class x{constructor(e={}){this.viewManager=e.viewManager||new d(this),this.viewManager.bindEvents(this),this.sqliteDataManager=e.sqliteDataManager||new s,this.databaseManager=e.databaseManager||new o(this.sqliteDataManager),this.isCameraOpen=!1,this.selfieData=null,this.languageManager=e.languageManager||new u("language-selector"),this.cameraSectionManager=e.cameraSectionManager||new p,this.viewManager.setCameraManager(this.cameraSectionManager),this.profileManager=e.profileManager||new m(this.sqliteDataManager),this.visualEffectsManager=e.visualEffectsManager||new n(this,this.viewManager.controlsPanel);const t=parseInt(i.f.get("currentSequenceIndex"),10)||0;this.ghostManager=e.ghostManager||new E(t,this.profileManager,this),this.eventManager=e.eventManager||new M(this.databaseManager,this.languageManager,this.ghostManager,this.visualEffectsManager),this.eventManager.viewManager=this.viewManager,this.ghostManager.eventManager=this.eventManager,this.gameEventManager=e.gameEventManager||new C(this.eventManager,this,this.languageManager),this.questManager=e.questManager||new w(this.eventManager,this.gameEventManager,this),this.showProfileModal=e.showProfileModal||new S(this),this.chatManager=e.chatManager||I.createChatManagerWrapper({databaseManager:this.databaseManager,languageManager:this.languageManager,sectionKey:"support"}),this.init()}loadAppState(){const e=i.f.get("currentGhostId");e?this.ghostManager.setCurrentGhost(parseInt(e)):this.ghostManager.setCurrentGhost(1)}async init(){if(await this.databaseManager.initDatabasePromise,console.log("Database initialization complete."),this.loadAppState(),await this.cameraSectionManager.preloadModel(),await this.questManager.syncQuestState(),this.questManager.restoreAllActiveQuests(),i.f.isCameraOpen()&&(this.viewManager.setCameraButtonActive(!0),console.log("Camera button active state restored based on saved state.")),this.viewManager.showToggleCameraButton(),this.viewManager.createTopCameraControls(),await this.chatManager.init(),this.chatManager.scheduleConversationStartIfInactive(5e3),await this.profileManager.isProfileSaved()){const e=await this.profileManager.getProfile();console.log("Profile found:",e),await this.viewManager.switchScreen("main-screen","main-buttons",this),this.viewManager.showToggleCameraButton();const t="true"===i.f.get("postButtonDisabled");this.viewManager.setPostButtonEnabled(!t),this.viewManager.updateProfileDisplay(e),this.selfieData=e.selfie,await this.viewManager.loadLatestDiaryPosts()}else console.log("Profile not found, showing landing screen."),await this.viewManager.switchScreen("landing-screen","landing-buttons",this);const e=document.getElementById("preloader");e&&(e.style.display="none",console.log("[App] Preloader hidden after AI model preload and app init."))}}function k(e){return new Promise(((t,a)=>{const n=document.createElement("script");n.src=e,n.async=!1,n.onload=()=>t(e),n.onerror=()=>a(new Error(`Failed to load ${e}`)),document.head.appendChild(n)}))}document.addEventListener("DOMContentLoaded",(()=>{const t=document.getElementById("loader");t&&(t.style.display="block");let a=Promise.resolve();"serviceWorker"in navigator&&(a=navigator.serviceWorker.register(`${e.o2}/sw.js`).then((e=>(console.log("Service Worker registered with scope:",e.scope),e.waiting&&promptUserToUpdate(),e.addEventListener("updatefound",(()=>{const t=e.installing;t.addEventListener("statechange",(()=>{"installed"===t.state&&navigator.serviceWorker.controller&&promptUserToUpdate()}))})),navigator.serviceWorker.ready))).catch((e=>{console.warn("Service Worker registration failed, continuing without it:",e)})),navigator.serviceWorker.addEventListener("message",(e=>{"NEW_VERSION_AVAILABLE"===e.data?.type&&promptUserToUpdate()})),navigator.serviceWorker.addEventListener("controllerchange",(()=>{console.log("New Service Worker activated; reloading page"),window.location.reload()}))),Promise.all([a,k(e.Sj),k(e.gO),k(e.mB)]).then((()=>{console.log("All external libraries loaded");new x;let e;t&&(t.style.display="none"),window.addEventListener("beforeinstallprompt",(t=>{t.preventDefault(),e=t;const a=document.getElementById("install-btn");a&&(a.style.display="block")}));const a=document.getElementById("install-btn");a&&a.addEventListener("click",(async()=>{if(!e)return;e.prompt();const{outcome:t}=await e.userChoice;console.log(`User response to the install prompt: ${t}`),a.style.display="none",e=null}));const n=document.getElementById("update-btn");n&&n.addEventListener("click",(()=>{console.log("Update button clicked; clearing caches"),navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage({action:"CLEAR_CACHE"})}))})).catch((e=>{console.error("Initialization failed:",e),t&&(t.style.display="none")}))}))})()})();