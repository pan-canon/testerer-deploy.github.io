export class EventManager {
  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä EventManager.
   * @param {DatabaseManager} databaseManager - —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
   * @param {LanguageManager} languageManager - –º–µ–Ω–µ–¥–∂–µ—Ä –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏.
   * @param {GhostManager} ghostManager - –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–∏–∑—Ä–∞–∫–æ–≤ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è).
   *
   * –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ä–∞–±–æ—Ç—É —Å –¥–Ω–µ–≤–Ω–∏–∫–æ–º:
   * - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π (–¥–∏–∞–ª–æ–≥–æ–≤, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –∫–≤–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π).
   * - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π.
   * - –ó–∞–ø—É—Å–∫ –∫–≤–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∑–µ—Ä–∫–∞–ª–æ–º, –∏ –∫–≤–µ—Å—Ç–æ–≤ –æ—Ç –ø—Ä–∏–∑—Ä–∞–∫–æ–≤.
   */
  constructor(databaseManager, languageManager, ghostManager, visualEffectsManager) {
    this.databaseManager = databaseManager;
    this.languageManager = languageManager;
    this.ghostManager = ghostManager;
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–Ω–µ–≤–Ω–∏–∫–∞ –∏–∑ DOM
    this.diaryContainer = document.getElementById("diary");
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
    this.visualEffectsManager = visualEffectsManager;
  }

  /**
   * isEventLogged ‚Äì –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª–∞ –ª–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å —Å –¥–∞–Ω–Ω—ã–º –∫–ª—é—á–æ–º.
   * @param {string} eventKey - –∫–ª—é—á —Å–æ–±—ã—Ç–∏—è.
   * @returns {boolean} true, –µ—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞, –∏–Ω–∞—á–µ false.
   */
  isEventLogged(eventKey) {
    const entries = this.databaseManager.getDiaryEntries();
    return entries.some(entry => entry.entry === eventKey);
  }

  /**
   * addDiaryEntry ‚Äì –¥–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º, –æ—Ç –∫–æ–≥–æ –æ–Ω–∞ (–ø—Ä–∏–∑—Ä–∞–∫ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å).
   * @param {string} entry - –¢–µ–∫—Å—Ç –∑–∞–ø–∏—Å–∏ (–æ–±—ã—á–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON).
   * @param {boolean} [isPostFromGhost=false] - –µ—Å–ª–∏ true, –∑–∞–ø–∏—Å—å –±—É–¥–µ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –∫–∞–∫ –∑–∞–ø–∏—Å—å –ø—Ä–∏–∑—Ä–∞–∫–∞.
   */
  async addDiaryEntry(entry, isPostFromGhost = false) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º CSS-–∫–ª–∞—Å—Å –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
    const postClass = isPostFromGhost ? "ghost-post" : "user-post";
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–ø–∏—Å–∏
    const entryData = { entry, postClass };
    // –°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–ø–∏—Å–∏ –≤ JSON-—Å—Ç—Ä–æ–∫—É
    const serializedEntry = JSON.stringify(entryData);
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–º–µ—Ç–æ–¥ addDiaryEntry –±–∞–∑—ã)
    await this.databaseManager.addDiaryEntry(serializedEntry);
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–∏–∫–∞
    this.updateDiaryDisplay();
  }

  /**
   * updateDiaryDisplay ‚Äì –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–Ω–µ–≤–Ω–∏–∫–∞.
   * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –±–∞–∑—ã, —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏—Ö –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤ –≤–∏–¥–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ <article>.
   */
  updateDiaryDisplay() {
    if (!this.diaryContainer) {
      console.error("Diary container not found!");
      return;
    }

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–Ω–µ–≤–Ω–∏–∫–∞
    this.diaryContainer.innerHTML = "";

    // –ü–æ–ª—É—á–∞–µ–º –∏–∑ localStorage –º–∞—Å—Å–∏–≤ ID –∑–∞–ø–∏—Å–µ–π, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö —É–∂–µ –∑–∞–ø—É—Å–∫–∞–ª–∞—Å—å –∞–Ω–∏–º–∞—Ü–∏—è
    const animatedIds = JSON.parse(localStorage.getItem("animatedDiaryIds") || "[]");

    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const entries = this.databaseManager.getDiaryEntries();
    const seen = new Set();
    const currentLanguage = this.languageManager.getLanguage();

    entries.forEach(entryObj => {
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π (–ø–æ id)
      if (seen.has(entryObj.id)) return;
      seen.add(entryObj.id);

      // –°–æ–∑–¥–∞–µ–º –æ–±—ë—Ä—Ç–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏ <article>
      const articleElem = document.createElement("article");
      articleElem.classList.add(entryObj.postClass);

      // –†–∞–∑–±–∏–≤–∞–µ–º –∑–∞–ø–∏—Å—å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å)
      let mainText = entryObj.entry;
      let imageData = null;
      if (entryObj.entry.includes("[photo attached]")) {
        const parts = entryObj.entry.split("[photo attached]");
        mainText = parts[0].trim();
        if (parts.length >= 2) {
          imageData = parts[1].trim();
          if (!/^data:/.test(imageData)) {
            imageData = "data:image/png;base64," + imageData;
          }
        }
      }

      // –õ–æ–∫–∞–ª–∏–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∫–ª—é—á)
      const localizedText =
        this.languageManager.locales[currentLanguage][mainText] || mainText;

      // –£–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã
      const cleanedText = localizedText
        .replace(/^user_post_success:\s*/, '')
        .replace(/^user_post_failed:\s*/, '');

      // –£–¥–∞–ª—è–µ–º –¥—Ä–æ–±–Ω—É—é —á–∞—Å—Ç—å —Å–µ–∫—É–Ω–¥ –∏ —Å–∏–º–≤–æ–ª "Z" —É timestamp
      const formattedTimestamp = entryObj.timestamp.replace(/\.\d+Z$/, '');

      // –°–æ–±–∏—Ä–∞–µ–º "—Å—ã—Ä–æ–π" –≤–∞—Ä–∏–∞–Ω—Ç —Ç–µ–∫—Å—Ç–∞: "–¢–ï–ö–°–¢ (2025-02-20T15:34:12)" –∏ —Ç.–¥.
      const fullText = ${cleanedText} (${formattedTimestamp});

      // –ï—Å–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è–µ–º <img> –ø–µ—Ä–µ–¥ —Ç–µ–∫—Å—Ç–æ–º
      const textContainer = document.createElement("p");
      if (imageData) {
        const img = document.createElement("img");
        img.src = imageData;
        img.alt = this.languageManager.locales[currentLanguage]["photo_attached"] || "Photo attached";
        img.style.maxWidth = "100%";
        articleElem.appendChild(img);
      }
      articleElem.appendChild(textContainer);

      // –ì–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç —Å <br> –ø–µ—Ä–µ–¥ –¥–∞—Ç–æ–π, –µ—Å–ª–∏ –¥–∞—Ç–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞ –≤ –∫–æ–Ω—Ü–µ
      let messageText = fullText; // –¢–æ, —á—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –±—É–¥–µ—Ç –∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è
      const dateMatch = fullText.match(/(\(\d{4}-\d{2}-\d{2}.*\))$/);
      if (dateMatch) {
        const dateText = dateMatch[1].trim();
        messageText = fullText.replace(dateText, "").trim() + "<br>" + dateText;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —É–∂–µ –∞–Ω–∏–º–∞—Ü–∏—è –¥–ª—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏
      const isAlreadyAnimated = animatedIds.includes(entryObj.id);
      const effectsManager = this.visualEffectsManager;

      if (isAlreadyAnimated) {
        // –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —É–∂–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–ª–∞—Å—å, –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∫ HTML
        textContainer.innerHTML = messageText;
      } else {
        // –ó–∞–ø–∏—Å—å –Ω–æ–≤–∞—è: –∞–Ω–∏–º–∏—Ä—É–µ–º
        const animatedSpan = document.createElement("span");
        textContainer.innerHTML = ""; // –û—á–∏—â–∞–µ–º <p>, —á—Ç–æ–±—ã –ø–æ–ª–æ–∂–∏—Ç—å —Ç—É–¥–∞ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π span
        textContainer.appendChild(animatedSpan);

        // –ó–∞–ø—É—Å–∫–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç (ghost –∏–ª–∏ user)
        if (entryObj.postClass === "ghost-post") {
          effectsManager.triggerGhostTextEffect(animatedSpan, messageText);
        } else {
          effectsManager.triggerUserTextEffect(animatedSpan, messageText);
        }

        // –ü–æ–º–µ—á–∞–µ–º —ç—Ç—É –∑–∞–ø–∏—Å—å –∫–∞–∫ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—É—é
        animatedIds.push(entryObj.id);
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –≥–æ—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      this.diaryContainer.appendChild(articleElem);
    });

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ animatedIds
    localStorage.setItem("animatedDiaryIds", JSON.stringify(animatedIds));
    console.log("üìñ Diary updated.");
  }

  /**
   * startMirrorQuest ‚Äì –Ω–∞—á–∏–Ω–∞–µ—Ç –∫–≤–µ—Å—Ç —Å –∑–µ—Ä–∫–∞–ª–æ–º –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
   * –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å —Å –ø—Ä–æ—Å—å–±–æ–π –ø–æ–¥–æ–π—Ç–∏ –∫ –∑–µ—Ä–∫–∞–ª—É –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–ß—Ç–æ —ç—Ç–æ?".
   */
  async startMirrorQuest() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ—Ç –ø—Ä–∏–∑—Ä–∞–∫–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    await this.addDiaryEntry("–ü–æ–¥–æ–π–¥–∏ –∫ –∑–µ—Ä–∫–∞–ª—É", true);
    console.log("üé≠ Starting mirror quest...");
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ß—Ç–æ —ç—Ç–æ?" –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞
    this.createWhatIsThisButton();
  }

  /**
   * createWhatIsThisButton ‚Äì —Å–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–ß—Ç–æ —ç—Ç–æ?" —Å —Ç–∞–π–º–µ—Ä–æ–º –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫—Ä—ã—Ç–∏—è.
   * –ü–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–æ—Ü–µ—Å—Å –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞.
   */
  createWhatIsThisButton() {
    const buttonContainer = document.createElement("div");
    const button = document.createElement("button");
    button.textContent = "–ß—Ç–æ —ç—Ç–æ?!";
    button.id = "what_is_this_button";
    
    // –ü–æ –Ω–∞–∂–∞—Ç–∏—é –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞ –∏ —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É.
    button.addEventListener("click", async () => {
      await this.startMirrorQuestProcess();
      button.style.display = 'none';
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥.
    setTimeout(() => {
      button.style.display = 'none';
    }, 5000);

    buttonContainer.appendChild(button);
    this.diaryContainer.appendChild(buttonContainer);
  }

  /**
   * startMirrorQuestProcess ‚Äì –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞.
   * –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ (—á–µ—Ä–µ–∑ compareCurrentFrame) –¥–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.
   */
  async startMirrorQuestProcess() {
    const success = await this.checkStatus(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∏–≥—Ä–æ–∫ –ø–µ—Ä–µ–¥ –∑–µ—Ä–∫–∞–ª–æ–º.
    if (success) {
      // –ü—Ä–∏–º–µ—Ä: –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å —Å –±—É–∫–≤–æ–π "Z" –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∫–≤–µ—Å—Ç–∞.
      const photoOrText = "–ë—É–∫–≤–∞ Z";
      await this.addDiaryEntry(photoOrText);
    } else {
      alert("‚ùå –ö–≤–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω!");
    }
  }

  /**
   * checkStatus ‚Äì –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∏–≥—Ä–æ–∫ –ø–µ—Ä–µ–¥ –∑–µ—Ä–∫–∞–ª–æ–º.
   * –í—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ compareCurrentFrame() —É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
   * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: true, –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –∏–Ω–∞—á–µ false.
   */
  async checkStatus() {
    const success = await this.app.compareCurrentFrame();
    return success;
  }

  /**
   * startGhostQuest ‚Äì –∑–∞–ø—É—Å–∫–∞–µ—Ç –∫–≤–µ—Å—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–∏–∑—Ä–∞–∫–∞.
   * –î–æ–±–∞–≤–ª—è–µ—Ç –≤ –¥–Ω–µ–≤–Ω–∏–∫ –∑–∞–ø–∏—Å—å —Å –∫–ª—é—á–æ–º –∫–≤–µ—Å—Ç–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å.
   */
  async startGhostQuest() {
    const ghost = this.ghostManager.getCurrentGhost();
    if (ghost) {
      const questKey = ghost_${ghost.id}_quest;
      await this.addDiaryEntry(questKey, true);
      console.log(üëª Starting quest for ${ghost.name}...);
    } else {
      console.error("‚ö†Ô∏è No active ghost found.");
    }
  }
}