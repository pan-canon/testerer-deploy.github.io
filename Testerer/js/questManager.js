import { BaseMirrorQuest } from './quests/baseMirrorQuest.js';

/**
 * QuestManager ‚Äì –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞–º–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
 *
 * –î–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–≤–µ—Å—Ç–∞–º–∏,
 * –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –∏—Ö –∞–∫—Ç–∏–≤–∞—Ü–∏–∏, –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.
 * –û–Ω –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å EventManager –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ,
 * —Å –æ—Å–Ω–æ–≤–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (App) –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –æ–±—â–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º –∏ —Å ProfileManager –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
 *
 * –†–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Å–≤–æ—è –≤–µ—Ä—Å–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞ Observer: –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–≤–µ—Å—Ç–æ–≤ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã.
 */
export class QuestManager {
  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä QuestManager.
   * @param {EventManager} eventManager - –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–±—ã—Ç–∏–π (—Ä–∞–±–æ—Ç–∞ —Å –¥–Ω–µ–≤–Ω–∏–∫–æ–º).
   * @param {App} appInstance - –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
   * @param {ProfileManager} profileManager - –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
   *
   * –ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–≤–µ—Å—Ç—ã. –í —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω —Ç–æ–ª—å–∫–æ BaseMirrorQuest.
   */
  constructor(eventManager, appInstance, profileManager) {
    this.eventManager = eventManager;
    this.app = appInstance;
    this.profileManager = profileManager;
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–≤–µ—Å—Ç—ã. –í –±—É–¥—É—â–µ–º —Å—é–¥–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –∫–≤–µ—Å—Ç—ã.
    this.quests = [
      new BaseMirrorQuest(this.eventManager, this.app)
    ];
  }

  /**
   * activateQuest ‚Äì –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∫–≤–µ—Å—Ç –ø–æ –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É –∫–ª—é—á—É.
   * @param {string} key - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –∫–≤–µ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "mirror_quest").
   *
   * –ú–µ—Ç–æ–¥ –∏—â–µ—Ç –∫–≤–µ—Å—Ç —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–ª—é—á–æ–º –≤ –º–∞—Å—Å–∏–≤–µ this.quests –∏, –µ—Å–ª–∏ –æ–Ω –Ω–∞–π–¥–µ–Ω,
   * –≤—ã–∑—ã–≤–∞–µ—Ç –µ–≥–æ –º–µ—Ç–æ–¥ activate() –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞.
   *
   * @returns {Promise<void>}
   */
  async activateQuest(key) {
    const quest = this.quests.find(q => q.key === key);
    if (quest) {
      await quest.activate();
    }
  }

  /**
   * checkQuest ‚Äì –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∫–≤–µ—Å—Ç –ø–æ –µ–≥–æ –∫–ª—é—á—É.
   * @param {string} key - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –∫–≤–µ—Å—Ç–∞.
   *
   * –ú–µ—Ç–æ–¥ –∏—â–µ—Ç –∫–≤–µ—Å—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–ª—é—á–æ–º –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –µ–≥–æ –º–µ—Ç–æ–¥ finish(),
   * —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ª–æ–≤–∏—è –∫–≤–µ—Å—Ç–∞ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
   *
   * @returns {Promise<void>}
   */
  async checkQuest(key) {
    const quest = this.quests.find(q => q.key === key);
    if (quest) {
      await quest.finish();
    }
  }

  /**
   * checkMirrorQuestOnCamera ‚Äì —É–¥–æ–±–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞.
   *
   * –í—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ checkQuest —Å –∫–ª—é—á–æ–º "mirror_quest".
   *
   * @returns {Promise<void>}
   */
  async checkMirrorQuestOnCamera() {
    await this.checkQuest("mirror_quest");
  }

  /**
   * triggerMirrorQuestIfActive ‚Äì –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞,
   * –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω. –ù–∞–ø—Ä–∏–º–µ—Ä, —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã.
   *
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–ª–∞–≥ –≤ localStorage (mirrorQuestActive); –µ—Å–ª–∏ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞.
   *
   * @returns {Promise<void>}
   */
  async triggerMirrorQuestIfActive() {
    if (localStorage.getItem("mirrorQuestActive") === "true") {
      console.log("ü™û –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞...");
      await this.checkMirrorQuestOnCamera();
    }
  }

  /**
   * checkAvailablePhenomena ‚Äì –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è (phenomena) –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏.
   *
   * –ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–∞–µ—Ç —Ç–∏–ø –ª–æ–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ ProfileManager, –∑–∞—Ç–µ–º –Ω–∞—Ö–æ–¥–∏—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–∏–∑—Ä–∞–∫–∞
   * –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è –¥–ª—è –ª–æ–∫–∞—Ü–∏–∏ —Å —Ç–µ–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–∑—Ä–∞–∫–∞.
   *
   * –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ, –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å.
   *
   * @returns {Promise<void>}
   */
  async checkAvailablePhenomena() {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–∏–ø –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ ProfileManager.
    const locationType = this.profileManager.getLocationType();
    if (locationType) {
      console.log(`–¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è: ${locationType}`);
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏.
      const locationAllowedPhenomena = {
        "–ö—É—Ö–Ω—è": ["call", "randomCall"],
        "–°–ø–∞–ª—å–Ω—è": ["call", "randomCall"],
        "–ì–æ—Å—Ç–∏–Ω–∞—è": ["call", "randomCall"],
        "–í–∞–Ω–Ω–∞—è": ["call", "randomCall"],
        "–ö–æ—Ä–∏–¥–æ—Ä": ["call", "randomCall"],
        "–î—Ä—É–≥–æ–µ": ["call", "randomCall"],
        "–ü–æ–¥—ä–µ–∑–¥": ["call", "randomCall"],
        "–ö–∞–±–∏–Ω–µ—Ç": ["call", "randomCall"],
        "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞": ["call", "randomCall"],
        "–î–µ—Ç—Å–∫–∞—è": ["call", "randomCall"],
        "–ö–ª–∞–¥–æ–≤–∞—è": ["call", "randomCall"],
        "–ì–∞—Ä–∞–∂": ["call", "randomCall"]
      };
      // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏.
      const locationPhenomena = locationAllowedPhenomena[locationType] || [];
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–∏–∑—Ä–∞–∫–∞ –∏–∑ GhostManager.
      const ghost = this.app.ghostManager.getCurrentGhost();
      if (ghost) {
        // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –æ–±—ä–µ–∫—Ç–∞ ghost –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ allowedPhenomena ‚Äì –º–∞—Å—Å–∏–≤ —è–≤–ª–µ–Ω–∏–π,
        // –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–∑—Ä–∞–∫–∞.
        const intersection = ghost.allowedPhenomena.filter(p => locationPhenomena.includes(p));
        if (intersection.length > 0) {
          console.log(`–î–æ—Å—Ç—É–ø–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è: ${intersection}`);
          // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —è–≤–ª–µ–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–ø—É—Å–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ –∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
        }
      }
    }
  }
}