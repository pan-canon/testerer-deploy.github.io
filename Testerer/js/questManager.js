export class QuestManager {
  constructor(eventManager, appInstance) {
    this.eventManager = eventManager;
    this.app = appInstance; // –Ω—É–∂–Ω–æ –¥–ª—è app.compareCurrentFrame()
  }

  /**
   * –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º mirror_quest, –µ—Å–ª–∏ –µ—â—ë –Ω–µ—Ç.
   */
  async activateMirrorQuest() {
    if (!this.eventManager.isEventLogged("mirror_quest")) {
      console.log("üîî –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º mirror_quest...");
      await this.eventManager.addDiaryEntry("mirror_quest");
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ mirror_quest –µ—Å—Ç—å, –Ω–æ –Ω–µ—Ç mirror_done:
   * –í—ã–∑—ã–≤–∞–µ–º compareCurrentFrame() -> –ø—Ä–∏ —É—Å–ø–µ—Ö–µ "mirror_done", –∑–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫
   */
  async checkMirrorQuestOnCamera() {
    const hasQuest = this.eventManager.isEventLogged("mirror_quest");
    const doneQuest = this.eventManager.isEventLogged("mirror_done");
    if (hasQuest && !doneQuest) {
      console.log("ü™û Mirror quest –∞–∫—Ç–∏–≤–Ω–æ. –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∏–∫—Å–µ–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ...");

      setTimeout(async () => {
        const success = await this.app.compareCurrentFrame(); 
        if (success) {
          // –ï—Å–ª–∏ —É—Å–ø–µ—Ö, –ª–æ–≥–∏—Ä—É–µ–º mirror_done
          if (!this.eventManager.isEventLogged("mirror_done")) {
            await this.eventManager.addDiaryEntry("mirror_done");
          }
          alert("‚úÖ –ó–∞–¥–∞–Ω–∏–µ ¬´–ø–æ–¥–æ–π—Ç–∏ –∫ –∑–µ—Ä–∫–∞–ª—É¬ª –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!");
        } else {
          alert("‚ùå –ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!");
        }
      }, 3000);
    }
  }
}
