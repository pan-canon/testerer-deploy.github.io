export class EventManager {
  constructor(databaseManager, languageManager, ghostManager) {
    this.databaseManager = databaseManager;
    this.languageManager = languageManager;
    this.ghostManager = ghostManager;
    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ index.html —Å id="diary"
    this.diaryContainer = document.getElementById("diary");
  }

  isEventLogged(eventKey) {
    const entries = this.databaseManager.getDiaryEntries();
    return entries.some(entry => entry.entry === eventKey);
  }

  // –ú–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫ –æ—Ç –∏–º–µ–Ω–∏ –ø—Ä–∏–∑—Ä–∞–∫–∞
  async addDiaryEntry(key, imageData = null, isFromGhost = false) {
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –≤ –≤–∏–¥–µ:
    let entry = key;
    if (imageData) {
      entry = `${key}\n[photo attached]\n${imageData}`;
    }

    // –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –ø—Ä–∏–∑—Ä–∞–∫–∞
    if (isFromGhost) {
      const ghost = this.ghostManager.getCurrentGhost();
      entry = `${ghost.name}: ${entry}`; // –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è –ø—Ä–∏–∑—Ä–∞–∫–∞
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await this.databaseManager.addDiaryEntry(entry);
    this.updateDiaryDisplay();
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–∏–∫–∞
  updateDiaryDisplay() {
    if (!this.diaryContainer) {
      console.error("Diary container not found!");
      return;
    }
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–Ω–µ–≤–Ω–∏–∫–∞
    this.diaryContainer.innerHTML = "";
    const entries = this.databaseManager.getDiaryEntries();
    const seen = new Set();
    const currentLanguage = this.languageManager.getLanguage();

    entries.forEach(entry => {
      // –ï—Å–ª–∏ —É–∂–µ –≤—ã–≤–æ–¥–∏–ª–∏ —Ç–∞–∫—É—é –∑–∞–ø–∏—Å—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
      if (seen.has(entry.entry)) return;
      seen.add(entry.entry);
      
      // –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–∫—É "[photo attached]", —Ä–∞–∑–±–∏–≤–∞–µ–º –µ—ë
      if (entry.entry.includes("[photo attached]")) {
        const parts = entry.entry.split("\n[photo attached]\n");
        const textPart = parts[0];
        const imageData = parts[1];

        // –°–æ–∑–¥–∞—ë–º –æ–±—ë—Ä—Ç–∫—É
        const wrapper = document.createElement("div");

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—Å—Ç (–ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π, –µ—Å–ª–∏ –µ—Å—Ç—å)
        const p = document.createElement("p");
        const localizedText =
          this.languageManager.locales[currentLanguage][textPart] || textPart;
        p.textContent = `${localizedText} (${entry.timestamp})`;
        wrapper.appendChild(p);

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        const img = document.createElement("img");
        img.src = imageData;
        img.alt =
          this.languageManager.locales[currentLanguage]["photo_attached"] ||
          "Photo attached";
        img.style.maxWidth = "100%";
        wrapper.appendChild(img);

        this.diaryContainer.appendChild(wrapper);
      } else {
        // –î–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π ‚Äì –ª–æ–∫–∞–ª–∏–∑—É–µ–º, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        const localizedText =
          this.languageManager.locales[currentLanguage][entry.entry] || entry.entry;
        const p = document.createElement("p");
        p.textContent = `${localizedText} (${entry.timestamp})`;
        this.diaryContainer.appendChild(p);
      }
    });
    console.log("üìñ Diary updated.");
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –æ—Ç –∏–º–µ–Ω–∏ –ø—Ä–∏–∑—Ä–∞–∫–∞
  async addGhostDiaryEntry(key, imageData = null) {
    await this.addDiaryEntry(key, imageData, true); // isFromGhost = true
  }

  // –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –∫–≤–µ—Å—Ç–∞
  async startGhostQuest() {
    const ghost = this.ghostManager.getCurrentGhost();
    if (ghost) {
      const questKey = `ghost_${ghost.id}_quest`;
      await this.addGhostDiaryEntry(questKey);
      console.log(`üëª Starting quest for ${ghost.name}...`);
    } else {
      console.error("‚ö†Ô∏è No active ghost found.");
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏—è "welcome" (–∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å)
  async startEvent(eventKey) {
    console.log(`–ó–∞–ø—É—Å–∫ —Å–æ–±—ã—Ç–∏—è: ${eventKey}`);
    if (eventKey === "welcome") {
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –ø—Ä–æ—Å—å–±–µ –ø–æ–¥–æ–π—Ç–∏ –∫ –∑–µ—Ä–∫–∞–ª—É
      await this.addGhostDiaryEntry("–û–Ω–∏ –ø—Ä–æ—Å—è—Ç –º–µ–Ω—è –ø–æ–¥–æ–π—Ç–∏ –∫ –∑–µ—Ä–∫–∞–ª—É");

      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–≤–µ—Å—Ç —Å –∑–µ—Ä–∫–∞–ª–æ–º
      this.app.questManager.activateQuest("mirror_quest");
    }
  }
}