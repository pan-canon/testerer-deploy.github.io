import { WelcomeEvent } from './events/welcomeEvent.js';
import { FinalEvent }   from './events/finalEvent.js';

/**
 * GameEventManager ‚Äì –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∫–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–±—ã—Ç–∏—è (Welcome, Final...).
 * –ü—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –º–æ–∂–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ.
 */
export class GameEventManager {
  constructor(eventManager, appInstance, languageManager) {
    this.eventManager    = eventManager;
    this.app             = appInstance;
    this.languageManager = languageManager;
    
    // –°–ø–∏—Å–æ–∫ ¬´–∫–æ—Ä–æ—Ç–∫–∏—Ö¬ª —Å–æ–±—ã—Ç–∏–π:
    this.events = [
      new WelcomeEvent(this.eventManager, this.app, this.languageManager),
      new FinalEvent(this.eventManager, this.app, this.languageManager)
    ];
    
    this.currentEventIndex = 0;
  }

  /**
   * activateEvent(key): –∏—â–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ this.events, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º, —Å–¥–≤–∏–≥–∞–µ–º currentEventIndex.
   */
  async activateEvent(key) {
    const event = this.events.find(e => e.key === key);
    if (event) {
      await event.activate();
      this.currentEventIndex++;
      if (this.currentEventIndex < this.events.length) {
        await this.activateNextEvent();
      }
    } else {
      console.warn(`–°–æ–±—ã—Ç–∏–µ —Å –∫–ª—é—á–æ–º "${key}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ GameEventManager.`);
    }
  }

  /**
   * activateNextEvent: –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ –ø–æ currentEventIndex, –µ—Å–ª–∏ –µ—Å—Ç—å.
   */
  async activateNextEvent() {
    const nextEvent = this.events[this.currentEventIndex];
    if (nextEvent) {
      await nextEvent.activate();
      this.currentEventIndex++;
    }
  }

  /**
   * startQuest ‚Äì –ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ —Ö–æ—Ç–∏–º –∑–∞–ø—É—Å–∫–∞—Ç—å –∫–≤–µ—Å—Ç —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏—è;
   * –ù–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∫–≤–µ—Å—Ç—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç QuestManager, —Ç–∞–∫ —á—Ç–æ –º–æ–∂–Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
   */
  async startQuest() {
    const ghost = this.app.ghostManager.getCurrentGhost();
    const questKey = `ghost_${ghost.id}_quest`;
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å–æ–±—ã—Ç–∏–µ —Å —Ç–∞–∫–∏–º –∫–ª—é—á–æ–º
    const event = this.events.find(e => e.key === questKey);
    if (event) {
      await this.activateEvent(questKey);
    } else {
      // –ï—Å–ª–∏ –≤ events –Ω–µ—Ç, –≤—ã–∑—ã–≤–∞–µ–º QuestManager
      await this.app.questManager.activateQuest(questKey);
    }
    if (this.currentEventIndex < this.events.length) {
      await this.activateNextEvent();
    }
  }

  /**
   * startMirrorQuest ‚Äì –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–º —Å–æ–±—ã—Ç–∏–µ–º, –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —á–µ—Ä–µ–∑ event.
   * –ù–æ —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–≤–µ—Å—Ç "mirror_quest" –≤ QuestManager.
   */
  async startMirrorQuest() {
    await this.activateEvent('mirror_quest');
    console.log("ü™û Mirror Quest started via GameEventManager.");
  }
}