import { BaseEvent } from '../events/baseEvent.js';

export class FinalQuest extends BaseEvent {
  constructor(eventManager, appInstance, config = {}) {
    super(eventManager);
    this.app      = appInstance;
    this.key      = config.key || "final_quest";
    this.finished = false;
  }

  async activate() {
    if (!this.eventManager.isEventLogged(this.key)) {
      console.log(`[FinalQuest] –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç: ${this.key}`);
      await this.eventManager.addDiaryEntry(this.key, true);
    } else {
      console.log(`[FinalQuest] –°–æ–±—ã—Ç–∏–µ "${this.key}" —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.`);
    }
  }

  async checkStatus() {
    return true;
  }

  async finish() {
    if (this.finished) return;
    const success = await this.checkStatus();
    if (!success) {
      alert("‚ùå –£—Å–ª–æ–≤–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!");
      return;
    }

    this.finished = true;
    console.log(`[FinalQuest] –ó–∞–≤–µ—Ä—à–∞–µ–º –∫–≤–µ—Å—Ç: ${this.key}`);
    await this.eventManager.addDiaryEntry(`${this.key}_completed`, true);

    if (this.app.ghostManager) {
      this.app.ghostManager.finishCurrentGhost();
    }
    alert("üéâ –§–∏–Ω–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! –°—Ü–µ–Ω–∞—Ä–∏–π/–ø—Ä–∏–∑—Ä–∞–∫ –æ–∫–æ–Ω—á–µ–Ω!");
  }
}