"use strict";(self.webpackChunktesterer_deploy_github_io=self.webpackChunktesterer_deploy_github_io||[]).push([[386],{350:(t,e,a)=>{a.d(e,{e:()=>i});var s=a(166);class i{constructor(t){this.eventManager=t,this.key=""}async activate(){try{this.eventManager.isEventLogged(this.key)||(console.log(`Activating event: ${this.key}`),await this.eventManager.addDiaryEntry(this.key))}catch(t){s.S.logError(t,"BaseEvent.activate"),s.S.showError("An error occurred during event activation.")}}async addDiaryEntry(t,e=!1){try{await this.eventManager.addDiaryEntry(t,e)}catch(t){s.S.logError(t,"BaseEvent.addDiaryEntry"),s.S.showError("An error occurred while adding a diary entry.")}}}},470:(t,e,a)=>{a.d(e,{Y:()=>i});var s=a(350);a(713);class i extends s.e{constructor(t,e,a,s){super(t),this.app=e,this.key=a.key}async activate(){this.eventManager.isEventLogged(this.key)?console.log(`[PostMirrorEvent] Event '${this.key}' is already logged, skipping activation.`):(console.log(`[PostMirrorEvent] Activating event '${this.key}'.`),await this.addDiaryEntry(this.key,!0),this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!0),this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.triggerMirrorEffect&&this.app.visualEffectsManager.triggerMirrorEffect(),console.log("[PostMirrorEvent] Mirror quest cycle ended; waiting for user action to trigger the next quest."),document.dispatchEvent(new CustomEvent("gameEventCompleted",{detail:this.key})))}}},622:(t,e,a)=>{a.r(e),a.d(e,{BaseMirrorQuest:()=>o,PostMirrorEvent:()=>h.Y,WelcomeEvent:()=>r});var s=a(350),i=a(713);class r extends s.e{constructor(t,e,a,s){super(t),this.app=e,this.languageManager=s,this.key=a.key}async activate(){return"true"===i.f.get(i.f.KEYS.WELCOME_DONE)?(console.log(`Welcome event '${this.key}' already completed; skipping activation.`),void(this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!0))):this.eventManager.isEventLogged(this.key)?(console.log(`Event '${this.key}' is already logged.`),void("mirror_quest"===i.f.get(i.f.KEYS.ACTIVE_QUEST_KEY)?this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&(this.app.viewManager.setPostButtonEnabled(!0),console.log("Post button enabled based on activeQuestKey 'mirror_quest'.")):this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&(this.app.viewManager.setPostButtonEnabled(!1),console.log("Post button remains disabled as activeQuestKey is not set to 'mirror_quest'.")))):(console.log(`Activating event '${this.key}': Logging invitation to approach the mirror`),await this.addDiaryEntry(this.key,!0),this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!0),this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.triggerMirrorEffect&&this.app.visualEffectsManager.triggerMirrorEffect(),i.f.set(i.f.KEYS.WELCOME_DONE,"true"),void document.dispatchEvent(new CustomEvent("gameEventCompleted",{detail:this.key})))}}var n=a(507);class o extends s.e{constructor(t,e,a={}){super(t),this.app=e,this.key=a.key||"mirror_quest",this.doneKey=a.doneKey||"mirror_done",this.statusElementId=a.statusElementId||"mirror-quest-status",this.shootButtonId=a.shootButtonId||"btn_shoot",this.checkInterval=null,this.finished=!1,this.tempCanvas=document.createElement("canvas"),this.tempCtx=this.tempCanvas.getContext("2d"),this.registerEvents()}registerEvents(){document.addEventListener("cameraReady",(()=>{i.f.getActiveQuestKey()===this.key&&this.startCheckLoop()}))}async activate(){this.eventManager.isEventLogged(this.key)||(console.log(`Activating event: ${this.key}`),await this.addDiaryEntry(this.key)),console.log("[BaseMirrorQuest] Mirror quest activated."),await this.app.databaseManager.saveQuestRecord({quest_key:this.key,status:"active",current_stage:1,total_stages:1})}startCheckLoop(){this.checkInterval||(this.app.viewManager&&"function"==typeof this.app.viewManager.startMirrorQuestUI&&this.app.viewManager.startMirrorQuestUI({statusElementId:this.statusElementId,shootButtonId:this.shootButtonId,onShoot:()=>this.finish()}),this.checkInterval=setInterval((async()=>{if(!this.app.isCameraOpen)return console.warn("[BaseMirrorQuest] Camera is not active - stopping check loop."),void this.stopCheckLoop();const t=await this.checkStatus();this.app.viewManager&&"function"==typeof this.app.viewManager.updateMirrorQuestStatus&&this.app.viewManager.updateMirrorQuestStatus(t,this.statusElementId,this.shootButtonId)}),2e3))}stopCheckLoop(){this.checkInterval&&(clearInterval(this.checkInterval),this.checkInterval=null),this.app.viewManager&&"function"==typeof this.app.viewManager.stopMirrorQuestUI&&this.app.viewManager.stopMirrorQuestUI(this.statusElementId)}async checkStatus(){return console.log("[BaseMirrorQuest] checkStatus() -> compareFrameInternally()"),await this.compareFrameInternally()}async compareFrameInternally(){if(!this.app.isCameraOpen)return console.warn("[BaseMirrorQuest] Camera is not active (app.isCameraOpen false)"),!1;if(!this.app.selfieData)return console.warn("[BaseMirrorQuest] No saved selfie (app.selfieData)"),!1;const t=this.app.cameraSectionManager?.videoElement;if(!t||!t.srcObject)return console.warn("[BaseMirrorQuest] Camera is not active!"),!1;this.tempCanvas.width=t.videoWidth||640,this.tempCanvas.height=t.videoHeight||480,this.tempCtx.drawImage(t,0,0,this.tempCanvas.width,this.tempCanvas.height);const e=n.H.convertToGrayscale(this.tempCanvas),a=n.H.pixelWiseComparison(this.app.selfieData,e),s=n.H.histogramComparison(this.app.selfieData,e);console.log(`[BaseMirrorQuest] pixel=${a.toFixed(2)}, hist=${s.toFixed(2)}`);const i=a>.6&&s>.7;return i&&(this.app.lastMirrorPhoto=e),i}updateUIAfterFinish(t){this.app.viewManager&&"function"==typeof this.app.viewManager.updateMirrorQuestUIAfterFinish&&this.app.viewManager.updateMirrorQuestUIAfterFinish(t,{statusElementId:this.statusElementId,shootButtonId:this.shootButtonId,cameraButtonId:"toggle-camera"})}async finish(){if(this.finished)return;this.finished=!0,this.stopCheckLoop();const t=await this.checkStatus(),e=this.app.ghostManager.getCurrentGhost(),a=e?this.getRandomLetter(e.name):"";if(t){const t=this.app.lastMirrorPhoto?` [photo attached]\n${this.app.lastMirrorPhoto}`:"";await this.addDiaryEntry(`user_post_success: ${a}${t}`,!1)}else await this.addDiaryEntry(`user_post_failed: ${a}`,!1);this.updateUIAfterFinish(t),this.app.viewManager&&"function"==typeof this.app.viewManager.setCameraButtonActive&&this.app.viewManager.setCameraButtonActive(!1),await this.app.databaseManager.saveQuestRecord({quest_key:this.key,status:"finished",current_stage:1,total_stages:1}),await this.app.questManager.syncQuestState(),document.dispatchEvent(new CustomEvent("questCompleted",{detail:this.key}))}async getCurrentQuestStatus(){const t=this.app.databaseManager.getQuestRecord(this.key),e=i.f.getActiveQuestKey()===this.key;return{key:this.key,active:e,finished:this.finished,dbStatus:t?t.status:"not recorded"}}getRandomLetter(t){if(!t)return"";const e=t.replace(/[^A-Za-zА-Яа-яЁё]/g,"").split("");return e.length?e[Math.floor(Math.random()*e.length)]:""}}var h=a(470)}}]);