export class QuestManager {
  /**
   * @param {EventManager} eventManager ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–±—ã—Ç–∏–π (–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–Ω–µ–≤–Ω–∏–∫–æ–º)
   * @param {App} appInstance ‚Äì —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç App (–¥–ª—è –≤—ã–∑–æ–≤–∞ compareCurrentFrame())
   */
  constructor(eventManager, appInstance) {
    this.eventManager = eventManager;
    this.app = appInstance;
  }

  // –ó–ê–ú–ï–ù–Ø–ï–ú –º–µ—Ç–æ–¥ activateMirrorQuest() –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π:
  async activateMirrorQuest() {
    if (!this.eventManager.isEventLogged("mirror_quest")) {
      console.log("üîî –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º mirror_quest...");
      await this.eventManager.addDiaryEntry("mirror_quest");
    }
  }

  // –î–û–ë–ê–í–õ–Ø–ï–ú –º–µ—Ç–æ–¥ checkMirrorQuestOnCamera():
  async checkMirrorQuestOnCamera() {
    const hasQuest = this.eventManager.isEventLogged("mirror_quest");
    const doneQuest = this.eventManager.isEventLogged("mirror_done");
    if (hasQuest && !doneQuest) {
      console.log("ü™û Mirror quest –∞–∫—Ç–∏–≤–Ω–æ. –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É...");
      setTimeout(async () => {
        console.log("‚è± –ó–∞–ø—É—Å–∫ compareCurrentFrame() —á–µ—Ä–µ–∑ 3 —Å–µ–∫...");
        const success = await this.app.compareCurrentFrame();
        if (success) {
          if (!this.eventManager.isEventLogged("mirror_done")) {
            await this.eventManager.addDiaryEntry("mirror_done");
          }
          alert("‚úÖ –ó–∞–¥–∞–Ω–∏–µ ¬´–ø–æ–¥–æ–π—Ç–∏ –∫ –∑–µ—Ä–∫–∞–ª—É¬ª –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!");
        } else {
          alert("‚ùå –ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!");
        }
      }, 3000);
    }
  }
}
