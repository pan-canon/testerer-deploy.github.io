(()=>{var e,t,a={166:(e,t,a)=>{"use strict";a.d(t,{S:()=>o});class n{showNotification(e){"Notification"in window?"granted"===Notification.permission?new Notification(e):"denied"!==Notification.permission&&Notification.requestPermission().then((t=>{"granted"===t&&new Notification(e)})):console.warn("⚠️ Notifications are not supported in this browser.")}}class o{static logError(e,t=""){console.error(`Error${t?" in "+t:""}:`,e)}static showError(e){(new n).showNotification(e)}}},222:(e,t,a)=>{var n={"./triad-final_event":[911,659],"./triad-final_event.js":[911,659],"./triad-post_mirror_event":[849,467],"./triad-post_mirror_event.js":[849,467],"./triad-post_repeating_event":[413,79],"./triad-post_repeating_event.js":[413,79],"./triad-welcome":[622,386],"./triad-welcome.js":[622,386]};function o(e){if(!a.o(n,e))return Promise.resolve().then((()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=n[e],o=t[0];return a.e(t[1]).then((()=>a(o)))}o.keys=()=>Object.keys(n),o.id=222,e.exports=o},470:(e,t,a)=>{"use strict";a.d(t,{IO:()=>o,Sj:()=>s,gO:()=>r,mB:()=>i,o2:()=>n,s0:()=>l});const n=window.location.hostname.includes("github.io")?"/testerer-deploy.github.io":"",o=`${n}/assets`,s=`${o}/libs/db/sql-wasm.js`,r=`${o}/libs/tf.min.js`,i=`${o}/libs/coco-ssd.min.js`,l=`${o}/models/coco-ssd/model.json`},507:(e,t,a)=>{"use strict";a.d(t,{H:()=>n});class n{static convertToGrayscale(e){const t=e.getContext("2d"),a=t.getImageData(0,0,e.width,e.height),n=a.data;for(let e=0;e<n.length;e+=4){const t=(n[e]+n[e+1]+n[e+2])/3;n[e]=t,n[e+1]=t,n[e+2]=t}return t.putImageData(a,0,0),e.toDataURL("image/png")}static pixelWiseComparison(e,t){const a=e=>atob(e.split(",")[1]),n=a(e),o=a(t);let s=0;const r=Math.min(n.length,o.length);for(let e=0;e<r;e++)Math.abs(n.charCodeAt(e)-o.charCodeAt(e))<100&&s++;return s/r}static histogramComparison(e,t){const a=this.createHistogram(e),n=this.createHistogram(t);return 1-a.reduce(((e,t,a)=>e+Math.abs(t-n[a])),0)/(1.2*a.reduce(((e,t)=>e+t),0))}static createHistogram(e){const t=new Array(256).fill(0),a=atob(e.split(",")[1]);for(let e=0;e<a.length;e++)t[a.charCodeAt(e)]++;return t}static applyFilterToCanvas(e,t){const a=e.getContext("2d");a.save(),a.filter="nightVision"===t?"brightness(150%) contrast(120%) sepia(100%) hue-rotate(90deg)":"blackWhite"===t?"grayscale(100%)":"none";const n=a.getImageData(0,0,e.width,e.height);return a.clearRect(0,0,e.width,e.height),a.putImageData(n,0,0),a.restore(),e.toDataURL("image/png")}}},713:(e,t,a)=>{"use strict";a.d(t,{f:()=>s});var n=a(166);const o={CURRENT_SEQUENCE_INDEX:"currentSequenceIndex",POST_BUTTON_DISABLED:"postButtonDisabled",CAMERA_BUTTON_ACTIVE:"cameraButtonActive",CAMERA_OPEN:"cameraOpen",ACTIVE_QUEST_KEY:"activeQuestKey",MIRROR_QUEST_READY:"mirrorQuestReady",WELCOME_DONE:"welcomeDone",REPEATING_QUEST_STATE:"quest_state_repeating_quest",GAME_FINALIZED:"gameFinalized"};class s{static KEYS=o;static get(e){try{return localStorage.getItem(e)}catch(t){return n.S.logError(`StateManager.get error for key "${e}": ${t}`,"StateManager.get"),null}}static set(e,t){try{localStorage.setItem(e,t)}catch(t){n.S.logError(`StateManager.set error for key "${e}": ${t}`,"StateManager.set")}}static remove(e){try{localStorage.removeItem(e)}catch(t){n.S.logError(`StateManager.remove error for key "${e}": ${t}`,"StateManager.remove")}}static setCameraOpen(e){s.set(s.KEYS.CAMERA_OPEN,e?"true":"false")}static isCameraOpen(){return"true"===s.get(s.KEYS.CAMERA_OPEN)}static setActiveQuestKey(e){e?s.set(s.KEYS.ACTIVE_QUEST_KEY,e):s.remove(s.KEYS.ACTIVE_QUEST_KEY)}static getActiveQuestKey(){return s.get(s.KEYS.ACTIVE_QUEST_KEY)}static canShoot(){return"true"===this.get(s.KEYS.CAMERA_BUTTON_ACTIVE)&&!!this.getActiveQuestKey()}static canPost(){return!s.getActiveQuestKey()}}}},n={};function o(e){var t=n[e];if(void 0!==t)return t.exports;var s=n[e]={exports:{}};return a[e](s,s.exports,o),s.exports}o.m=a,o.d=(e,t)=>{for(var a in t)o.o(t,a)&&!o.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o.f={},o.e=e=>Promise.all(Object.keys(o.f).reduce(((t,a)=>(o.f[a](e,t),t)),[])),o.u=e=>(({79:"triads/triad-post_repeating_event",386:"triads/triad-welcome",467:"triads/triad-post_mirror_event",659:"triads/triad-final_event"}[e]||e)+".min.js"),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="testerer-deploy.github.io:",o.l=(a,n,s,r)=>{if(e[a])e[a].push(n);else{var i,l;if(void 0!==s)for(var c=document.getElementsByTagName("script"),d=0;d<c.length;d++){var g=c[d];if(g.getAttribute("src")==a||g.getAttribute("data-webpack")==t+s){i=g;break}}i||(l=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,o.nc&&i.setAttribute("nonce",o.nc),i.setAttribute("data-webpack",t+s),i.src=a),e[a]=[n];var h=(t,n)=>{i.onerror=i.onload=null,clearTimeout(u);var o=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),o&&o.forEach((e=>e(n))),t)return t(n)},u=setTimeout(h.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=h.bind(null,i.onerror),i.onload=h.bind(null,i.onload),l&&document.head.appendChild(i)}},o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.p="",(()=>{var e={792:0};o.f.j=(t,a)=>{var n=o.o(e,t)?e[t]:void 0;if(0!==n)if(n)a.push(n[2]);else{var s=new Promise(((a,o)=>n=e[t]=[a,o]));a.push(n[2]=s);var r=o.p+o.u(t),i=new Error;o.l(r,(a=>{if(o.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var s=a&&("load"===a.type?"missing":a.type),r=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+s+": "+r+")",i.name="ChunkLoadError",i.type=s,i.request=r,n[1](i)}}),"chunk-"+t,t)}};var t=(t,a)=>{var n,s,[r,i,l]=a,c=0;if(r.some((t=>0!==e[t]))){for(n in i)o.o(i,n)&&(o.m[n]=i[n]);if(l)l(o)}for(t&&t(a);c<r.length;c++)s=r[c],o.o(e,s)&&e[s]&&e[s][0](),e[s]=0},a=self.webpackChunktesterer_deploy_github_io=self.webpackChunktesterer_deploy_github_io||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),(()=>{"use strict";var e=o(470),t=o(166);class a{constructor(e,t){this.app=e,this.controlsPanel=t,this.effectConfig={userText:{speed:100},ghostText:{speed:100}}}playAudioWithStop(e,a){try{const t=new Audio(e);return t.play(),a&&a>0&&setTimeout((()=>{t.pause()}),a),t}catch(e){return t.S.logError(e,"playAudioWithStop"),null}}setControlsBlocked(e){if(this.app.isCameraOpen&&(e=!1),this.app.viewManager&&"function"==typeof this.app.viewManager.setControlsBlocked)this.app.viewManager.setControlsBlocked(e);else if(this.controlsPanel)try{this.controlsPanel.style.pointerEvents=e?"none":"auto"}catch(e){t.S.logError(e,"setControlsBlocked")}}animateHTMLText(e,t,a,n,o,s){e.innerHTML="";let r=0,i="",l=!1,c="";const d=setInterval((()=>{const a=t[r];if(!a)return clearInterval(d),n&&n.pause(),void(o&&o());"\n"===a?i+="<br>":("<"===a&&(l=!0),l?(c+=a,">"===a&&(i+=c,c="",l=!1)):i+=a),e.innerHTML=i,r++,"function"==typeof s&&s(e,i)}),a)}triggerMirrorEffect(){if(this.app.isCameraOpen){if(this.app.viewManager&&"function"==typeof this.app.viewManager.applyBackgroundTransition)this.app.viewManager.applyBackgroundTransition("black",1e3);else try{document.body.style.transition="background 1s",document.body.style.background="black",setTimeout((()=>{document.body.style.background=""}),1e3)}catch(e){t.S.logError(e,"triggerMirrorEffect - fallback")}this.playAudioWithStop(`${e.IO}/audio/phone_ringtone.mp3`,3e3)}else t.S.logError("Mirror effect not triggered: camera is closed.","triggerMirrorEffect")}triggerGhostAppearanceEffect(a){if(this.app.isCameraOpen)if(this.app.viewManager&&"function"==typeof this.app.viewManager.showGhostAppearanceEffect)this.app.viewManager.showGhostAppearanceEffect(a);else try{const t=document.createElement("div");Object.assign(t.style,{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",width:"200px",height:"200px",background:`url('${e.IO}/images/${a}.png') no-repeat center center`,backgroundSize:"contain",opacity:"0.7",transition:"opacity 2s"}),document.body.appendChild(t),setTimeout((()=>{t.style.opacity="0"}),3e3),setTimeout((()=>{t.remove()}),5e3)}catch(e){t.S.logError(e,"triggerGhostAppearanceEffect - fallback")}else t.S.logError("Ghost appearance effect not triggered: camera is closed.","triggerGhostAppearanceEffect")}triggerWhisperEffect(){this.playAudioWithStop("${ASSETS_PATH}/audio/whisper.mp3",5e3)}triggerGhostTextEffect(e,t,a,n){const o=n||this.effectConfig.ghostText;this.setControlsBlocked(!0);const s=new Audio("../../../../assets/audio/ghost_effect.mp3");s.play(),this.animateHTMLText(e,t,o.speed,s,(()=>{this.setControlsBlocked(!1),a&&a()}))}triggerUserTextEffect(e,t,a,n){const o=n||this.effectConfig.userText,s=document.createElement("img");s.src="../../../../assets/images/pencil.png",s.alt="Typing...",Object.assign(s.style,{width:"24px",height:"24px",position:"absolute"});const r=e.parentElement;r.style.position="relative",r.insertBefore(s,e),this.setControlsBlocked(!0);const i=new Audio("../../../../assets/audio/type_sound.mp3");i.loop=!0,i.play();this.animateHTMLText(e,t,o.speed,i,(()=>{s.remove(),this.setControlsBlocked(!1),a&&a()}),(()=>{const t=document.createElement("span");t.innerHTML="&nbsp;",e.appendChild(t);const a=t.getBoundingClientRect(),n=r.getBoundingClientRect();s.style.left=a.left-n.left+"px",s.style.top=a.top-n.top+"px",t.remove()}))}slideUpPanel(e,t=1e3,a="assets/audio/panel_slide.mp3"){e&&(e.style.transition=`transform ${t}ms ease-out, opacity ${t}ms ease-out`,e.style.transform="translateY(100%)",e.style.opacity="0",e.offsetHeight,this.playAudioWithStop(a,t),e.style.transform="translateY(0)",e.style.opacity="1")}showControlsPanelForUnregistered(){"true"!==StateManager.get("registrationCompleted")&&this.slideUpPanel(this.controlsPanel,1e3,"assets/audio/panel_slide.mp3")}applyEffectsToNewElements(e){Array.from(e).forEach((e=>{(e.matches('p[data-animate-on-board="true"]')?[e]:e.querySelectorAll('p[data-animate-on-board="true"]')).forEach((e=>{const t=e.dataset.animateEffect||"user",a=e.textContent;e.textContent="","ghost"===t?this.triggerGhostTextEffect(e,a,(()=>delete e.dataset.animateOnBoard)):this.triggerUserTextEffect(e,a,(()=>delete e.dataset.animateOnBoard))}))}))}}class n{constructor(e={}){this.dbName=e.dbName||"sqliteDB",this.storeName=e.storeName||"dbStore",this.key=e.key||"sqlite"}openDB(){return new Promise(((e,t)=>{const a=indexedDB.open(this.dbName,1);a.onerror=e=>{console.error("Error opening IndexedDB:",e.target.error),t(e.target.error)},a.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains(this.storeName)||t.createObjectStore(this.storeName)},a.onsuccess=t=>{e(t.target.result)}}))}async initDatabase(e){const t=await this.loadDatabase();let a;if(t){const n=atob(t),o=new Uint8Array(n.length);for(let e=0;e<n.length;e++)o[e]=n.charCodeAt(e);a=new e.Database(o),console.log("Database restored from IndexedDB.")}else a=new e.Database,console.log("New database instance created.");return this.migrateDatabase(a),t?console.log("Database migration complete."):console.log("New database created and tables initialized."),a}migrateDatabase(e){e.run("\n      CREATE TABLE IF NOT EXISTS diary (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        entry TEXT,\n        timestamp TEXT\n      );\n      CREATE TABLE IF NOT EXISTS apartment_plan (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        floor_number INTEGER,\n        room_data TEXT\n      );\n      CREATE TABLE IF NOT EXISTS quest_progress (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        quest_key TEXT,\n        status TEXT\n      );\n      CREATE TABLE IF NOT EXISTS ghosts (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT,\n        status TEXT,\n        progress INTEGER\n      );\n      CREATE TABLE IF NOT EXISTS events (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        event_key TEXT,\n        event_text TEXT,\n        timestamp TEXT,\n        completed INTEGER\n      );\n      CREATE TABLE IF NOT EXISTS quests (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        quest_key TEXT,\n        status TEXT,\n        current_stage INTEGER,\n        total_stages INTEGER\n      );\n      CREATE TABLE IF NOT EXISTS chat_messages (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        sender TEXT,\n        message TEXT,\n        timestamp TEXT\n      );\n    ")}async saveDatabase(e){const t=await this.openDB();return new Promise(((a,n)=>{const o=t.transaction([this.storeName],"readwrite");o.oncomplete=()=>{console.log("Database saved successfully in IndexedDB."),a()},o.onerror=e=>{console.error("Transaction error during saveDatabase:",e.target.error),n(e.target.error)};o.objectStore(this.storeName).put(e,this.key).onerror=e=>{console.error("Error saving database data:",e.target.error),n(e.target.error)}}))}async loadDatabase(){const e=await this.openDB();return new Promise(((t,a)=>{const n=e.transaction([this.storeName],"readonly");n.onerror=e=>{console.error("Transaction error during loadDatabase:",e.target.error),a(e.target.error)};const o=n.objectStore(this.storeName).get(this.key);o.onsuccess=e=>{console.log("Database loaded successfully from IndexedDB."),t(e.target.result)},o.onerror=e=>{console.error("Error loading database data:",e.target.error),a(e.target.error)}}))}async resetDatabase(){const e=await this.openDB();return new Promise(((t,a)=>{const n=e.transaction([this.storeName],"readwrite");n.oncomplete=()=>{console.log("SQL database reset successfully in IndexedDB."),t()},n.onerror=e=>{console.error("Transaction error during resetDatabase:",e.target.error),a(e.target.error)};n.objectStore(this.storeName).delete(this.key).onerror=e=>{console.error("Error deleting SQL database data:",e.target.error),a(e.target.error)}}))}async saveProfile(e){const t=await this.openDB();return new Promise(((a,n)=>{const o=t.transaction([this.storeName],"readwrite");o.oncomplete=()=>{console.log("Profile saved successfully in IndexedDB."),a()},o.onerror=e=>{console.error("Transaction error during saveProfile:",e.target.error),n(e.target.error)};o.objectStore(this.storeName).put(JSON.stringify(e),"profile").onerror=e=>{console.error("Error saving profile data:",e.target.error),n(e.target.error)}}))}async getProfile(){const e=await this.openDB();return new Promise(((t,a)=>{const n=e.transaction([this.storeName],"readonly");n.onerror=e=>{console.error("Transaction error during getProfile:",e.target.error),a(e.target.error)};const o=n.objectStore(this.storeName).get("profile");o.onsuccess=e=>{const a=e.target.result;t(a?JSON.parse(a):null)},o.onerror=e=>{console.error("Error loading profile data:",e.target.error),a(e.target.error)}}))}async resetProfile(){const e=await this.openDB();return new Promise(((t,a)=>{const n=e.transaction([this.storeName],"readwrite");n.oncomplete=()=>{console.log("Profile reset successfully in IndexedDB."),t()},n.onerror=e=>{console.error("Transaction error during resetProfile:",e.target.error),a(e.target.error)};n.objectStore(this.storeName).delete("profile").onerror=e=>{console.error("Error deleting profile:",e.target.error),a(e.target.error)}}))}}class s{constructor(e){this.dataManager=e,this.db=null,this.initDatabasePromise=this.initDatabase()}async initDatabase(){try{const t=await initSqlJs({locateFile:t=>`${e.o2}/assets/libs/db/${t}`});this.db=await this.dataManager.initDatabase(t),console.log("📖 Database initialized!")}catch(e){t.S.logError(e,"DatabaseManager.initDatabase")}}async saveDatabase(){if(!this.db)return;const e=this.db.export();let t="";for(let a=0;a<e.length;a++)t+=String.fromCharCode(e[a]);const a=btoa(t);await this.dataManager.saveDatabase(a),console.log("Database saved (persisted) successfully.")}async addDiaryEntry(e){if(!this.db)return void t.S.logError("Database not initialized!","addDiaryEntry");const a=(new Date).toISOString();this.db.run("INSERT INTO diary (entry, timestamp) VALUES (?, ?)",[e,a]),console.log("✅ Entry added:",e),await this.saveDatabase()}getDiaryEntries(){if(!this.db)return t.S.logError("Database not initialized!","getDiaryEntries"),[];const e=this.db.exec("SELECT * FROM diary ORDER BY timestamp DESC");return e.length>0?e[0].values.map((e=>{let a;try{a=JSON.parse(e[1])}catch(n){a={entry:e[1],postClass:"user-post"},t.S.logError(n,"getDiaryEntries JSON.parse")}return{id:e[0],...a,timestamp:e[2]}})):[]}addQuestProgress(e,a){this.db?(this.db.run("INSERT INTO quest_progress (quest_key, status) VALUES (?, ?)",[e,a]),console.log(`✅ Quest progress added: ${e} - ${a}`),this.saveDatabase()):t.S.logError("Database not initialized!","addQuestProgress")}getQuestProgress(e){if(!this.db)return t.S.logError("Database not initialized!","getQuestProgress"),null;const a=this.db.exec("SELECT * FROM quest_progress WHERE quest_key = ?",[e]);return a.length>0?a[0].values.map((e=>({id:e[0],quest_key:e[1],status:e[2]}))):[]}addApartmentRooms(e,a){if(!this.db)return void t.S.logError("Database not initialized!","addApartmentRooms");const n=JSON.stringify(a);this.db.run("DELETE FROM apartment_plan WHERE floor_number = ?",[e]),this.db.run("INSERT INTO apartment_plan (floor_number, room_data) VALUES (?, ?)",[e,n]),console.log(`✅ Apartment plan for floor ${e} saved.`),this.saveDatabase()}getApartmentPlan(e,a){if(!this.db)return t.S.logError("Database not initialized!","getApartmentPlan"),void a([]);const n=this.db.exec("SELECT room_data FROM apartment_plan WHERE floor_number = ? ORDER BY id",[e]);if(n.length>0){a(n[0].values.map((e=>{try{return JSON.parse(e[0])}catch(a){return t.S.logError(a,"getApartmentPlan JSON.parse"),e[0]}})))}else a([])}saveGhostState(e){this.db?(this.db.run("INSERT OR REPLACE INTO ghosts (id, name, status, progress)\n       VALUES ((SELECT id FROM ghosts WHERE id = ?), ?, ?, ?)",[e.id||null,e.name,e.status||"",e.progress||0]),console.log("✅ Ghost state saved:",e),this.saveDatabase()):t.S.logError("Database not initialized!","saveGhostState")}getGhostState(e){if(!this.db)return t.S.logError("Database not initialized!","getGhostState"),null;const a=this.db.exec("SELECT * FROM ghosts WHERE id = ?",[e]);if(a.length>0){const e=a[0].values[0];return{id:e[0],name:e[1],status:e[2],progress:e[3]}}return null}saveEvent(e){this.db?(this.db.run("INSERT INTO events (event_key, event_text, timestamp, completed)\n       VALUES (?, ?, ?, ?)",[e.event_key,e.event_text,e.timestamp,e.completed?1:0]),console.log("✅ Event saved:",e),this.saveDatabase()):t.S.logError("Database not initialized!","saveEvent")}getEvents(){if(!this.db)return t.S.logError("Database not initialized!","getEvents"),[];const e=this.db.exec("SELECT * FROM events ORDER BY timestamp DESC");return e.length>0?e[0].values.map((e=>({id:e[0],event_key:e[1],event_text:e[2],timestamp:e[3],completed:1===e[4]}))):[]}saveQuestRecord(e){this.db?(this.db.run("INSERT OR REPLACE INTO quests (id, quest_key, status, current_stage, total_stages)\n       VALUES ((SELECT id FROM quests WHERE quest_key = ?), ?, ?, ?, ?)",[e.quest_key,e.quest_key,e.status,e.current_stage,e.total_stages]),console.log("✅ Quest record saved:",e),this.saveDatabase()):t.S.logError("Database not initialized!","saveQuestRecord")}getQuestRecord(e){if(!this.db)return t.S.logError("Database not initialized!","getQuestRecord"),null;const a=this.db.exec("SELECT * FROM quests WHERE quest_key = ?",[e]);if(a.length>0){const e=a[0].values[0];return{id:e[0],quest_key:e[1],status:e[2],current_stage:e[3],total_stages:e[4]}}return null}addChatMessage(e,a,n=(new Date).toISOString()){this.db?(this.db.run("INSERT INTO chat_messages (sender, message, timestamp) VALUES (?, ?, ?)",[e,a,n]),console.log(`✅ Chat message added: [${e}] ${a}`),this.saveDatabase()):t.S.logError("Database not initialized!","addChatMessage")}getChatMessages(){if(!this.db)return t.S.logError("Database not initialized!","getChatMessages"),[];const e=this.db.exec("SELECT * FROM chat_messages ORDER BY timestamp ASC");return e.length>0?e[0].values.map((e=>({id:e[0],sender:e[1],message:e[2],timestamp:e[3]}))):[]}}var r=o(713),i=o(507);class l{constructor(e,a,n){this.app=n,this.container=document.getElementById(e),this.dbManager=a,this.rooms=[],this.currentFloor=1,this.isSelecting=!1,this.startCell=null,this.endCell=null,this.gridRows=16,this.gridCols=16,this.createGrid(),this.attachEvents(),this.dbManager.initDatabasePromise.then((()=>{this.loadFromDB()}));const o=document.getElementById("apartment-plan-next-btn");o?o.addEventListener("click",(()=>{o.disabled=!0,this.app.viewManager.goToSelfieScreen(this.app)})):t.S.logError("Apartment plan Next button not found during initialization.","ApartmentPlanManager")}createGrid(){this.gridContainer=document.createElement("div"),this.gridContainer.style.display="grid",this.gridContainer.style.gridTemplateColumns=`repeat(${this.gridCols}, 50px)`,this.gridContainer.style.gridAutoRows="50px",this.gridContainer.style.gap="1px",this.container.innerHTML="",this.container.appendChild(this.gridContainer),this.initGrid()}initGrid(){this.gridContainer.innerHTML="";for(let e=0;e<this.gridRows;e++)for(let t=0;t<this.gridCols;t++){const a=document.createElement("div");a.dataset.row=e,a.dataset.col=t,a.style.width="50px",a.style.height="50px",a.style.border="1px solid #ccc",a.style.textAlign="center",a.style.verticalAlign="middle",a.style.cursor="pointer",this.gridContainer.appendChild(a)}}attachEvents(){this.gridContainer.addEventListener("mousedown",(e=>this.startSelection(e))),this.gridContainer.addEventListener("mousemove",(e=>this.updateSelection(e))),document.addEventListener("mouseup",(e=>this.finishSelection(e))),this.gridContainer.addEventListener("touchstart",(e=>this.handleTouchStart(e))),this.gridContainer.addEventListener("touchmove",(e=>this.handleTouchMove(e))),this.gridContainer.addEventListener("touchend",(e=>this.handleTouchEnd(e)))}handleTouchStart(e){e.preventDefault();const t=e.touches[0],a=document.elementFromPoint(t.clientX,t.clientY);a&&"DIV"===a.tagName&&this.startSelection({clientX:t.clientX,clientY:t.clientY,target:a})}handleTouchMove(e){e.preventDefault();const t=e.touches[0],a=document.elementFromPoint(t.clientX,t.clientY);a&&"DIV"===a.tagName&&this.updateSelection({clientX:t.clientX,clientY:t.clientY,target:a})}handleTouchEnd(e){e.preventDefault(),this.finishSelection(e)}startSelection(e){if("DIV"===e.target.tagName){this.isSelecting=!0;const t=parseInt(e.target.dataset.row),a=parseInt(e.target.dataset.col);this.startCell={row:t,col:a},this.endCell={row:t,col:a},this.highlightSelection()}}updateSelection(e){if(this.isSelecting&&"DIV"===e.target.tagName){const t=parseInt(e.target.dataset.row),a=parseInt(e.target.dataset.col);this.endCell={row:t,col:a},this.highlightSelection()}}finishSelection(e){e.target.closest("#location-type-modal-overlay")||this.isSelecting&&(this.isSelecting=!1,this.startCell&&this.endCell||(this.startCell={row:0,col:0},this.endCell={row:this.gridRows-1,col:this.gridCols-1}),this.app.viewManager.showLocationTypeModal((e=>{this.app&&this.app.profileManager&&this.app.profileManager.saveLocationType(e);const t={floor:this.currentFloor,startRow:Math.min(this.startCell.row,this.endCell.row),startCol:Math.min(this.startCell.col,this.endCell.col),endRow:Math.max(this.startCell.row,this.endCell.row),endCol:Math.max(this.startCell.col,this.endCell.col),type:e};this.rooms.push(t),this.saveToDB(),this.renderRooms(),this.app&&this.app.viewManager&&"function"==typeof this.app.viewManager.setApartmentPlanNextButtonEnabled&&this.app.viewManager.setApartmentPlanNextButtonEnabled(!0)}),(()=>{console.log("No location selected, default type 'Other' chosen."),this.app&&this.app.profileManager&&this.app.profileManager.saveLocationType("Other");const e={floor:this.currentFloor,startRow:Math.min(this.startCell.row,this.endCell.row),startCol:Math.min(this.startCell.col,this.endCell.col),endRow:Math.max(this.startCell.row,this.endCell.row),endCol:Math.max(this.startCell.col,this.endCell.col),type:"Other"};this.rooms.push(e),this.saveToDB(),this.renderRooms(),this.app&&this.app.viewManager&&"function"==typeof this.app.viewManager.setApartmentPlanNextButtonEnabled&&this.app.viewManager.setApartmentPlanNextButtonEnabled(!0)})))}highlightSelection(){if(Array.from(this.gridContainer.children).forEach((e=>{e.style.backgroundColor=""})),!this.startCell||!this.endCell)return;const e=Math.min(this.startCell.row,this.endCell.row),t=Math.max(this.startCell.row,this.endCell.row),a=Math.min(this.startCell.col,this.endCell.col),n=Math.max(this.startCell.col,this.endCell.col);for(let o=e;o<=t;o++)for(let e=a;e<=n;e++){const t=this.gridContainer.querySelector(`div[data-row='${o}'][data-col='${e}']`);t&&(t.style.backgroundColor="rgba(255, 0, 0, 0.3)")}}renderRooms(){this.initGrid(),this.rooms.forEach((e=>{if(e.floor===this.currentFloor)for(let t=e.startRow;t<=e.endRow;t++)for(let a=e.startCol;a<=e.endCol;a++){const e=this.gridContainer.querySelector(`div[data-row='${t}'][data-col='${a}']`);e&&(e.style.backgroundColor="rgba(0, 150, 255, 0.5)")}}))}saveToDB(){const e=this.rooms.filter((e=>e.floor===this.currentFloor));console.log("Saving rooms to DB: ",e),this.dbManager.addApartmentRooms(this.currentFloor,e)}loadFromDB(){console.log("Loading data for floor: ",this.currentFloor),this.dbManager.getApartmentPlan(this.currentFloor,(e=>{e&&0!==e.length?console.log(`Rooms found for floor ${this.currentFloor}: `,e):console.log(`No rooms found for floor ${this.currentFloor}, using default.`),this.rooms=e,this.renderRooms()}))}nextFloor(){console.log("Switching to next floor"),this.currentFloor++,this.loadFromDB()}prevFloor(){this.currentFloor>1&&(console.log("Switching to previous floor"),this.currentFloor--,this.loadFromDB())}}class c{static render(e,t){return e.replace(/{{\s*([\s\S]+?)\s*}}/g,((e,a)=>{const n=a.trim();return t.hasOwnProperty(n)?t[n]:e}))}static async renderFile(e,t={}){const a=await fetch(e);if(!a.ok)throw new Error(`[TemplateEngine] Failed to load template: ${e}`);const n=await a.text();return c.render(n,t)}}class d{constructor(e){this.app=e,this.loadingOlderPosts=!1,this.controlsPanel=document.getElementById("controls-panel"),this.languageSelector=document.getElementById("language-selector"),this.globalCamera=document.getElementById("global-camera"),this.postBtn=document.getElementById("post-btn"),this.toggleCameraBtn=document.getElementById("toggle-camera"),this.toggleDiaryBtn=document.getElementById("toggle-diary"),this.resetDataBtn=document.getElementById("reset-data"),this.exportProfileBtn=document.getElementById("export-profile-btn"),this.updateBtn=document.getElementById("update-btn"),this.diaryContainer=document.getElementById("diary"),this.cameraManager=null,this.languageManager=null,this.postBtn&&(this.postBtn.disabled=!0,r.f.set(r.f.KEYS.POST_BUTTON_DISABLED,"true"),console.log("[ViewManager] Post button disabled on initialization."))}setCameraManager(e){this.cameraManager=e,console.log("[ViewManager] Camera manager set.")}setLanguageManager(e){this.languageManager=e}getRegistrationData(){return this.nameInput&&this.genderSelect?{name:this.nameInput.value.trim(),gender:this.genderSelect.value.trim(),language:this.languageSelector?this.languageSelector.value:"en"}:null}bindEvents(e){this.languageSelector&&this.languageSelector.addEventListener("change",(()=>{console.log("Language select changed:",this.languageSelector.value)})),this.toggleCameraBtn&&this.toggleCameraBtn.addEventListener("click",(()=>{this.toggleCameraView(e)})),this.toggleDiaryBtn&&this.toggleDiaryBtn.addEventListener("click",(()=>{this.toggleCameraView(e)})),this.resetDataBtn&&this.resetDataBtn.addEventListener("click",(()=>{console.log("Reset Data button clicked."),e.profileManager.resetProfile()})),this.exportProfileBtn&&this.exportProfileBtn.addEventListener("click",(()=>{console.log("Export Profile button clicked."),this.exportProfile(e)})),this.updateBtn&&this.updateBtn.addEventListener("click",(()=>{console.log("Update button clicked."),this.clearCache()}));const t=document.getElementById("chat-btn");t?t.addEventListener("click",(()=>{console.log("Chat button clicked. Triggering toggleChat()."),this.toggleChat(e)})):console.error("Chat button (id='chat-btn') not found in the DOM."),this.postBtn?this.postBtn.addEventListener("click",(()=>{console.log("Post button clicked. Delegating to ghostManager.handlePostButtonClick()..."),e.ghostManager.handlePostButtonClick()})):console.error("Post button (id='post-btn') not found in the DOM.")}async loadTemplate(a,n={}){const o=`${e.o2}/templates/${a}_template.html`;try{const e=await fetch(o);if(!e.ok)throw new Error(`Failed to load template: ${o}`);const t=await e.text(),s=c.render(t,n),r=document.getElementById("global-content");if(r){r.innerHTML+=s;const e=r.lastElementChild;if(console.log(`[ViewManager] Loaded template for screen: ${a}`),this.languageManager&&"function"==typeof this.languageManager.updateContainerLanguage&&this.languageManager.updateContainerLanguage(e),this.app&&this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.applyEffectsToNewElements){const t=e.querySelectorAll("[data-animate-on-board='true']");this.app.visualEffectsManager.applyEffectsToNewElements(t)}return e}throw new Error("Global content container (id='global-content') not found.")}catch(e){return t.S.logError(e,"loadTemplate"),null}}async switchScreen(e,t,a){document.querySelectorAll("section").forEach((e=>{e.style.display="none"}));let n=document.getElementById(e);if(!n&&(n=await this.loadTemplate(e,{}),!n))return void console.error(`[ViewManager] Failed to load screen: ${e}`);if(n.style.display="block",console.log(`[ViewManager] Switched to screen: ${e}`),this.app&&this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.applyEffectsToNewElements){const e=n.querySelectorAll("[data-animate-on-board='true']");this.app.visualEffectsManager.applyEffectsToNewElements(e)}if("main-screen"===e){const e=n.querySelector("#diary");e&&(this.diaryContainer=e,console.log("[ViewManager] Updated diary container for main-screen."),await this.loadLatestDiaryPosts(),window.addEventListener("scroll",this.onScrollLoadOlder.bind(this),{passive:!0}))}if("landing-screen"===e){const e=n.querySelector("#start-registration-btn");e&&e.addEventListener("click",(()=>{this.switchScreen("registration-screen","registration-buttons",a),console.log("[ViewManager] Start registration button clicked, switching to registration screen.")}))}if("registration-screen"===e){this.nameInput=n.querySelector("#player-name"),this.genderSelect=n.querySelector("#player-gender"),this.nextStepBtn=n.querySelector("#next-step-btn");const e=()=>{const e=this.nameInput&&this.nameInput.value.trim().length>0,t=this.genderSelect&&""!==this.genderSelect.value;this.nextStepBtn&&(this.nextStepBtn.disabled=!(e&&t))};this.nameInput&&this.nameInput.addEventListener("input",(()=>{console.log("Name input changed:",this.nameInput.value),e()})),this.genderSelect&&this.genderSelect.addEventListener("change",(()=>{console.log("Gender select changed:",this.genderSelect.value),e()})),this.nextStepBtn&&this.nextStepBtn.addEventListener("click",(async()=>{await this.goToApartmentPlanScreen(a),console.log("[ViewManager] Registration next button clicked. Moving to apartment plan screen.")}))}if("selfie-screen"===e){const e=document.getElementById("capture-btn");e?e.onclick=()=>{console.log("Capture button clicked. Capturing selfie..."),this.captureSelfie(a)}:console.error("Capture button (id='capture-btn') not found in the DOM.");const t=document.getElementById("complete-registration");t?t.onclick=()=>{console.log("Complete registration button clicked."),this.completeRegistration(a)}:console.error("Complete registration button (id='complete-registration') not found in the DOM.")}if("apartment-plan-screen"===e&&a){const e=document.getElementById("prev-floor-btn");e&&e.addEventListener("click",(()=>{a.apartmentPlanManager&&a.apartmentPlanManager.prevFloor()}));const t=document.getElementById("next-floor-btn");t&&t.addEventListener("click",(()=>{a.apartmentPlanManager&&a.apartmentPlanManager.nextFloor()}));const o=n.querySelector("#apartment-plan-next-btn");o&&o.addEventListener("click",(()=>{console.log("Apartment Plan next button clicked. Going to selfie screen."),this.goToSelfieScreen(a)}))}if(document.querySelectorAll("#controls-panel > .buttons").forEach((e=>{e.style.display="none",e.style.pointerEvents="none"})),t){const a=document.getElementById(t);if(a){if(a.style.display="flex",a.style.pointerEvents="auto","main-screen"===e){const e=a.querySelector("#toggle-diary");e&&(e.style.display="none");const t=a.querySelector("#btn_shoot");t&&(t.style.display="none")}console.log(`[ViewManager] Controls panel updated for group: ${t}`)}}const o=document.getElementById("chat-button-container");o&&(o.style.display="flex",o.style.pointerEvents="auto",console.log("[ViewManager] Chat button container set to visible."));const s=document.getElementById("language-container");s&&(s.style.display="landing-screen"===e?"block":"none")}showToggleCameraButton(){this.toggleCameraBtn&&(this.toggleCameraBtn.style.display="inline-block",console.log("[ViewManager] Toggle Camera button shown."))}updateProfileDisplay(e){const t=document.getElementById("profile-name"),a=document.getElementById("profile-photo");t&&(t.textContent=e.name),a&&(a.src=e.selfie,a.style.display="block"),console.log("[ViewManager] Profile display updated.")}updateSelfiePreview(e){const a=document.getElementById("selfie-thumbnail");a?(a.src=e,a.style.display="block",console.log("[ViewManager] Selfie preview updated.")):t.S.logError("Selfie preview element not found.","updateSelfiePreview")}enableCompleteButton(){const e=document.getElementById("complete-registration");e&&(e.disabled=!1,console.log("[ViewManager] Complete button enabled."))}disableCompleteButton(){const e=document.getElementById("complete-registration");e&&(e.disabled=!0,console.log("[ViewManager] Complete button disabled."))}getSelfieSource(){const e=document.getElementById("selfie-thumbnail");return e?e.src:""}getImportFile(){const e=document.getElementById("import-file");return e&&e.files.length>0?e.files[0]:null}showGlobalCamera(){this.globalCamera?(this.globalCamera.style.display="block",console.log("[ViewManager] Global camera displayed.")):t.S.logError("Global camera element not found.","showGlobalCamera")}hideGlobalCamera(){this.globalCamera?(this.globalCamera.style.display="none",console.log("[ViewManager] Global camera hidden.")):t.S.logError("Global camera element not found.","hideGlobalCamera")}showDiaryView(){const e=document.getElementById("diary");if(e&&this.globalCamera){e.style.display="block",this.globalCamera.style.display="none",this.toggleCameraBtn&&(this.toggleCameraBtn.style.display="inline-block"),this.toggleDiaryBtn&&(this.toggleDiaryBtn.style.display="none");const t=document.getElementById("btn_shoot");t&&(t.style.display="none"),this.showPostButton(),console.log("[ViewManager] Switched to diary view.")}}showCameraView(){const e=document.getElementById("diary");if(e&&this.globalCamera){e.style.display="none",this.globalCamera.style.display="flex",this.toggleCameraBtn&&(this.toggleCameraBtn.style.display="none"),this.toggleDiaryBtn&&(this.toggleDiaryBtn.style.display="inline-block"),this.hidePostButton();const t=document.getElementById("btn_shoot");t&&(t.style.display="inline-block",console.log("[ViewManager] Shoot button shown for camera view; quest UI will manage its enabled state.")),console.log("[ViewManager] Switched to camera view.")}}showPostButton(){this.postBtn&&(this.postBtn.style.display="inline-block",console.log("[ViewManager] Post button shown."))}hidePostButton(){this.postBtn&&(this.postBtn.style.display="none",console.log("[ViewManager] Post button hidden."))}setPostButtonEnabled(e){const t=document.getElementById("post-btn");if(t){"true"===r.f.get(r.f.KEYS.GAME_FINALIZED)?(t.disabled=!0,r.f.set(r.f.KEYS.POST_BUTTON_DISABLED,"true"),console.log("[ViewManager] Game finalized. Post button disabled.")):(t.disabled=!e,r.f.set(r.f.KEYS.POST_BUTTON_DISABLED,e?"false":"true"),console.log(`[ViewManager] Post button set to ${e?"enabled":"disabled"}.`))}}setCameraButtonActive(e){const t=document.getElementById("toggle-camera");t&&(e?t.classList.add("active"):t.classList.remove("active"),r.f.set(r.f.KEYS.CAMERA_BUTTON_ACTIVE,JSON.stringify(e)),console.log(`[ViewManager] Camera button active state set to ${e}.`))}restoreCameraButtonState(){const e=!!r.f.getActiveQuestKey();this.setCameraButtonActive(e),console.log("[ViewManager] Camera button state restored using activeQuestKey:",e)}setShootButtonActive(e){const a=document.getElementById("btn_shoot");a?(a.disabled=!e,a.style.pointerEvents=e?"auto":"none",e?a.classList.add("active"):a.classList.remove("active"),console.log(`[ViewManager] Shoot button active state set to ${e}.`)):t.S.logError("Shoot button not found.","setShootButtonActive")}restoreShootButtonState(){this.setShootButtonActive(!1),console.log("[ViewManager] Shoot button state reset to disabled on restore.")}setApartmentPlanNextButtonEnabled(e){const a=document.getElementById("apartment-plan-next-btn");a?(a.disabled=!e,console.log(`Apartment Plan Next button is now ${e?"enabled":"disabled"}.`)):t.S.logError("Apartment plan Next button not found.","setApartmentPlanNextButtonEnabled")}startMirrorQuestUI(e){const a=document.getElementById(e.statusElementId);a&&(a.style.display="block",a.textContent="No match...",console.log("[ViewManager] Mirror quest UI started, status set to 'No match...'"));const n=document.getElementById(e.shootButtonId);if(n){n.style.display="inline-block";const t=void 0!==e.initialActive&&e.initialActive;this.setShootButtonActive(t),n.style.pointerEvents=t?"auto":"none",n.onclick=()=>{this.setShootButtonActive(!1),"function"==typeof e.onShoot&&e.onShoot()},console.log("[ViewManager] Shoot button for mirror quest initialized.")}else t.S.logError("Shoot button not found in the DOM.","startMirrorQuestUI")}updateMirrorQuestStatus(e,t,a){const n=document.getElementById(t);n&&(n.textContent=e?"You are in front of the mirror!":"No match...");const o=document.getElementById(a);o&&(o.disabled=!e,o.style.pointerEvents=e?"auto":"none"),console.log(`[ViewManager] Mirror quest status updated. Success: ${e}`)}stopMirrorQuestUI(e){const t=document.getElementById(e);t&&(t.style.display="none"),this.setCameraButtonActive(!1),this.setShootButtonActive(!1),console.log("[ViewManager] Mirror quest UI stopped.")}startRepeatingQuestUI(e){const a=document.getElementById(e.statusElementId);a&&(a.style.display="block",a.textContent=`Stage ${e.stage} of ${e.totalStages}: find "${e.quest.currentTarget}"`);const n=document.getElementById(e.shootButtonId);n?(n.style.display="inline-block",this.setShootButtonActive(!1),n.style.pointerEvents="none",n.onclick=()=>{e.quest&&e.quest.finished?console.log("[ViewManager] Quest is finished; ignoring Shoot click."):(this.setShootButtonActive(!1),"function"==typeof e.onShoot&&e.onShoot())},console.log("[ViewManager] Shoot button for repeating quest initialized.")):t.S.logError("Shoot button not found in the DOM.","startRepeatingQuestUI")}disableShootButton(e){const t=document.getElementById(e);t&&(t.disabled=!0,t.style.pointerEvents="none",console.log("[ViewManager] Shoot button disabled."))}stopRepeatingQuestUI(e){const t=document.getElementById(e);t&&(t.style.display="none"),this.setCameraButtonActive(!1),this.setShootButtonActive(!1),console.log("[ViewManager] Repeating quest UI stopped.")}updateUIAfterQuestStage({postEnabled:e,cameraActive:t,shootActive:a}){"boolean"==typeof e&&this.setPostButtonEnabled(e),"boolean"==typeof t&&this.setCameraButtonActive(t),"boolean"==typeof a&&this.setShootButtonActive(a),console.log("[ViewManager] UI updated after quest stage:",{postEnabled:e,cameraActive:t,shootActive:a})}createTopCameraControls(){const e=document.getElementById("top-camera-controls");e&&e.remove();const t=document.createElement("div");t.id="top-camera-controls",Object.assign(t.style,{position:"fixed",top:"0",left:"0",width:"100%",padding:"10px",background:"rgba(0, 0, 0, 0.5)",display:"flex",justifyContent:"center",zIndex:"2100"});const a=document.createElement("button");a.className="button is-info",a.innerText="AR Mode",a.onclick=()=>{this.cameraManager&&this.cameraManager.startARMode()},t.appendChild(a);const n=document.createElement("button");n.className="button is-primary",n.style.marginLeft="10px",n.innerText="Start AI Detection",n.onclick=()=>{this.cameraManager&&this.cameraManager.startAIDetection()},t.appendChild(n);const o=document.createElement("button");o.className="button is-warning",o.style.marginLeft="10px",o.innerText="Night Vision",o.onclick=()=>{this.cameraManager&&this.cameraManager.applyFilter("nightVision")},t.appendChild(o);const s=document.createElement("button");s.className="button is-warning",s.style.marginLeft="10px",s.innerText="Black & White",s.onclick=()=>{this.cameraManager&&this.cameraManager.applyFilter("blackWhite")},t.appendChild(s);const r=document.createElement("button");r.className="button",r.style.marginLeft="10px",r.innerText="Clear Filter",r.onclick=()=>{this.cameraManager&&this.cameraManager.applyFilter("")},t.appendChild(r),document.body.appendChild(t),console.log("[ViewManager] Top camera controls created.")}applyBackgroundTransition(e,t){document.body.style.transition=`background ${t}ms`,document.body.style.background=e,setTimeout((()=>{document.body.style.background=""}),t),console.log(`[ViewManager] Applied background transition with color ${e} for ${t}ms.`)}showGhostAppearanceEffect(t){const a=document.createElement("div");Object.assign(a.style,{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",width:"200px",height:"200px",background:`url('${e.o2}/assets/images/${t}.png') no-repeat center center`,backgroundSize:"contain",opacity:"0.7",transition:"opacity 2s"}),document.body.appendChild(a),setTimeout((()=>{a.style.opacity="0"}),3e3),setTimeout((()=>{a.remove()}),5e3),console.log(`[ViewManager] Ghost appearance effect triggered for ghost ${t}.`)}showNotification(e,{actionText:t,onAction:a,duration:n}={}){const o=()=>{const o=document.createElement("div");if(o.textContent=e,Object.assign(o.style,{position:"fixed",bottom:"20px",left:"50%",transform:"translateX(-50%)",backgroundColor:"rgba(0,0,0,0.8)",color:"white",padding:"10px 20px",borderRadius:"5px",zIndex:1e4,opacity:"0",transition:"opacity 0.5s"}),t&&"function"==typeof a){const e=document.createElement("button");e.textContent=t,Object.assign(e.style,{marginLeft:"10px",background:"white",color:"black",border:"none",padding:"5px 10px",borderRadius:"3px",cursor:"pointer"}),e.addEventListener("click",a),o.appendChild(e)}document.body.appendChild(o),setTimeout((()=>{o.style.opacity="1"}),100);const s=null!=n?n:3e3;s>0&&setTimeout((()=>{o.style.opacity="0",setTimeout((()=>o.remove()),500)}),s),console.log("[ViewManager] Notification shown:",e)},s=document.getElementById("loader")||document.querySelector(".loader");if(s){new MutationObserver(((e,t)=>{document.body.contains(s)||(t.disconnect(),o())})).observe(document.body,{childList:!0,subtree:!0})}else o()}setControlsBlocked(e){this.controlsPanel&&(this.controlsPanel.style.pointerEvents=e?"none":"auto",console.log(`[ViewManager] Controls ${e?"blocked":"unblocked"}.`))}clearCache(){"serviceWorker"in navigator&&navigator.serviceWorker.controller?(navigator.serviceWorker.controller.postMessage({action:"CLEAR_CACHE"}),console.log("Clear cache message sent to Service Worker.")):console.warn("No active Service Worker controller found.")}async goToApartmentPlanScreen(e){const a=this.getRegistrationData();a?(r.f.set("regData",JSON.stringify(a)),await this.switchScreen("apartment-plan-screen","apartment-plan-buttons",e),e.apartmentPlanManager||(e.apartmentPlanManager=new l("apartment-plan-container",e.databaseManager,e))):t.S.showError("Registration data missing.")}goToSelfieScreen(e){this.switchScreen("selfie-screen","selfie-buttons",e),this.showGlobalCamera(),e.cameraSectionManager&&e.cameraSectionManager.startCamera(),this.disableCompleteButton()}captureSelfie(e){const a=e.cameraSectionManager.videoElement;if(!a||!a.srcObject)return t.S.logError("Camera is not active!","captureSelfie"),void t.S.showError("Error: Camera is not active.");if(a.readyState<2)return t.S.logError("Camera is not ready yet.","captureSelfie"),void t.S.showError("Please wait for the camera to load.");try{const t=document.createElement("canvas");t.width=a.videoWidth||640,t.height=a.videoHeight||480;const n=t.getContext("2d");if(!n)throw new Error("Failed to get 2D drawing context.");n.drawImage(a,0,0,t.width,t.height);const o=i.H.convertToGrayscale(t);this.updateSelfiePreview(o),this.enableCompleteButton(),e.selfieData=o,console.log("✅ Selfie captured successfully!")}catch(e){t.S.logError(e,"captureSelfie"),t.S.showError("Error capturing selfie! Please try again.")}}completeRegistration(e){const a=this.getSelfieSource();if(!a||""===a)return void t.S.showError("Please capture your selfie before completing registration.");const n=r.f.get("regData");if(!n)return void t.S.showError("Registration data missing.");const o=JSON.parse(n),s={name:o.name,gender:o.gender,language:this.languageSelector?this.languageSelector.value:"en",selfie:a};e.profileManager.saveProfile(s).then((()=>{r.f.set("registrationCompleted","true"),e.cameraSectionManager.stopCamera(),this.hideGlobalCamera(),this.switchScreen("main-screen","main-buttons",e),this.showToggleCameraButton();const t=r.f.getActiveQuestKey();this.setPostButtonEnabled(Boolean(t)),e.profileManager.getProfile().then((t=>{this.updateProfileDisplay(t),e.selfieData=t.selfie})),e.gameEventManager.autoLaunchWelcomeEvent()}))}toggleCameraView(e){e.isCameraOpen?(this.showDiaryView(),e.cameraSectionManager.stopCamera(),e.isCameraOpen=!1,r.f.setCameraOpen(!1),console.log("Camera closed and state saved.")):(this.showCameraView(),e.isCameraOpen=!0,r.f.setCameraOpen(!0),e.cameraSectionManager.startCamera(),console.log("Camera opened and state saved."))}exportProfile(e){e.profileManager.exportProfileData(e.databaseManager,e.apartmentPlanManager)}importProfile(e){const a=this.getImportFile();a?e.profileManager.importProfileData(a,e.databaseManager,e.apartmentPlanManager):t.S.showError("Please select a profile file to import.")}toggleChat(e){e.chatManager&&e.chatManager.container?"block"===e.chatManager.container.style.display?e.chatManager.hide():e.chatManager.show():console.error("ChatManager is not initialized or chat container not found.")}showLocationTypeModal(e,t){const a=document.createElement("div");a.id="location-type-modal-overlay",Object.assign(a.style,{position:"fixed",top:"0",left:"0",width:"100%",height:"100%",backgroundColor:"rgba(0,0,0,0.5)",display:"flex",justifyContent:"center",alignItems:"center",zIndex:"3000"});const n=document.createElement("div");n.id="location-type-modal",Object.assign(n.style,{backgroundColor:"#fff",padding:"20px",borderRadius:"8px",maxWidth:"400px",width:"90%",textAlign:"center"});const o=document.createElement("h3");o.textContent="Select location type",n.appendChild(o);const s=document.createElement("select");["Kitchen","Bedroom","Living Room","Bathroom","Corridor","Other","Entrance","Office","Library","Kids Room","Storage","Garage"].forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,s.appendChild(t)})),s.value="Other",s.style.marginBottom="15px",s.style.display="block",s.style.width="100%",n.appendChild(s);const r=document.createElement("div");r.style.marginTop="15px";const i=document.createElement("button");i.textContent="Confirm",i.style.marginRight="10px",i.addEventListener("click",(()=>{console.log("Confirm button clicked, selected type:",s.value);const t=s.value;e&&e(t),setTimeout((()=>{a.remove()}),50)})),r.appendChild(i);const l=document.createElement("button");l.textContent="Cancel",l.addEventListener("click",(()=>{console.log("Cancel button clicked."),t&&t(),a.remove()})),r.appendChild(l),n.appendChild(r),a.appendChild(n),document.body.appendChild(a)}renderDiary(e,t,a){if(this.diaryContainer){if(this.diaryContainer.innerHTML="",!e||0===e.length){const e=this.languageManager&&this.languageManager.translate("no_diary_entries","Diary is empty.")||"Diary is empty.",t=document.createElement("div");return t.className="diary-empty",t.textContent=e,void this.diaryContainer.appendChild(t)}e.forEach((e=>{let t;if(e.entry.includes("data:image")){const a=e.entry,n=a.indexOf("data:image"),o=a.slice(0,n).trim(),s=a.slice(n).trim(),r='\n          <div class="diary-entry {{postClass}}" data-animate-on-board="true">\n            <p>{{text}}</p>\n            <img src="{{img}}" alt="Diary Image" data-animate-on-board="true" />\n            <span class="diary-timestamp">{{timestamp}}</span>\n          </div>\n        ';t=c.render(r,{postClass:e.postClass,text:o,img:s,timestamp:e.timestamp})}else{const a='\n          <div class="diary-entry {{postClass}}" data-animate-on-board="true">\n            <p>{{entry}}</p>\n            <span class="diary-timestamp">{{timestamp}}</span>\n          </div>\n        ';t=c.render(a,{postClass:e.postClass,entry:e.entry,timestamp:e.timestamp})}this.diaryContainer.innerHTML+=t})),console.log("[ViewManager] Diary updated with "+e.length+" entries.")}else console.error("Diary container not set. Cannot render diary entries.")}async loadLatestDiaryPosts(e=3){const t=await this.app.databaseManager.getDiaryEntries();t.sort(((e,t)=>new Date(t.timestamp)-new Date(e.timestamp)));const a=t.slice(0,e);this.renderDiary(a,this.app.languageManager.getLanguage(),this.app.visualEffectsManager)}async addSingleDiaryPost(t){if(!this.diaryContainer)return;let a=t.text,n="";if(t.text.includes("data:image")){const e=t.text.indexOf("data:image");a=t.text.slice(0,e).trim(),n=t.text.slice(e).trim()}const o=n?`<img src="${n}" alt="Diary image" />`:"",s=`${e.o2}/templates/diaryentry_screen-template.html`,r=await c.renderFile(s,{postClass:t.postClass,text:a,imgTag:o,timestamp:t.timestamp});this.diaryContainer.insertAdjacentHTML("afterbegin",r);const i=this.diaryContainer.querySelector('.diary-entry:first-child p[data-animate-on-board="true"]');i&&this.app.visualEffectsManager&&this.app.visualEffectsManager.applyEffectsToNewElements([i])}async loadEarlierDiaryPosts(t=3){const a=this.diaryContainer.querySelectorAll(".diary-entry").length,n=await this.app.databaseManager.getDiaryEntries();n.sort(((e,t)=>new Date(t.timestamp)-new Date(e.timestamp)));const o=n.slice(a,a+t),s=`${e.o2}/templates/diaryentry_screen-template.html`;for(const e of o){let t=e.entry,a="";if(t.includes("data:image")){const e=t.indexOf("data:image"),n=t.slice(e).trim();t=t.slice(0,e).trim(),a=`<img src="${n}" alt="Diary image" />`}const n=await c.renderFile(s,{postClass:e.postClass,text:t,imgTag:a,timestamp:e.timestamp});this.diaryContainer.insertAdjacentHTML("beforeend",n)}}async onScrollLoadOlder(){if(this.loadingOlderPosts)return;window.innerHeight+window.scrollY>=document.documentElement.scrollHeight-150&&(this.loadingOlderPosts=!0,await this.loadEarlierDiaryPosts(),this.loadingOlderPosts=!1)}}const g={en:{welcome:"Welcome!",post_repeating_event:"Отлично, ты справился с предыдущим заданием! Вот тебе новое.",enter_name:"Enter your name:",select_gender:"Select your gender:",male:"Male",female:"Female",other:"Other",next:"Next",take_selfie:"Take a Selfie",capture:"Capture",complete:"Complete",diary:"Your Diary",empty_diary:"No entries yet...",select_language:"Select Language",reset:"Reset Data",export:"Export Profile",import_profile:"Import Profile",import:"Import",answer:"Answer",ignore:"Ignore",open_camera:"Open Camera",open_diary:"Open Diary",mirror_quest:"They are asking me to come to the mirror...",ignored_call:"I didn't answer, I don't know who it was. Hm.... Text. “З”. What would that mean...",what_was_it:"What was that?"},ru:{welcome:"Добро пожаловать!",post_repeating_event:"Отлично, ты справился с предыдущим заданием! Вот тебе новое.",enter_name:"Введите ваше имя:",select_gender:"Выберите ваш пол:",male:"Мужской",female:"Женский",other:"Другой",next:"Далее",take_selfie:"Сделайте селфи",capture:"Сделать фото",complete:"Завершить",diary:"Ваш дневник",empty_diary:"Записей пока нет...",select_language:"Выберите язык",reset:"Сбросить данные",export:"Экспорт профиля",import_profile:"Импорт профиля",import:"Импорт",answer:"Ответить",ignore:"Игнорировать",open_camera:"Открыть камеру",open_diary:"Открыть дневник",mirror_quest:"Они просят подойти меня к зеркалу.",ignored_call:'Я не ответил(а), я не знаю, кто это. Хм.... Смс. "З". Что бы это значило...',what_was_it:"Что это было?"},uk:{welcome:"Ласкаво просимо!",post_repeating_event:"Отлично, ты справился с предыдущим заданием! Вот тебе новое.",enter_name:"Введіть ваше ім'я:",select_gender:"Оберіть вашу стать:",male:"Чоловіча",female:"Жіноча",other:"Інша",next:"Далі",take_selfie:"Зробіть селфі",capture:"Зробити фото",complete:"Завершити",diary:"Ваш щоденник",empty_diary:"Записів поки немає...",select_language:"Оберіть мову",reset:"Скинути дані",export:"Експорт профілю",import_profile:"Імпорт профілю",import:"Імпорт",answer:"Відповісти",ignore:"Ігнорувати",open_camera:"Відкрити камеру",open_diary:"Відкрити щоденник",mirror_quest:"Вони просять підійти мене до дзеркала.",ignored_call:"Я не відповів(ла), я не знаю, хто це. Хм.... Смс. «З». Що б це означало...",what_was_it:"What was that?"}},h={en:{...g.en,...{greeting:"Hello! How may I assist you today?",response_prompt:"Please choose one of the following options:",option_1:"Tell me more about this.",option_2:"I don't understand.",option_3:"Ignore.",option_1_1:"Could you elaborate further?",option_1_2:"I'd like more details.",option_2_1:"Please explain further.",user_reply_1:"I have a question regarding the service.",spirit_response_1:"Certainly, let me explain.",user_reply_2:"I'm still not clear on this.",spirit_response_2:"Allow me to provide additional information.",user_reply_3:"Thank you for the clarification.",spirit_response_3:"You're welcome.",end_of_conversation:"Thank you for chatting!",chat_support:"Support Chat"}},ru:{...g.ru,...{greeting:"Здравствуйте! Чем могу помочь?",response_prompt:"Пожалуйста, выберите один из вариантов:",option_1:"Расскажите подробнее.",option_2:"Я не понимаю.",option_3:"Игнорировать.",option_1_1:"Можете рассказать подробнее?",option_1_2:"Нужны дополнительные детали.",option_2_1:"Пожалуйста, объясните подробнее.",user_reply_1:"У меня есть вопрос по услуге.",spirit_response_1:"Конечно, разрешите объяснить.",user_reply_2:"Я все еще не понимаю.",spirit_response_2:"Позвольте предоставить дополнительную информацию.",user_reply_3:"Спасибо за разъяснение.",spirit_response_3:"Пожалуйста.",end_of_conversation:"Спасибо за беседу!",chat_support:"Служба поддержки"}},uk:{...g.uk,...{greeting:"Вітаємо! Чим можу допомогти?",response_prompt:"Будь ласка, оберіть один із варіантів:",option_1:"Розкажіть докладніше.",option_2:"Я не розумію.",option_3:"Ігнорувати.",option_1_1:"Будь ласка, розкажіть детальніше.",option_1_2:"Мені потрібні додаткові подробиці.",option_2_1:"Поясніть, будь ласка, детальніше.",user_reply_1:"У мене є питання щодо послуги.",spirit_response_1:"Звичайно, дозвольте пояснити.",user_reply_2:"Я все ще не розумію.",spirit_response_2:"Дозвольте надати додаткову інформацію.",user_reply_3:"Дякую за роз'яснення.",spirit_response_3:"Будь ласка.",end_of_conversation:"Дякуємо за розмову!",chat_support:"Підтримка"}}};class u{constructor(e){this.locales=h,this.selector=document.getElementById(e),this.selector||console.error(`Language selector with id "${e}" not found.`),this.currentLanguage=localStorage.getItem("language")||"en",this.selector&&(this.selector.value=this.currentLanguage),this.applyLanguage(),this.selector&&this.selector.addEventListener("change",(()=>{this.currentLanguage=this.selector.value,localStorage.setItem("language",this.currentLanguage),this.applyLanguage()}))}applyLanguage(){document.querySelectorAll("[data-i18n]").forEach((e=>{const t=e.getAttribute("data-i18n");this.locales[this.currentLanguage]&&this.locales[this.currentLanguage][t]&&(e.textContent=this.locales[this.currentLanguage][t])}))}updateContainerLanguage(e){e&&e.querySelectorAll("[data-i18n]").forEach((e=>{const t=e.getAttribute("data-i18n");this.locales[this.currentLanguage]&&this.locales[this.currentLanguage][t]&&(e.textContent=this.locales[this.currentLanguage][t])}))}startObservingContainer(e){if(!e)return;const t=new MutationObserver((e=>{e.forEach((e=>{e.addedNodes.forEach((e=>{if(e.nodeType===Node.ELEMENT_NODE){if(e.hasAttribute&&e.hasAttribute("data-i18n")){const t=e.getAttribute("data-i18n");this.locales[this.currentLanguage]&&this.locales[this.currentLanguage][t]&&(e.textContent=this.locales[this.currentLanguage][t])}e.querySelectorAll&&e.querySelectorAll("[data-i18n]").forEach((e=>{const t=e.getAttribute("data-i18n");this.locales[this.currentLanguage]&&this.locales[this.currentLanguage][t]&&(e.textContent=this.locales[this.currentLanguage][t])}))}}))}))}));return t.observe(e,{childList:!0,subtree:!0}),console.log("[LanguageManager] Started observing container for localization updates."),t}getLanguage(){return this.currentLanguage}translate(e,t=e){return this.locales[this.currentLanguage]&&this.locales[this.currentLanguage][e]?this.locales[this.currentLanguage][e]:t}}class p{constructor(){this.videoElement=null,this.stream=null,this.onVideoReady=null,this.onCameraClosed=null,this.isDetecting=!1,this.aiDetectionTimer=null,this.aiModel=null,this.aiDetectionInterval=5e3,this.currentDetectionConfig=null,this.recordingStartTime=null,this.recordingTimerId=null,this.detectionFrame=null,document.addEventListener("questCompleted",(e=>{"repeating_quest"===e.detail&&this.resetDetectionFrame()}))}async preloadModel(){this.modelPromise||(console.log("[CameraSectionManager] Preloading AI model..."),this.modelPromise=cocoSsd.load({modelUrl:e.s0}));try{this.aiModel=await this.modelPromise,console.log("[CameraSectionManager] AI model preloaded successfully.")}catch(e){t.S.logError(e,"CameraSectionManager.preloadModel")}}attachTo(e,a={}){const n=document.getElementById(e);if(n){this.videoElement?this.videoElement.parentNode&&this.videoElement.parentNode.removeChild(this.videoElement):(this.videoElement=document.createElement("video"),this.videoElement.autoplay=!0,this.videoElement.playsInline=!0,this.videoElement.id="global-camera-video");for(const e in a)this.videoElement.style[e]=a[e];n.innerHTML="",n.appendChild(this.videoElement)}else t.S.logError(`Container with id "${e}" not found!`,"attachTo")}async startCamera(){if(this.stream)console.log("Camera already started");else try{this.videoElement||(this.attachTo("global-camera",{width:"100%",height:"100%",filter:"grayscale(100%)"}),console.log("Video element was not created; auto-attached to 'global-camera'."));const e={video:{facingMode:/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)?"environment":"user"}};if(console.log(`Starting camera with facing mode: ${e.video.facingMode}`),this.stream=await navigator.mediaDevices.getUserMedia(e),!this.videoElement)return void t.S.logError("Video element not created!","startCamera");this.videoElement.srcObject=this.stream,this.videoElement.readyState>=2?(console.log("Video metadata already ready; dispatching cameraReady immediately"),"function"==typeof this.onVideoReady&&this.onVideoReady(),document.dispatchEvent(new CustomEvent("cameraReady")),this.createDetectionFrame()):this.videoElement.addEventListener("loadedmetadata",(()=>{console.log("loadedmetadata: Video stream is ready"),"function"==typeof this.onVideoReady&&this.onVideoReady(),document.dispatchEvent(new CustomEvent("cameraReady")),this.createDetectionFrame()}),{once:!0})}catch(e){t.S.logError(e,"startCamera")}}stopCamera(){this.stream&&(this.stream.getTracks().forEach((e=>e.stop())),this.stream=null,"function"==typeof this.onCameraClosed&&this.onCameraClosed())}createDetectionFrame(){if(!document.getElementById("detection-frame-style")){const e=document.createElement("style");e.id="detection-frame-style",e.textContent="\n  @keyframes detectionPulse {\n    0%   { transform: scale(1);   opacity: 0.8; }\n    50%  { transform: scale(1.02);opacity: 1;   }\n    100% { transform: scale(1);   opacity: 0.8; }\n  }",document.head.appendChild(e)}this.detectionFrame=document.createElement("div"),Object.assign(this.detectionFrame.style,{position:"absolute",top:"0",left:"0",width:"100%",height:"100%",border:"3px solid #fff",boxSizing:"border-box",pointerEvents:"none",animation:"detectionPulse 2s infinite"}),document.body.appendChild(this.detectionFrame),console.log("Detection frame initialized and pulsing.")}updateDetectionFrame(e){const[t,a,n,o]=e;this.detectionFrame.style.transition="all 0.3s ease-out",this.detectionFrame.style.left=`${t}px`,this.detectionFrame.style.top=`${a}px`,this.detectionFrame.style.width=`${n}px`,this.detectionFrame.style.height=`${o}px`,this.detectionFrame.style.animation="",console.log(`Detection frame moved to bbox: ${e}`)}resetDetectionFrame(){this.detectionFrame.style.transition="all 0.5s ease-out",this.detectionFrame.style.left="0",this.detectionFrame.style.top="0",this.detectionFrame.style.width="100%",this.detectionFrame.style.height="100%",this.detectionFrame.style.animation="detectionPulse 2s infinite",console.log("Detection frame reset to full-screen and pulsing.")}startARMode(){if(!this.videoElement||!this.stream)return void console.warn("Camera is not active. AR mode cannot be started.");const e=`\n      <a-scene embedded arjs="sourceType: video; videoElement: #${this.videoElement.id}">\n        <a-marker preset="hiro">\n          <a-box position="0 0.5 0" material="color: red;"></a-box>\n        </a-marker>\n        <a-camera-static></a-camera-static>\n      </a-scene>\n    `;document.body.insertAdjacentHTML("beforeend",e),console.log("AR mode activated.")}stopARMode(){const e=document.querySelector("a-scene[arjs]");e&&(e.remove(),console.log("AR mode deactivated."))}applyFilter(e){this.videoElement&&(this.videoElement.style.filter="nightVision"===e?"brightness(150%) contrast(120%) sepia(100%) hue-rotate(90deg)":"blackWhite"===e?"grayscale(100%)":"",console.log(`Filter applied: ${e}`))}startRecordingTimer(){this.recordingStartTime=Date.now();const e=document.getElementById("recording-timer");e&&(e.style.display="block",this.recordingTimerId=setInterval((()=>{const t=Math.floor((Date.now()-this.recordingStartTime)/1e3);e.innerText=`Recording: ${t} sec`}),1e3))}stopRecordingTimer(){clearInterval(this.recordingTimerId);const e=document.getElementById("recording-timer");e&&(e.style.display="none")}async updateBatteryStatus(){try{const e=await navigator.getBattery(),t=document.getElementById("battery-status"),a=()=>{t&&(t.innerText=`Battery: ${Math.floor(100*e.level)}%`)};a(),e.addEventListener("levelchange",a),t&&(t.style.display="block")}catch(e){t.S.logError(e,"updateBatteryStatus")}}async startAIDetection(e={}){this.currentDetectionConfig={target:e.target||null},this.isDetecting=!0,console.log(`[CameraSectionManager] startAIDetection(): target = "${this.currentDetectionConfig.target}"`),this.aiModel||(console.log("[CameraSectionManager] Waiting for preloaded model…"),await this.modelPromise,this.aiModel)?this.runAIDetection():console.error("[CameraSectionManager] Model failed to preload")}async runAIDetection(){if(this.isDetecting)if(!this.videoElement||this.videoElement.readyState<2)this.aiDetectionTimer=setTimeout((()=>this.runAIDetection()),this.aiDetectionInterval);else{try{const e=await this.aiModel.detect(this.videoElement);console.log("[CameraSectionManager] predictions:",e),this.handleAIPredictions(e)}catch(e){console.error("[CameraSectionManager] Error during detect():",e)}this.aiDetectionTimer=setTimeout((()=>this.runAIDetection()),this.aiDetectionInterval)}}handleAIPredictions(e){const t=this.currentDetectionConfig?.target;if(console.log(`[CameraSectionManager] handleAIPredictions(): looking for "${t}"`),t)for(const a of e)a.score>.6&&a.class===t&&(console.log(`[CameraSectionManager] MATCH for "${t}" (score=${a.score.toFixed(3)})`,a.bbox),this.animateCornerFrame(a.bbox),document.dispatchEvent(new CustomEvent("objectDetected",{detail:t})))}animateCornerFrame(e){this.detectionFrame&&this.updateDetectionFrame(e)}stopAIDetection(){this.isDetecting=!1,this.aiDetectionTimer&&(clearTimeout(this.aiDetectionTimer),this.aiDetectionTimer=null),console.log("[CameraSectionManager] AI detection stopped.")}}class m{constructor(e){this.dataManager=e}async isProfileSaved(){return!!await this.dataManager.getProfile()}async getProfile(){return await this.dataManager.getProfile()}async saveProfile(e){await this.dataManager.saveProfile(e)}resetProfile(){Promise.all([this.dataManager.resetProfile(),this.dataManager.resetDatabase()]).then((()=>{const e=["language"];for(let t=localStorage.length-1;t>=0;t--){const a=localStorage.key(t);e.includes(a)||localStorage.removeItem(a)}"serviceWorker"in navigator&&navigator.serviceWorker.controller&&(navigator.serviceWorker.controller.postMessage({type:"SKIP_WAITING"}),navigator.serviceWorker.controller.postMessage({action:"CLEAR_CACHE"}),console.log("Service Worker skipWaiting and CLEAR_CACHE messages sent."))})).catch((e=>{t.S.logError(e,"resetProfile")}))}exportProfileData(e,t){this.getProfile().then((a=>{if(!a)return void alert("No profile found to export.");const n={name:a.name,gender:a.gender,language:a.language,selfie:a.selfie},o=e.getDiaryEntries(),s=e.getChatMessages(),r=t?t.rooms:[];let i=[];const l=e.db.exec("SELECT * FROM quest_progress ORDER BY id DESC");l.length>0&&(i=l[0].values.map((e=>({id:e[0],quest_key:e[1],status:e[2]}))));const c={profile:n,diary:o,apartment:r,quests:i,chat:s},d=new Blob([JSON.stringify(c,null,2)],{type:"application/json"}),g=URL.createObjectURL(d),h=document.createElement("a");h.href=g,h.download="profile.json",document.body.appendChild(h),h.click(),document.body.removeChild(h),URL.revokeObjectURL(g)}))}importProfileData(e,a,n){const o=new FileReader;o.onload=e=>{try{const t=JSON.parse(e.target.result);if(!(t.profile&&t.profile.name&&t.profile.gender&&t.profile.selfie&&t.profile.language))return void alert("Invalid profile file. Required profile fields are missing.");this.saveProfile(t.profile),t.diary&&Array.isArray(t.diary)&&(t.diary.forEach((e=>{e.entry&&e.timestamp&&a.db.run("INSERT INTO diary (entry, timestamp) VALUES (?, ?)",[e.entry,e.timestamp])})),a.saveDatabase()),t.apartment&&Array.isArray(t.apartment)&&n&&(n.rooms=t.apartment,n.renderRooms()),t.quests&&Array.isArray(t.quests)&&t.quests.forEach((e=>{e.quest_key&&e.status&&a.addQuestProgress(e.quest_key,e.status)})),t.chat&&Array.isArray(t.chat)&&(t.chat.forEach((e=>{e.sender&&e.message&&e.timestamp&&a.db.run("INSERT INTO chat_messages (sender, message, timestamp) VALUES (?, ?, ?)",[e.sender,e.message,e.timestamp])})),a.saveDatabase()),r.f.remove("cameraButtonActive"),r.f.remove("shootButtonActive"),r.f.remove("quest_state_repeating_quest"),alert("Profile imported successfully. Reloading page."),window.location.reload()}catch(e){t.S.logError(e,"importProfileData"),alert("Error parsing the profile file.")}},o.readAsText(e)}saveGhostProgress(e){this.dataManager.saveGhostProgress(e)}getGhostProgress(){return this.dataManager.getGhostProgress()}resetGhostProgress(){this.dataManager.resetGhostProgress()}saveLocationType(e){this.dataManager.saveLocationType(e)}getLocationType(){return this.dataManager.getLocationType()}}async function y(){const e=await fetch("./config/gameEntities.json");if(!e.ok)throw new Error("Failed to load game entities configuration");return await e.json()}async function f(){const e=await y(),t={};return e.sequence.forEach((e=>{t[e.questKey]=e.eventKey})),t}class E{constructor(e){this.sequenceList=e,this.currentIndex=0}getCurrentEntry(){return this.sequenceList&&this.sequenceList[this.currentIndex]||null}isNextQuest(e){const t=this.getCurrentEntry();return!!t&&t.questKey===e}isNextEvent(e){const t=this.getCurrentEntry();return!!t&&t.eventKey===e}increment(){this.currentIndex<this.sequenceList.length-1&&this.currentIndex++}reset(){this.currentIndex=0}}class v{constructor(e,a,n){this.currentSequenceIndex=e,this.profileManager=a,this.app=n,this.activeQuestKey=r.f.getActiveQuestKey(),this.questActive=!!this.activeQuestKey,this.eventManager=null,this.ghosts=[],this.setupGhosts(),this.currentGhostId=1,this.currentPhenomenonIndex=0;const o=this.getCurrentGhost();console.log(`Current active ghost: ${o?o.name:"not found"}`),y().then((e=>{this.sequenceManager=new E(e.sequence);const t=parseInt(r.f.get(r.f.KEYS.CURRENT_SEQUENCE_INDEX),10)||0;if(this.sequenceManager.currentIndex=t,console.log(`Sequence configuration loaded. Current index: ${this.sequenceManager.currentIndex}`),"true"===r.f.get("registrationCompleted")&&"true"!==r.f.get("welcomeDone")){const e=this.sequenceManager.getCurrentEntry();e&&(console.log(`Auto-launching initial event: ${e.eventKey}`),this.eventManager.activateEvent(e.eventKey),this.activeQuestKey=e.questKey,r.f.set("activeQuestKey",this.activeQuestKey))}})).catch((e=>{t.S.logError(e,"GhostManager.loadConfig"),t.S.showError("Failed to load game configuration")})),document.addEventListener("gameEventCompleted",(e=>{this.onEventCompleted(e.detail)})),document.addEventListener("questCompleted",(e=>{this.onQuestCompleted(e.detail)}))}setupGhosts(){this.ghosts=[{id:1,name:"ghost 1",phenomenaCount:3,isFinished:!1}]}getCurrentGhost(){return this.ghosts.find((e=>e.id===this.currentGhostId))}async setCurrentGhost(e){this.currentGhostId=e;const a=this.getCurrentGhost();a?(console.log(`Ghost ${a.name} activated.`),await this.app.databaseManager.saveGhostState(a)):t.S.logError(`Ghost with ID=${e} not found!`,"setCurrentGhost")}async finishCurrentGhost(){const e=this.getCurrentGhost();e?(e.isFinished=!0,console.log(`Ghost ${e.name} finished.`),await this.app.databaseManager.saveGhostState(e)):t.S.logError("Cannot finish ghost: ghost not found.","finishCurrentGhost")}isCurrentGhostFinished(){const e=this.getCurrentGhost();return!!e&&e.isFinished}async triggerNextPhenomenon(){const e=this.getCurrentGhost();if(e)if(e.isFinished)t.S.logError(`Ghost "${e.name}" is already finished; phenomena unavailable.`,"triggerNextPhenomenon");else if(this.currentPhenomenonIndex<e.phenomenaCount){const t=this.currentPhenomenonIndex+1,a=`${e.name}: Phenomenon ${t} - Approach the mirror`;if(await this.eventManager.addDiaryEntry(a),console.log(`Triggered phenomenon for ${e.name}: ${a}`),this.currentPhenomenonIndex++,await this.profileManager.saveGhostProgress({ghostId:this.currentGhostId,phenomenonIndex:this.currentPhenomenonIndex}),this.currentPhenomenonIndex===e.phenomenaCount){const t=`${e.name}: Final phenomenon – ghost finished!`;await this.eventManager.addDiaryEntry(t),console.log(t),console.log(`Triggering final event for ghost "${e.name}"...`),await this.app.gameEventManager.activateEvent("ghost_final_event")}}else t.S.logError(`All phenomena for ghost ${e.name} have been completed (index=${this.currentPhenomenonIndex}).`,"triggerNextPhenomenon");else t.S.logError("No ghost found to trigger phenomenon.","triggerNextPhenomenon")}async resetGhostChain(){this.currentGhostId=1,this.currentPhenomenonIndex=0,await this.profileManager.resetGhostProgress(),console.log("Ghost chain has been reset.");const e=this.getCurrentGhost();e?(e.isFinished=!1,await this.app.databaseManager.saveGhostState(e)):t.S.logError("Failed to reset ghost chain: default ghost not found.","resetGhostChain")}isNextInSequence(e){return!!this.sequenceManager&&this.sequenceManager.isNextQuest(e)}isNextEvent(e){return!!this.sequenceManager&&this.sequenceManager.isNextEvent(e)}canStartQuest(e){const t=this.app.databaseManager.getQuestRecord(e);if(t&&"finished"!==t.status)return console.warn(`Quest "${e}" is already active with status "${t.status}".`),!1;const a=r.f.getActiveQuestKey();return a&&a!==e?(console.warn(`Another quest "${a}" is already active, cannot start quest "${e}".`),!1):!!this.isNextInSequence(e)||(console.error(`Quest "${e}" is not the next expected quest in the sequence.`),!1)}async startQuest(e){this.canStartQuest(e)?(console.log(`GhostManager: Starting quest with key: ${e}`),await this.app.questManager.activateQuest(e),this.activeQuestKey=e,r.f.setActiveQuestKey(e),await this.app.questManager.syncQuestState(),this.app.viewManager.setCameraButtonActive(!0)):console.error(`Cannot start quest with key: ${e}. Unified check failed.`)}async startEvent(e,t=!1){t||this.isNextEvent(e)?(console.log(`GhostManager: Starting event with key: ${e}`),await this.app.gameEventManager.activateEvent(e)):console.error(`Event "${e}" is not next in sequence.`)}updatePostButtonState(){const e=this.sequenceManager?this.sequenceManager.getCurrentEntry():null,t=!!e&&this.canStartQuest(e.questKey);this.app.viewManager.setPostButtonEnabled(t),console.log(`[GhostManager] Post button state updated: enabled=${t}`)}async handlePostButtonClick(){this.app.viewManager.setPostButtonEnabled(!1);const e=this.sequenceManager?this.sequenceManager.getCurrentEntry():null;if(!e)return console.warn("GhostManager: No next sequence entry found."),void this.updatePostButtonState();if(null!==e.questKey)console.log(`GhostManager: Handling Post button click. Next expected quest: "${e.questKey}".`),this.canStartQuest(e.questKey)?(await this.startQuest(e.questKey),this.updatePostButtonState()):this.updatePostButtonState();else{if(e.nextEventKey)try{console.log(`[GhostManager] No quest to start; activating event "${e.nextEventKey}" directly.`),await this.startEvent(e.nextEventKey,!0)}catch(t){console.error(`[GhostManager] Failed to activate event "${e.nextEventKey}":`,t)}else console.warn("[GhostManager] Both questKey and nextEventKey are null; nothing to activate.");this.updatePostButtonState()}}async handlePostButtonClick(){this.app.viewManager.setPostButtonEnabled(!1);const e=this.sequenceManager?this.sequenceManager.getCurrentEntry():null;if(!e)return console.warn("GhostManager: No next sequence entry found."),void this.updatePostButtonState();if(null!==e.questKey)console.log(`GhostManager: Handling Post button click. Next expected quest: "${e.questKey}".`),this.canStartQuest(e.questKey)?(await this.startQuest(e.questKey),this.updatePostButtonState()):this.updatePostButtonState();else{if(e.nextEventKey)try{console.log(`[GhostManager] No quest to start; activating event "${e.nextEventKey}" directly.`),await this.startEvent(e.nextEventKey,!0)}catch(t){console.error(`[GhostManager] Failed to activate event "${e.nextEventKey}":`,t)}else console.warn("[GhostManager] Both questKey and nextEventKey are null; nothing to activate.");this.updatePostButtonState()}}onEventCompleted(e){console.log(`GhostManager: Event completed with key: ${e}`),this.sequenceManager&&this.sequenceManager.getCurrentEntry().nextEventKey===e&&(this.sequenceManager.increment(),r.f.set(r.f.KEYS.CURRENT_SEQUENCE_INDEX,String(this.sequenceManager.currentIndex)),console.log(`GhostManager: Sequence index incremented to ${this.sequenceManager.currentIndex}`))}async onQuestCompleted(e){if(console.log(`GhostManager: Quest completed with key: ${e}`),this.activeQuestKey=null,r.f.setActiveQuestKey(null),this.updatePostButtonState(),this.app.viewManager.setCameraButtonActive(!1),"repeating_quest"===e){const e=this.app.questManager.quests.find((e=>"repeating_quest"===e.key)),t=e?await e.getCurrentQuestStatus():{currentStage:1,totalStages:1};if(console.log("Repeating quest status:",t),t.currentStage<=t.totalStages){const e=`post_repeating_event_stage_${t.currentStage}`;return console.log(`Repeating quest stage completed. Triggering generated event: ${e}`),void await this.startEvent(e,!0)}{const e=this.sequenceManager?this.sequenceManager.getCurrentEntry():null;return e&&e.nextEventKey?(console.log(`Repeating quest fully completed. Now starting ghost event from config: ${e.nextEventKey}`),await this.startEvent(e.nextEventKey,!0)):console.warn("No final event configured for repeating quest completion. Unable to start final event."),this.sequenceManager.increment(),void r.f.set(r.f.KEYS.CURRENT_SEQUENCE_INDEX,String(this.sequenceManager.currentIndex))}}const t=this.sequenceManager?this.sequenceManager.getCurrentEntry():null;t&&t.questKey===e&&t.nextEventKey&&(console.log(`GhostManager: Quest completed. Now starting ghost event: ${t.nextEventKey}`),await this.startEvent(t.nextEventKey,!0))}}class b{constructor(e,t,a,n){this.databaseManager=e,this.languageManager=t,this.ghostManager=a,this.visualEffectsManager=n}isEventLogged(e){return this.databaseManager.getDiaryEntries().some((t=>t.entry===e))}async addDiaryEntry(e,t=!1){const a=t?"ghost-post":"user-post",n={entry:e,postClass:a},o=JSON.stringify(n);if(await this.databaseManager.addDiaryEntry(o),t){const t={event_key:e,event_text:e,timestamp:(new Date).toISOString(),completed:0};this.databaseManager.saveEvent(t)}if(this.viewManager?.addSingleDiaryPost?this.viewManager.addSingleDiaryPost({text:e,img:e.startsWith("data:image")?e:"",timestamp:(new Date).toLocaleString(),postClass:a}):this.updateDiaryDisplay(),this.viewManager&&this.visualEffectsManager&&this.viewManager.diaryContainer){const e=this.viewManager.diaryContainer.querySelectorAll('[data-animate-on-board="true"]');this.visualEffectsManager.applyEffectsToNewElements(e)}}updateDiaryDisplay(){if(this.viewManager&&"function"==typeof this.viewManager.renderDiary){const e=this.databaseManager.getDiaryEntries(),t=this.languageManager.getLanguage();this.viewManager.renderDiary(e,t,this.visualEffectsManager)}else t.S.logError("ViewManager is not available. Cannot update diary display.","updateDiaryDisplay"),t.S.showError("Unable to update diary display.")}}class M{constructor(e,a,n){this.eventManager=e,this.gameEventManager=a,this.app=n,this.quests=[],Promise.all([y(),f()]).then((async([e,a])=>{this.questKeyToEventKey=a;for(const n of e.quests){const e={eventManager:this.eventManager,app:this.app},s=n.dependencies.map((t=>e[t]));n.config&&s.push(n.config);const r=a[n.key];if(r)try{const e=(await o(222)(`./triad-${r}`))[n.className];if(!e){t.S.logError(`Quest class "${n.className}" is not exported from triads/triad-${r}.js.`,"QuestManager");continue}const a=new e(...s);a.key=n.key,this.quests.push(a)}catch(e){t.S.logError(`Failed to import triad for quest "${n.key}": ${e.message}`,"QuestManager")}else t.S.logError(`Cannot find parent eventKey for quest "${n.key}".`,"QuestManager")}console.log("Quests loaded from configuration:",this.quests.map((e=>e.key))),document.addEventListener("questCompleted",(async e=>{const a=e.detail,n=this.questKeyToEventKey[a];if(n)try{await this.gameEventManager.activateEvent(n)}catch(e){t.S.logError(`Failed to activate event "${n}" after quest "${a}": ${e.message}`,"QuestManager")}else t.S.logError(`No next eventKey defined for quest "${a}".`,"QuestManager")}))})).catch((e=>{t.S.logError(e,"QuestManager.loadConfig"),t.S.showError("Failed to load quests configuration")})),this.initCameraListeners(),r.f.get(r.f.KEYS.REPEATING_QUEST_STATE)&&(console.log("[QuestManager] Detected saved state for repeating quest."),this.restoreRepeatingQuestUI()),this.app.viewManager&&"function"==typeof this.app.viewManager.restoreCameraButtonState&&this.app.viewManager.restoreCameraButtonState(),this.app.viewManager&&"function"==typeof this.app.viewManager.restoreShootButtonState&&this.app.viewManager.restoreShootButtonState()}initCameraListeners(){const e=this.app.cameraSectionManager;e&&(e.onVideoReady=async()=>{if(console.log("[QuestManager] onVideoReady signal received."),"repeating_quest"===r.f.getActiveQuestKey()){const e=this.quests.find((e=>"repeating_quest"===e.key));console.log(`[QuestManager] Detection target is "${e.currentTarget}"`);const t=e.generateDetectionConfig();await this.app.cameraSectionManager.startAIDetection(t)}},e.onCameraClosed=()=>{console.log("[QuestManager] onCameraClosed signal received. Stopping detection."),this.app.cameraSectionManager.stopAIDetection()})}async syncQuestStateForQuest(e){if("true"===r.f.get(r.f.KEYS.GAME_FINALIZED))return this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!1),void console.log(`[QuestManager.syncQuestStateForQuest] Game finalized; Post button disabled for quest "${e}".`);const t=r.f.canPost();this.app.viewManager.setPostButtonEnabled(t),console.log(`[QuestManager] Post button ${t?"enabled":"disabled"} for quest "${e}".`)}async syncQuestState(){for(const e of this.quests)await this.syncQuestStateForQuest(e.key)}async activateQuest(e){if(!e)return void console.warn("QuestManager.activateQuest called with null/undefined key; skipping.");const a=this.quests.find((t=>t.key===e));if(!a)return t.S.logError(`Quest "${e}" not found`,"QuestManager.activateQuest"),void t.S.showError(`Cannot activate quest "${e}"`);console.log(`[QuestManager] Activating quest: ${e}`),await a.activate(),r.f.setActiveQuestKey(e),await this.syncQuestState()}async checkQuest(e){const a=this.quests.find((t=>t.key===e));if(!a)return t.S.logError(`Quest "${e}" not found`,"QuestManager.checkQuest"),void t.S.showError(`Cannot finish quest "${e}"`);console.log(`[QuestManager] Finishing quest: ${e}`),await a.finish(),await this.syncQuestState()}async updateQuestProgress(e,t,a,n){const o={quest_key:e,current_stage:t,total_stages:a,status:n};await this.app.databaseManager.saveQuestRecord(o),console.log("[QuestManager] Quest progress updated:",o)}restoreRepeatingQuestUI(){const e=this.quests.find((e=>"repeating_quest"===e.key));e&&"function"==typeof e.restoreUI&&(console.log("[QuestManager] Restoring repeating quest UI..."),e.restoreUI())}restoreAllActiveQuests(){console.log("[QuestManager] Attempting to restore UI for all active quests..."),this.quests.forEach((e=>{const t=this.app.databaseManager.getQuestRecord(e.key);t&&("active"===t.status||"finished"===t.status&&e.currentStage<=e.totalStages)&&!e.finished&&(console.log(`[QuestManager] Found active quest "${e.key}". Restoring UI...`),"function"==typeof e.restoreUI?e.restoreUI():console.log(`[QuestManager] Quest "${e.key}" does not implement restoreUI().`))})),this.app.ghostManager&&"function"==typeof this.app.ghostManager.updatePostButtonState&&this.app.ghostManager.updatePostButtonState()}}class C{constructor(e,a,n){this.eventManager=e,this.app=a,this.languageManager=n,this.events=[],y().then((async e=>{const a=new Set(e.sequence.map((e=>e.eventKey))),n={};for(const t of e.events)n[t.key]=t;for(const e of a){const a=n[e];if(!a){t.S.logError(`No event configuration found for key "${e}" in sequence.`,"GameEventManager");continue}const s=[this.eventManager,this.app,a,this.languageManager];try{const n=(await o(222)(`./triad-${e}`))[a.className];if(!n){t.S.logError(`Event class "${a.className}" is not exported from triads/triad-${e}.js.`,"GameEventManager");continue}const r=new n(...s);this.events.push(r)}catch(a){t.S.logError(`Failed to import triad for event "${e}": ${a.message}`,"GameEventManager")}}console.log("Game events loaded from sequence:",this.events.map((e=>e.key)))})).catch((e=>{t.S.logError(e,"GameEventManager.loadConfig"),t.S.showError("Failed to load game events configuration")}))}async activateEvent(e){let a=this.events.find((t=>t.key===e));!a&&e.startsWith("post_repeating_event")&&(a=this.events.find((e=>"post_repeating_event"===e.key))),a?(await a.activate(e),console.log(`Event '${e}' activated.`)):(t.S.logError(`Event "${e}" not found`,"GameEventManager.activateEvent"),t.S.showError(`Cannot activate event "${e}"`))}async autoLaunchWelcomeEvent(){"true"!==r.f.get(r.f.KEYS.WELCOME_DONE)?(console.log("Auto-launching welcome event in 5 seconds..."),setTimeout((async()=>{await this.activateEvent("welcome")}),5e3)):console.log("Welcome event already completed; auto-launch skipped.")}}class w{constructor(e){this.app=e}show(){const e=this.app.profileManager.getProfile();if(!e)return void alert("Профиль не найден.");const t=document.createElement("div");t.id="profile-modal-overlay",Object.assign(t.style,{position:"fixed",top:"0",left:"0",width:"100%",height:"100%",backgroundColor:"rgba(0,0,0,0.5)",display:"flex",justifyContent:"center",alignItems:"center",zIndex:"2000",overflowY:"auto"});const a=document.createElement("div");a.id="profile-modal",Object.assign(a.style,{backgroundColor:"#fff",padding:"20px",borderRadius:"8px",width:"90%",maxWidth:"500px",maxHeight:"90%",overflowY:"auto",boxShadow:"0 0 10px rgba(0,0,0,0.3)"});const n=document.createElement("h2");n.textContent="Редактирование профиля",a.appendChild(n);const o=document.createElement("div");o.style.textAlign="center";const s=document.createElement("img");s.id="profile-modal-avatar",s.src=e.selfie,s.alt="Аватар",Object.assign(s.style,{width:"100px",height:"100px",borderRadius:"50%"}),o.appendChild(s);const r=document.createElement("button");r.textContent="Обновить селфи",r.style.marginTop="10px",r.addEventListener("click",(()=>{this.showSelfieEditModal((e=>{s.src=e}))})),o.appendChild(r),a.appendChild(o);const i=document.createElement("label");i.textContent="Логин:",i.style.display="block",i.style.marginTop="15px",a.appendChild(i);const l=document.createElement("input");l.type="text",l.value=e.name,l.style.width="100%",l.style.marginBottom="15px",a.appendChild(l);const c=document.createElement("div");if(c.id="profile-plan-container",c.style.border="1px solid #ccc",c.style.padding="10px",c.style.marginBottom="15px",this.app.apartmentPlanManager)if(this.app.apartmentPlanManager.table||this.app.apartmentPlanManager.createTable(),this.app.apartmentPlanManager.table){const e=this.app.apartmentPlanManager.table.cloneNode(!0);c.appendChild(e);const t=this.app.apartmentPlanManager.rooms.map((e=>e.floor));if([...new Set(t)].length>1){const e=document.createElement("div");e.style.textAlign="center",e.style.marginTop="10px";const t=document.createElement("button");t.textContent="Предыдущий этаж",t.addEventListener("click",(()=>{if(this.app.apartmentPlanManager.prevFloor(),c.innerHTML="",this.app.apartmentPlanManager.table){const e=this.app.apartmentPlanManager.table.cloneNode(!0);c.appendChild(e)}else c.textContent="План квартиры отсутствует."}));const a=document.createElement("button");a.textContent="Следующий этаж",a.style.marginLeft="10px",a.addEventListener("click",(()=>{if(this.app.apartmentPlanManager.nextFloor(),c.innerHTML="",this.app.apartmentPlanManager.table){const e=this.app.apartmentPlanManager.table.cloneNode(!0);c.appendChild(e)}else c.textContent="План квартиры отсутствует."})),e.appendChild(t),e.appendChild(a),c.appendChild(e)}}else c.textContent="План квартиры отсутствует.";else c.textContent="План квартиры отсутствует.";a.appendChild(c);const d=document.createElement("p");d.textContent="Переехать и начать с чистого листа - это иногда помогает избавиться от привидений, но не всегда.",d.style.fontStyle="italic",a.appendChild(d);const g=document.createElement("div");g.id="ghost-rewards-container",Object.assign(g.style,{display:"flex",flexWrap:"wrap",justifyContent:"center",marginTop:"20px"});(this.app.ghostManager&&this.app.ghostManager.ghosts||[]).forEach((e=>{const t=document.createElement("div");t.className="ghost-icon",Object.assign(t.style,{width:"60px",height:"60px",borderRadius:"50%",border:"2px solid #ccc",margin:"5px",display:"flex",justifyContent:"center",alignItems:"center",fontSize:"12px",fontWeight:"bold",position:"relative"});const a=this.app.profileManager.getGhostProgress();a&&a.ghostId===e.id?(t.textContent=`${a.phenomenonIndex}/${e.phenomenaCount}`,t.style.borderColor="#4caf50"):(t.textContent=e.name,t.style.filter="grayscale(100%)"),g.appendChild(t)})),a.appendChild(g);const h=document.createElement("div");h.style.textAlign="right",h.style.marginTop="20px";const u=document.createElement("button");u.textContent="Отмена",u.style.marginRight="10px",u.addEventListener("click",(()=>{document.body.removeChild(t)})),h.appendChild(u);const p=document.createElement("button");p.textContent="Сохранить изменения",p.addEventListener("click",(()=>{const a=Object.assign({},e,{name:l.value,selfie:s.src});this.app.profileManager.saveProfile(a),this.app.profileNameElem.textContent=a.name,this.app.profilePhotoElem.src=a.selfie,document.body.removeChild(t)})),h.appendChild(p),a.appendChild(h),t.appendChild(a),document.body.appendChild(t)}showSelfieEditModal(e){const t=document.createElement("div");t.id="selfie-edit-overlay",Object.assign(t.style,{position:"fixed",top:"0",left:"0",width:"100%",height:"100%",backgroundColor:"rgba(0,0,0,0.7)",display:"flex",justifyContent:"center",alignItems:"center",zIndex:"2100",overflowY:"auto"});const a=document.createElement("div");a.id="selfie-edit-modal",Object.assign(a.style,{backgroundColor:"#fff",padding:"20px",borderRadius:"8px",width:"90%",maxWidth:"400px",maxHeight:"90%",overflowY:"auto",boxShadow:"0 0 10px rgba(0,0,0,0.3)"});const n=document.createElement("h3");n.textContent="Редактирование селфи",a.appendChild(n);const o=document.createElement("div");o.id="selfie-video-container",Object.assign(o.style,{width:"100%",maxWidth:"400px",margin:"10px auto"}),a.appendChild(o),this.app.cameraSectionManager.attachTo("selfie-video-container",{width:"100%",maxWidth:"400px",filter:"grayscale(100%)"}),this.app.cameraSectionManager.startCamera();const s=document.createElement("button");s.textContent="Сделать селфи",s.style.display="block",s.style.margin="10px auto",s.addEventListener("click",(()=>{if(!this.app.cameraSectionManager.videoElement||!this.app.cameraSectionManager.videoElement.srcObject)return void alert("Камера не включена.");const a=this.app.cameraSectionManager.videoElement,n=document.createElement("canvas");n.width=a.videoWidth||640,n.height=a.videoHeight||480;n.getContext("2d").drawImage(a,0,0,n.width,n.height);const o=window.ImageUtils?window.ImageUtils.convertToGrayscale(n):n.toDataURL();this.app.cameraSectionManager.stopCamera(),document.body.removeChild(t),e&&e(o)})),a.appendChild(s);const r=document.createElement("button");r.textContent="Отмена",r.style.display="block",r.style.margin="10px auto",r.addEventListener("click",(()=>{this.app.cameraSectionManager.stopCamera(),document.body.removeChild(t)})),a.appendChild(r),t.appendChild(a),document.body.appendChild(t)}}function S(e,t){e.innerHTML="";t.split("").forEach(((t,a)=>{const n=document.createElement("span");n.innerText=t,n.style.opacity="0",n.style.transition="opacity 0.3s ease-in",e.appendChild(n),setTimeout((()=>{n.style.opacity="1"}),100*a)}))}class x{constructor(t={}){this.templateUrl=t.templateUrl||`${e.o2}/templates/chat_template.html`,this.mode=t.mode||"full",this.container=null,this.databaseManager=t.databaseManager||null,this.languageManager=t.languageManager||null,this.sectionKey=t.sectionKey||null,this.scenarioManager=null}static createChatManagerWrapper(t={}){const a={templateUrl:`${e.o2}/templates/chat_template.html`,mode:"full"};return new x({...a,...t})}getStateKey(e){return this.sectionKey?`${this.sectionKey}_${e}`:e}getLocalizedString(e,t){if(this.languageManager&&this.languageManager.locales&&"function"==typeof this.languageManager.getLanguage){const t=this.languageManager.getLanguage();if(this.languageManager.locales[t]&&this.languageManager.locales[t][e])return this.languageManager.locales[t][e]}return t}async init(){try{const e=await fetch(this.templateUrl);if(!e.ok)throw new Error(`Failed to fetch template from ${this.templateUrl}`);const t=await e.text();let a="";if(this.databaseManager){const e=this.databaseManager.getChatMessages();e&&e.length>0&&(a=e.map((e=>`<div class="chat-message ${e.sender}" style="margin-bottom: 0.5rem; padding: 0.5rem; border-radius: 4px; max-width: 80%; word-wrap: break-word;">${e.message}</div>`)).join(""))}const n={messages:a,spiritBoardContent:this.getLocalizedString("spirit_board","Spirit Board"),options:""},s=c.render(t,n);if(this.container=document.getElementById("chat-section"),!this.container)throw new Error('Chat section container (id="chat-section") not found in index.html');if(this.container.innerHTML=s,this.container.style.display="none","board-only"===this.mode){const e=this.container.querySelector("#chat-options");e&&(e.style.display="none")}if(console.log("ChatManager initialized."),this.isConversationActive())console.log("Conversation already active; skipping dialogue load to prevent duplicates.");else try{const e=await o.e(651).then(o.bind(o,651));this.scenarioManager=new e.ChatScenarioManager(this,null),await this.scenarioManager.init()}catch(e){console.error("Failed to resume ChatScenarioManager:",e)}}catch(e){console.error("Error initializing ChatManager:",e)}}isConversationActive(){const e="true"===r.f.get(this.getStateKey("chat_started")),t=this.container&&this.container.querySelector("#chat-messages"),a=t&&t.children.length>0;return e&&a}show(){this.container&&(this.container.style.display="block",console.log("ChatManager is now visible."))}hide(){this.container&&(this.container.style.display="none",console.log("ChatManager is now hidden."))}sendInitialMessage(e){if(!this.container)return void console.error("ChatManager is not initialized.");const t=this.container.querySelector("#chat-messages");if(t){const a=`<div class="chat-message spirit" style="margin-bottom: 0.5rem; padding: 0.5rem; border-radius: 4px; max-width: 80%; word-wrap: break-word;">${e}</div>`;t.innerHTML+=a,console.log("Initial message sent:",e)}}async saveMessage(e){this.databaseManager&&"function"==typeof this.databaseManager.addChatMessage&&(await this.databaseManager.addChatMessage(e.sender,e.text),console.log(`Message saved: [${e.sender}] ${e.text}`))}async loadDialogue(e){if(!this.container)return void console.error("ChatManager is not initialized.");let t="";for(const a of e.messages){const e=this.getLocalizedString(a.text,a.text);if(t+=`<div class="chat-message ${a.sender}" style="margin-bottom: 0.5rem; padding: 0.5rem; border-radius: 4px; max-width: 80%; word-wrap: break-word;">${e}</div>`,a.animateOnBoard){const t=this.container.querySelector("#spirit-board");t&&S(t,e)}await this.saveMessage({sender:a.sender,text:e})}const a=this.container.querySelector("#chat-messages");a&&(a.innerHTML+=t),this.updateDialogueOptions(e.options);const n=this.container.querySelector("#spirit-board");n&&(n.innerHTML=""),console.log("Dialogue loaded in ChatManager.")}updateDialogueOptions(e){const t=this.container.querySelector("#chat-options");if(t){let a="";e&&e.length>0&&e.forEach(((e,t)=>{const n=this.getLocalizedString(e.text,e.text);a+=`<button class="button is-link dialogue-option" style="margin-bottom: 0.5rem;">${n}</button>`})),e&&e.length>3?(t.style.maxHeight="200px",t.style.overflowY="auto"):(t.style.maxHeight="",t.style.overflowY=""),t.innerHTML=a;t.querySelectorAll(".dialogue-option").forEach(((t,a)=>{t.addEventListener("click",(()=>{if(this.scenarioManager&&"function"==typeof this.scenarioManager.advanceDialogue)this.scenarioManager.advanceDialogue(a);else{const t=e[a];console.log(`Option selected: ${t.text}`)}}))})),console.log("Dialogue options updated in ChatManager.")}else console.error("Options container not found in ChatManager.")}setMode(e){if(this.mode=e,this.container){const t=this.container.querySelector("#chat-options");"board-only"===e&&t?t.style.display="none":t&&(t.style.display="block")}console.log(`ChatManager mode set to: ${e}`)}async restartConversation(){if(r.f.set(this.getStateKey("chat_started"),"true"),r.f.remove(this.getStateKey("chat_conversation_completed")),r.f.remove(this.getStateKey("chat_currentDialogueIndex")),this.container){const e=this.container.querySelector("#chat-messages");e&&(e.innerHTML="")}try{const e=await o.e(651).then(o.bind(o,651));this.scenarioManager=new e.ChatScenarioManager(this,null),await this.scenarioManager.init(),console.log("Conversation restarted for section:",this.sectionKey||"(global)")}catch(e){console.error("Failed to restart conversation:",e)}}scheduleConversationStartIfInactive(e=5e3){setTimeout((()=>{this.isConversationActive()?console.log("Conversation is already active; restart aborted."):this.restartConversation()}),e),console.log(`Conversation restart scheduled in ${e} ms.`)}clearChat(e){const t=e?`${e}_`:"";r.f.remove(`${t}chat_started`),r.f.remove(`${t}chat_currentDialogueIndex`),r.f.remove(`${t}chat_conversation_completed`),console.log(`Chat cleared for section: ${e||"global"}`)}}class T{constructor(e={}){this.viewManager=e.viewManager||new d(this),this.viewManager.bindEvents(this),this.sqliteDataManager=e.sqliteDataManager||new n,this.databaseManager=e.databaseManager||new s(this.sqliteDataManager),this.isCameraOpen=!1,this.selfieData=null,this.languageManager=e.languageManager||new u("language-selector"),this.cameraSectionManager=e.cameraSectionManager||new p,this.viewManager.setCameraManager(this.cameraSectionManager),this.profileManager=e.profileManager||new m(this.sqliteDataManager),this.visualEffectsManager=e.visualEffectsManager||new a(this,this.viewManager.controlsPanel);const t=parseInt(r.f.get("currentSequenceIndex"),10)||0;this.ghostManager=e.ghostManager||new v(t,this.profileManager,this),this.eventManager=e.eventManager||new b(this.databaseManager,this.languageManager,this.ghostManager,this.visualEffectsManager),this.eventManager.viewManager=this.viewManager,this.ghostManager.eventManager=this.eventManager,this.gameEventManager=e.gameEventManager||new C(this.eventManager,this,this.languageManager),this.questManager=e.questManager||new M(this.eventManager,this.gameEventManager,this),this.showProfileModal=e.showProfileModal||new w(this),this.chatManager=e.chatManager||x.createChatManagerWrapper({databaseManager:this.databaseManager,languageManager:this.languageManager,sectionKey:"support"}),this.init()}loadAppState(){const e=r.f.get("currentGhostId");e?this.ghostManager.setCurrentGhost(parseInt(e)):this.ghostManager.setCurrentGhost(1)}async init(){if(await this.databaseManager.initDatabasePromise,console.log("Database initialization complete."),this.loadAppState(),await this.cameraSectionManager.preloadModel(),await this.questManager.syncQuestState(),this.questManager.restoreAllActiveQuests(),r.f.isCameraOpen()&&(this.viewManager.setCameraButtonActive(!0),console.log("Camera button active state restored based on saved state.")),this.viewManager.showToggleCameraButton(),this.viewManager.createTopCameraControls(),await this.chatManager.init(),this.chatManager.scheduleConversationStartIfInactive(5e3),await this.profileManager.isProfileSaved()){const e=await this.profileManager.getProfile();console.log("Profile found:",e),await this.viewManager.switchScreen("main-screen","main-buttons",this),this.viewManager.showToggleCameraButton();const t="true"===r.f.get("postButtonDisabled");this.viewManager.setPostButtonEnabled(!t),this.viewManager.updateProfileDisplay(e),this.selfieData=e.selfie,await this.viewManager.loadLatestDiaryPosts()}else console.log("Profile not found, showing landing screen."),await this.viewManager.switchScreen("landing-screen","landing-buttons",this);const e=document.getElementById("preloader");e&&(e.style.display="none",console.log("[App] Preloader hidden after AI model preload and app init."))}}function I(e){return new Promise(((t,a)=>{const n=document.createElement("script");n.src=e,n.async=!1,n.onload=()=>t(e),n.onerror=()=>a(new Error(`Failed to load ${e}`)),document.head.appendChild(n)}))}document.addEventListener("DOMContentLoaded",(()=>{const t=document.getElementById("loader");t&&(t.style.display="block");let a=Promise.resolve();"serviceWorker"in navigator&&(a=navigator.serviceWorker.register(`${e.o2}/sw.js`).then((e=>(console.log("✅ Service Worker registered with scope:",e.scope),e.waiting&&promptUserToUpdate(),e.addEventListener("updatefound",(()=>{const t=e.installing;t.addEventListener("statechange",(()=>{"installed"===t.state&&navigator.serviceWorker.controller&&promptUserToUpdate()}))})),navigator.serviceWorker.ready))).catch((e=>{console.error("❌ SW registration failed:",e)})),navigator.serviceWorker.addEventListener("message",(e=>{"NEW_VERSION_AVAILABLE"===e.data?.type&&promptUserToUpdate()})),navigator.serviceWorker.addEventListener("controllerchange",(()=>{console.log("🔄 New Service Worker activated; reloading page"),window.location.reload()}))),Promise.all([a,I(e.Sj),I(e.gO),I(e.mB)]).then((()=>{console.log("⚙️  All external libraries loaded");new T;t&&(t.style.display="none");let e=null;window.addEventListener("beforeinstallprompt",(t=>{t.preventDefault(),e=t;const a=document.getElementById("install-btn");a&&(a.style.display="block")}));const a=document.getElementById("install-btn");a&&a.addEventListener("click",(async()=>{if(!e)return;e.prompt();const{outcome:t}=await e.userChoice;console.log(`User response to install prompt: ${t}`),a.style.display="none",e=null}));const n=document.getElementById("update-btn");n&&n.addEventListener("click",(()=>{console.log("🔄 Update button clicked; instructing SW to clear cache"),navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage({type:"CLEAR_CACHE"})}))})).catch((e=>{console.error("❌ Initialization failed:",e),t&&(t.style.display="none")}))}))})()})();