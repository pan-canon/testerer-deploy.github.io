import { BaseMirrorQuest } from './quests/baseMirrorQuest.js';

/**
 * QuestManager ‚Äì –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞–º–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
 * 
 * –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ "–Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–ø–æ—Å—Ç–∏—Ç—å¬ª" (handlePostButtonClick)
 * –∏ "–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ ¬´–ó–∞–ø–æ—Å—Ç–∏—Ç—å¬ª" (updatePostButtonState), —á—Ç–æ–±—ã —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ
 * —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—É—Å–∫–æ–º –∫–≤–µ—Å—Ç–æ–≤ –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ App.
 */
export class QuestManager {
  /**
   * @param {EventManager} eventManager - –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–±—ã—Ç–∏–π (—Ä–∞–±–æ—Ç–∞ —Å –¥–Ω–µ–≤–Ω–∏–∫–æ–º).
   * @param {App} appInstance - –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
   * @param {ProfileManager} profileManager - (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è.
   */
  constructor(eventManager, appInstance, profileManager) {
    this.eventManager = eventManager;
    this.app = appInstance;
    this.profileManager = profileManager;  // –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –Ω—É–∂–µ–Ω

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–≤–µ—Å—Ç—ã:
    this.quests = [
      new BaseMirrorQuest(this.eventManager, this.app)
    ];
  }

  /**
   * activateQuest ‚Äì –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∫–≤–µ—Å—Ç –ø–æ –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É –∫–ª—é—á—É.
   * @param {string} key - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –∫–≤–µ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "mirror_quest").
   */
  async activateQuest(key) {
    const quest = this.quests.find(q => q.key === key);
    if (quest) {
      await quest.activate();
    } else {
      console.warn(`[QuestManager] –ö–≤–µ—Å—Ç —Å –∫–ª—é—á–æ–º "${key}" –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
    }
  }

  /**
   * checkQuest ‚Äì –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∫–≤–µ—Å—Ç –ø–æ –µ–≥–æ –∫–ª—é—á—É (finish()).
   * @param {string} key - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –∫–≤–µ—Å—Ç–∞.
   */
  async checkQuest(key) {
    const quest = this.quests.find(q => q.key === key);
    if (quest) {
      await quest.finish();
    }
  }

  /**
   * handleShootMirrorQuest ‚Äì –º–µ—Ç–æ–¥ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ¬´–ó–∞—Å–Ω—è—Ç—å¬ª
   * (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –Ω–µ—ë ‚Äî –∑–∞–≤–µ—Ä—à–∞–µ–º mirror_quest).
   */
  async handleShootMirrorQuest() {
    console.log("[QuestManager] handleShootMirrorQuest()");

    // –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–µ—Ä–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å)
    await this.checkQuest("mirror_quest");

    // –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, UI –≤ BaseMirrorQuest —Å–∞–º –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è (stopCheckLoop)
    // –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ ‚Äì –¥–æ–±–∞–≤–ª—è–π—Ç–µ –∑–¥–µ—Å—å.
  }

  /**
   * handlePostButtonClick ‚Äì –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–æ—Å—Ç–∏—Ç—å":
   *   1) –ï—Å–ª–∏ mirrorQuestReady == true, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–µ—Ä–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç.
   *   2) –ò–Ω–∞—á–µ ‚Äì –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–æ–∂–¥–∞—Ç—å—Å—è –ø—Ä–∏–∑—Ä–∞–∫–∞.
   */
  async handlePostButtonClick() {
    console.log("[QuestManager] handlePostButtonClick()");
    const isReady = localStorage.getItem("mirrorQuestReady") === "true";
    if (isReady) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
      localStorage.removeItem("mirrorQuestReady");
      this.updatePostButtonState();

      console.log("–î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ª–æ–≥–∏–∫–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞)");

      // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É, –µ—Å–ª–∏ —Ö–æ—Ç–∏–º
      const cameraBtn = document.getElementById("toggle-camera");
      if (cameraBtn) {
        cameraBtn.classList.add("glowing");
      }

      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–µ—Ä–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç
      await this.activateQuest("mirror_quest");
    } else {
      alert("–ñ–¥–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç –ø—Ä–∏–∑—Ä–∞–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞.");
    }
  }

  /**
   * updatePostButtonState ‚Äì —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ –º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø–æ—Å—Ç–∏—Ç—å"
   * (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–≥–¥–∞ mirrorQuestReady = true/false).
   */
  updatePostButtonState() {
    const isReady = (localStorage.getItem("mirrorQuestReady") === "true");
    console.log("[QuestManager] updatePostButtonState:", isReady);

    // –î–æ—Å—Ç—É–ø–∞–µ–º—Å—è –∫ postBtn –∏–∑ app
    const postBtn = this.app.postBtn;
    if (postBtn) {
      postBtn.disabled = !isReady;
    }
  }

  /**
   * triggerMirrorQuestIfActive ‚Äì –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –∫–∞–º–µ—Ä—ã, 
   * –ø—Ä–æ–≤–µ—Ä—è–µ–º localStorage –∏, –µ—Å–ª–∏ –∫–≤–µ—Å—Ç –∞–∫—Ç–∏–≤–µ–Ω, –ø—Ä–æ–≤–æ–¥–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É / –∑–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª.
   */
  async triggerMirrorQuestIfActive() {
    if (localStorage.getItem("mirrorQuestActive") === "true") {
      console.log("ü™û –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞...");
      await this.checkQuest("mirror_quest");
    }
  }

  /**
   * checkMirrorQuestOnCamera ‚Äì –ø—Ä–∏–º–µ—Ä —É–¥–æ–±–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ 
   * (–≤—ã–∑—ã–≤–∞–µ—Ç checkQuest("mirror_quest")).
   */
  async checkMirrorQuestOnCamera() {
    await this.checkQuest("mirror_quest");
  }

  /**
   * checkAvailablePhenomena ‚Äì –ø—Ä–∏–º–µ—Ä –ª–æ–≥–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–µ–Ω–æ–º–µ–Ω–æ–≤ (–∏–∑ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞).
   */
  async checkAvailablePhenomena() {
    const locationType = this.profileManager?.getLocationType?.();
    if (locationType) {
      console.log(`–¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è: ${locationType}`);
      const locationAllowedPhenomena = {
        "–ö—É—Ö–Ω—è": ["call", "randomCall"],
        "–°–ø–∞–ª—å–Ω—è": ["call", "randomCall"],
        // ...
      };
      const locationPhenomena = locationAllowedPhenomena[locationType] || [];
      const ghost = this.app.ghostManager.getCurrentGhost();
      if (ghost && ghost.allowedPhenomena) {
        const intersection = ghost.allowedPhenomena.filter(p => locationPhenomena.includes(p));
        if (intersection.length > 0) {
          console.log(`–î–æ—Å—Ç—É–ø–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è: ${intersection}`);
          // –ó–∞–ø—É—Å—Ç–∏—Ç—å...
        }
      }
    }
  }
}