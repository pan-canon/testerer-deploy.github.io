const CACHE_NAME = "game-cache-v2";
const BASE_PATH = "/Testerer"; // –£–∫–∞–∂–∏—Ç–µ "" –µ—Å–ª–∏ —Å–∞–π—Ç –≤ –∫–æ—Ä–Ω–µ

const urlsToCache = [
  `${BASE_PATH}/`,
  `${BASE_PATH}/index.html`,
  "https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css",
  `${BASE_PATH}/js/app.js`,
  `${BASE_PATH}/js/main.js`,
  `${BASE_PATH}/js/sql-wasm.js`,
  `${BASE_PATH}/locales/locales.json`
];

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker –∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
self.addEventListener("install", (event) => {
  console.log("üõ† –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker...");
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then((cache) => cache.addAll(urlsToCache))
      .catch((err) => console.error("‚ùå –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è:", err))
  );
});

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è Service Worker –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∫—ç—à–µ–π
self.addEventListener("activate", (event) => {
  console.log("‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è Service Worker...");
  event.waitUntil(
    caches.keys().then((cacheNames) => {
      return Promise.all(
        cacheNames.map((cacheName) => {
          if (cacheName !== CACHE_NAME) {
            console.log(`üóë –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–µ—à–∞: ${cacheName}`);
            return caches.delete(cacheName);
          }
        })
      );
    })
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤: —Å–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ –∫—ç—à–µ, –ø–æ—Ç–æ–º –æ–±–Ω–æ–≤–ª—è–µ–º
self.addEventListener("fetch", (event) => {
  event.respondWith(
    caches.match(event.request).then((response) => {
      return response || fetch(event.request).then((networkResponse) => {
        return caches.open(CACHE_NAME).then((cache) => {
          cache.put(event.request, networkResponse.clone()); // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
          return networkResponse;
        });
      });
    }).catch(() => caches.match(`${BASE_PATH}/index.html`)) // –§–æ–ª–ª–±—ç–∫ –Ω–∞ index.html
  );
});