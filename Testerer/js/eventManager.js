export class EventManager {
  constructor(databaseManager, languageManager, ghostManager) {
    this.databaseManager = databaseManager;
    this.languageManager = languageManager;
    this.ghostManager = ghostManager;
    this.diaryContainer = document.getElementById("diary");
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å —Å –¥–∞–Ω–Ω—ã–º –∫–ª—é—á–æ–º –≤ –¥–Ω–µ–≤–Ω–∏–∫
  isEventLogged(eventKey) {
    const entries = this.databaseManager.getDiaryEntries();
    return entries.some(entry => entry.entry === eventKey);
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫, —Å –ø–æ–º–µ—Ç–∫–æ–π –æ —Ç–æ–º, –æ—Ç –∫–æ–≥–æ —ç—Ç–∞ –∑–∞–ø–∏—Å—å (–ø—Ä–∏–∑—Ä–∞–∫ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
  async addDiaryEntry(entry, isPostFromGhost = false) {
    const postClass = isPostFromGhost ? "ghost-post" : "user-post";  // –ö–ª–∞—Å—Å –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    const entryData = { entry, postClass };
    await this.databaseManager.addDiaryEntry(entryData);
    this.updateDiaryDisplay();
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–∏–∫–∞
  updateDiaryDisplay() {
    if (!this.diaryContainer) {
      console.error("Diary container not found!");
      return;
    }
    this.diaryContainer.innerHTML = "";  // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–Ω–µ–≤–Ω–∏–∫–∞
    const entries = this.databaseManager.getDiaryEntries();
    const seen = new Set();
    const currentLanguage = this.languageManager.getLanguage();

    entries.forEach(entry => {
      if (seen.has(entry.entry)) return;
      seen.add(entry.entry);

      const wrapper = document.createElement("div");
      const p = document.createElement("p");
      
      // –õ–æ–∫–∞–ª–∏–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞
      const localizedText =
        this.languageManager.locales[currentLanguage][entry.entry] || entry.entry;
      p.textContent = `${localizedText} (${entry.timestamp})`;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –ø–æ—Å—Ç–∞ (–æ—Ç –ø—Ä–∏–∑—Ä–∞–∫–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
      wrapper.classList.add(entry.postClass);  
      wrapper.appendChild(p);

      // –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –µ–≥–æ
      if (entry.entry.includes("[photo attached]")) {
        const parts = entry.entry.split("\n[photo attached]\n");
        const imageData = parts[1];
        const img = document.createElement("img");
        img.src = imageData;
        img.alt = this.languageManager.locales[currentLanguage]["photo_attached"] || "Photo attached";
        img.style.maxWidth = "100%";
        wrapper.appendChild(img);
      }

      this.diaryContainer.appendChild(wrapper);
    });

    console.log("üìñ Diary updated.");
  }

  // –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞ —Å –∑–µ—Ä–∫–∞–ª–æ–º –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  async startMirrorQuest() {
    // –ó–∞–ø–∏—Å—å –æ—Ç –ø—Ä–∏–∑—Ä–∞–∫–∞ —Å –ø—Ä–æ—Å—å–±–æ–π –ø–æ–¥–æ–π—Ç–∏ –∫ –∑–µ—Ä–∫–∞–ª—É
    await this.addDiaryEntry("–ü–æ–¥–æ–π–¥–∏ –∫ –∑–µ—Ä–∫–∞–ª—É", true);
    console.log("üé≠ Starting mirror quest...");
    
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ß—Ç–æ —ç—Ç–æ?" –≤ –∑–∞–ø–∏—Å–∏
    this.createWhatIsThisButton();
  }

  // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ß—Ç–æ —ç—Ç–æ?" —Å —Ç–∞–π–º–µ—Ä–æ–º –Ω–∞ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ
  createWhatIsThisButton() {
    const buttonContainer = document.createElement("div");
    const button = document.createElement("button");
    button.textContent = "–ß—Ç–æ —ç—Ç–æ?!";
    button.id = "what_is_this_button";
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞ –ø–æ –Ω–∞–∂–∞—Ç–∏—é
    button.addEventListener("click", async () => {
      await this.startMirrorQuestProcess();
      button.style.display = 'none';  // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    });
    
    // –¢–∞–π–º–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      button.style.display = 'none';
    }, 5000);

    buttonContainer.appendChild(button);
    this.diaryContainer.appendChild(buttonContainer);
  }

  // –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞
  async startMirrorQuestProcess() {
    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞
    const success = await this.checkStatus();  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ (–µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –ø–µ—Ä–µ–¥ –∑–µ—Ä–∫–∞–ª–æ–º)
    if (success) {
      const photoOrText = "–ë—É–∫–≤–∞ Z";  // –≠—Ç–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞, –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞ –±—É–∫–≤—ã
      await this.addDiaryEntry(photoOrText);
    } else {
      alert("‚ùå –ö–≤–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω!");
    }
  }

  // –ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞ (–µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –ø–µ—Ä–µ–¥ –∑–µ—Ä–∫–∞–ª–æ–º)
  async checkStatus() {
    const success = await this.app.compareCurrentFrame();  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–¥—Ä–∞ —Å –∑–µ—Ä–∫–∞–ª–æ–º
    return success;
  }

  // –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–∏–∑—Ä–∞–∫–∞
  async startGhostQuest() {
    const ghost = this.ghostManager.getCurrentGhost();
    if (ghost) {
      const questKey = `ghost_${ghost.id}_quest`;
      await this.addDiaryEntry(questKey, true);  // –ó–∞–ø–∏—Å—å –æ—Ç –ø—Ä–∏–∑—Ä–∞–∫–∞
      console.log(`üëª Starting quest for ${ghost.name}...`);
    } else {
      console.error("‚ö†Ô∏è No active ghost found.");
    }
  }
}