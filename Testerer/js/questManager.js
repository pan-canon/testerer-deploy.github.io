import { BaseMirrorQuest } from './quests/baseMirrorQuest.js';
 
/**
 * QuestManager ‚Äì –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞–º–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
 *
 * –õ–æ–≥–∏–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–ø–æ—Å—Ç–∏—Ç—å¬ª (handlePostButtonClick)
 * –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –µ—ë —Å–æ—Å—Ç–æ—è–Ω–∏—è (updatePostButtonState) –≤—ã–Ω–µ—Å–µ–Ω–∞ —Å—é–¥–∞, —á—Ç–æ–±—ã
 * –æ–±–µ—Å–ø–µ—á–∏—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–æ–º –∫–≤–µ—Å—Ç–æ–≤ –±–µ–∑ –ø—Ä—è–º–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç App.
 */
export class QuestManager {
  /**
   * @param {EventManager} eventManager - –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–±—ã—Ç–∏–π (—Ä–∞–±–æ—Ç–∞ —Å –¥–Ω–µ–≤–Ω–∏–∫–æ–º).
   * @param {App} appInstance - –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
   * @param {ProfileManager} profileManager - (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è.
   */
  constructor(eventManager, appInstance, profileManager) {
    this.eventManager = eventManager;
    this.app = appInstance;
    this.profileManager = profileManager;

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–≤–µ—Å—Ç—ã. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äì –±–∞–∑–æ–≤—ã–π –∑–µ—Ä–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç.
    this.quests = [
      new BaseMirrorQuest(this.eventManager, this.app)
    ];
  }

  /**
   * activateQuest ‚Äì –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∫–≤–µ—Å—Ç –ø–æ –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É –∫–ª—é—á—É.
   * @param {string} key - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –∫–≤–µ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "mirror_quest").
   */
  async activateQuest(key) {
    const quest = this.quests.find(q => q.key === key);
    if (quest) {
      await quest.activate();
    } else {
      console.warn([QuestManager] –ö–≤–µ—Å—Ç —Å –∫–ª—é—á–æ–º "${key}" –Ω–µ –Ω–∞–π–¥–µ–Ω.);
    }
  }

  /**
   * checkQuest ‚Äì –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∫–≤–µ—Å—Ç –ø–æ –µ–≥–æ –∫–ª—é—á—É, –≤—ã–∑—ã–≤–∞—è finish().
   * @param {string} key - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –∫–≤–µ—Å—Ç–∞.
   */
  async checkQuest(key) {
    const quest = this.quests.find(q => q.key === key);
    if (quest) {
      await quest.finish();
    }
  }

  /**
   * handleShootMirrorQuest ‚Äì –º–µ—Ç–æ–¥ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ¬´–ó–∞—Å–Ω—è—Ç—å¬ª.
   * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ ¬´–ó–∞—Å–Ω—è—Ç—å¬ª –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∫–∞–º–µ—Ä—ã.
   * –ó–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –∑–µ—Ä–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç (—á–µ—Ä–µ–∑ finish()).
   */
  async handleShootMirrorQuest() {
    console.log("[QuestManager] handleShootMirrorQuest()");
    await this.checkQuest("mirror_quest");
  }

  /**
   * handlePostButtonClick ‚Äì –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–æ—Å—Ç–∏—Ç—å":
   *   1) –ï—Å–ª–∏ —Ñ–ª–∞–≥ mirrorQuestReady —Ä–∞–≤–µ–Ω true, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏,
   *      –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–µ—Ä–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç.
   *   2) –ï—Å–ª–∏ —Ñ–ª–∞–≥ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.
   */
  async handlePostButtonClick() {
    console.log("[QuestManager] handlePostButtonClick()");
    const isReady = localStorage.getItem("mirrorQuestReady") === "true";
    if (isReady) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
      localStorage.removeItem("mirrorQuestReady");
      this.updatePostButtonState();

      console.log("–ó–∞–ø—É—Å–∫ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞ (–ø–æ—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)");

      // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "toggle-camera" (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)
      const cameraBtn = document.getElementById("toggle-camera");
      if (cameraBtn) {
        cameraBtn.classList.add("glowing");
      }

      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–µ—Ä–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç
      await this.activateQuest("mirror_quest");
    } else {
      alert("–ñ–¥–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç –ø—Ä–∏–∑—Ä–∞–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞.");
    }
  }

  /**
   * updatePostButtonState ‚Äì –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø–æ—Å—Ç–∏—Ç—å"
   * –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —Ñ–ª–∞–≥ mirrorQuestReady.
   */
  updatePostButtonState() {
    const isReady = localStorage.getItem("mirrorQuestReady") === "true";
    console.log("[QuestManager] updatePostButtonState:", isReady);

    const postBtn = this.app.postBtn;
    if (postBtn) {
      postBtn.disabled = !isReady;
    }
  }

  /**
   * updateCameraButtonState ‚Äì –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "toggle-camera"
   * –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –∑–µ—Ä–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç.
   */
  updateCameraButtonState() {
    const cameraBtn = document.getElementById("toggle-camera");
    if (!cameraBtn) return;
    if (localStorage.getItem("mirrorQuestActive") === "true") {
      cameraBtn.classList.add("glowing");
    } else {
      cameraBtn.classList.remove("glowing");
    }
  }

  /**
   * triggerMirrorQuestIfActive ‚Äì –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –∫–∞–º–µ—Ä—ã –ø—Ä–æ–≤–µ—Ä—è–µ—Ç localStorage,
   * –∏ –µ—Å–ª–∏ —Ñ–ª–∞–≥ mirrorQuestActive —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∫–≤–µ—Å—Ç–∞.
   */
  async triggerMirrorQuestIfActive() {
    if (localStorage.getItem("mirrorQuestActive") === "true") {
      console.log("ü™û –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞...");
      await this.checkQuest("mirror_quest");
    }
  }

  /**
   * checkMirrorQuestOnCamera ‚Äì —É–¥–æ–±–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞ –Ω–∞ –∫–∞–º–µ—Ä–µ.
   * –í—ã–∑—ã–≤–∞–µ—Ç checkQuest —Å –∫–ª—é—á–æ–º "mirror_quest".
   */
  async checkMirrorQuestOnCamera() {
    await this.checkQuest("mirror_quest");
  }

  /**
   * checkAvailablePhenomena ‚Äì –ø—Ä–∏–º–µ—Ä –ª–æ–≥–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–µ–Ω–æ–º–µ–Ω–æ–≤
   * –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –ª–æ–∫–∞—Ü–∏–∏ –∏ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–∏–∑—Ä–∞–∫–∞.
   */
  async checkAvailablePhenomena() {
    const locationType = this.profileManager?.getLocationType?.();
    if (locationType) {
      console.log(–¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è: ${locationType});
      const locationAllowedPhenomena = {
        "–ö—É—Ö–Ω—è": ["call", "randomCall"],
        "–°–ø–∞–ª—å–Ω—è": ["call", "randomCall"],
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ –∏ —è–≤–ª–µ–Ω–∏—è –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å
      };
      const locationPhenomena = locationAllowedPhenomena[locationType] || [];
      const ghost = this.app.ghostManager.getCurrentGhost();
      if (ghost && ghost.allowedPhenomena) {
        const intersection = ghost.allowedPhenomena.filter(p => locationPhenomena.includes(p));
        if (intersection.length > 0) {
          console.log(–î–æ—Å—Ç—É–ø–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è: ${intersection});
          // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, —ç—Ñ—Ñ–µ–∫—Ç –∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
        }
      }
    }
  }
}