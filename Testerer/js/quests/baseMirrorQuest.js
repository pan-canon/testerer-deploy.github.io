export class BaseMirrorQuest {
  /**
   * –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –∫–≤–µ—Å—Ç–∞ —Å –∑–µ—Ä–∫–∞–ª–æ–º –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è–º–∏.
   * @param {EventManager} eventManager ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–Ω–µ–≤–Ω–∏–∫–æ–º
   * @param {App} appInstance ‚Äì —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–º–µ—Ä–µ –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º
   */
  constructor(eventManager, appInstance) {
    this.eventManager = eventManager;
    this.app = appInstance;
    this.key = "mirror_quest"; // —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    this.doneKey = "mirror_done"; // –∫–ª—é—á –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    this.registerEvents(); // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–∞–º–µ—Ä–∞–º–∏
  }

  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
   */
  registerEvents() {
  }

  /**
   * –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—â–µ –Ω–µ –±—ã–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.
   */
  async activate() {
    if (!this.eventManager.isEventLogged(this.key)) {
      console.log(`–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ: ${this.key}`);
      await this.eventManager.addDiaryEntry(this.key); // –õ–æ–≥–∏—Ä—É–µ–º –≤ –¥–Ω–µ–≤–Ω–∏–∫
      localStorage.setItem("mirrorQuestActive", "true"); // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –∫–≤–µ—Å—Ç –∞–∫—Ç–∏–≤–µ–Ω
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞.
   */
async checkStatus() {
  console.log("ü™û –ó–µ—Ä–∫–∞–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç –∞–∫—Ç–∏–≤–Ω–æ. –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É...");
  return new Promise(resolve => {
    setTimeout(async () => {
      console.log("‚è± –ó–∞–ø—É—Å–∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–¥—Ä–∞...");
      const success = await this.app.compareCurrentFrame();
      console.log("‚è± –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:", success);
      resolve(success);
    }, 5000);
  });
}


  /**
   * –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –¥–Ω–µ–≤–Ω–∏–∫).
   */
async finish() {
  // –ñ–¥—ë–º 5 —Å–µ–∫—É–Ω–¥ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–≤–µ—Å—Ç–∞
  const success = await this.checkStatus();
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–∏–∑—Ä–∞–∫–∞ –∏ –≤—ã–±–∏—Ä–∞–µ–º –∏–∑ –µ–≥–æ –∏–º–µ–Ω–∏ —Å–ª—É—á–∞–π–Ω—É—é –±—É–∫–≤—É
  const ghost = this.app.ghostManager.getCurrentGhost();
  const randomLetter = this.getRandomLetter(ghost.name);
  
  if (success) {
    // –ï—Å–ª–∏ –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω: –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç –æ—Ç —é–∑–µ—Ä–∞ —Å —Ñ–æ—Ç–æ –∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –±—É–∫–≤–æ–π
    const photoData = this.app.lastMirrorPhoto ? ` [photo attached]\n${this.app.lastMirrorPhoto}` : "";
    await this.eventManager.addDiaryEntry(`user_post_success: ${randomLetter}${photoData}`, false);
    alert("‚úÖ –ó–∞–¥–∞–Ω–∏–µ ¬´–ø–æ–¥–æ–π—Ç–∏ –∫ –∑–µ—Ä–∫–∞–ª—É¬ª –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!");
  } else {
    // –ï—Å–ª–∏ –∫–≤–µ—Å—Ç –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω (–ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω): –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç –æ—Ç —é–∑–µ—Ä–∞ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –±—É–∫–≤–æ–π
    await this.eventManager.addDiaryEntry(`user_post_failed: ${randomLetter}`, false);
    alert("‚ùå –ö–≤–µ—Å—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω!");
    // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ–µ welcome), —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
    await this.app.gameEventManager.activateEvent("welcome");
  }
  
  // –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —à–∞–≥ (–æ–¥–Ω–∞ –±—É–∫–≤–∞) ‚Äì –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∫–≤–µ—Å—Ç–∞
  if (this.app.ghostManager) {
    await this.app.ghostManager.triggerNextPhenomenon();
  }
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–∞
  localStorage.removeItem("mirrorQuestActive");
}

getRandomLetter(name) {
  // –û—Å—Ç–∞–≤–ª—è–µ–º –≤ —Å—Ç—Ä–æ–∫–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã (–ª–∞—Ç–∏–Ω—Å–∫–∏–µ –∏ –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–µ) –∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã/—Ü–∏—Ñ—Ä—ã
  const letters = name.replace(/[^A-Za-z–ê-–Ø–∞-—è–Å—ë]/g, '').split('');
  if (letters.length === 0) return '';
  const randomIndex = Math.floor(Math.random() * letters.length);
  return letters[randomIndex];
}
}