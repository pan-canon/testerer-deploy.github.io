"use strict";(self.webpackChunktesterer_deploy_github_io=self.webpackChunktesterer_deploy_github_io||[]).push([[79],{61:(t,e,a)=>{a.d(e,{Z:()=>n});var s=a(350),i=a(713);class n extends s.e{constructor(t,e,a,s){super(t),this.app=e,this.languageManager=s,this.key=a.key}async activate(){this.eventManager.isEventLogged(this.key)?console.log(`Event '${this.key}' is already logged, skipping activation.`):(console.log(`Activating final event: '${this.key}'`),await this.addDiaryEntry(this.key,!0),i.f.set(i.f.KEYS.GAME_FINALIZED,"true"),this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.triggerGhostAppearanceEffect&&this.app.visualEffectsManager.triggerGhostAppearanceEffect("ghost_fade_out"),await this.app.ghostManager.finishCurrentGhost(),this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!1),this.app.questManager&&"function"==typeof this.app.questManager.syncQuestState&&await this.app.questManager.syncQuestState(),i.f.setActiveQuestKey(null),this.app.viewManager&&"function"==typeof this.app.viewManager.showNotification?this.app.viewManager.showNotification("üéâ Congratulations, the scenario is finished!"):console.log("üéâ Congratulations, the scenario is finished!"),document.dispatchEvent(new CustomEvent("gameEventCompleted",{detail:this.key})))}}},350:(t,e,a)=>{a.d(e,{e:()=>i});var s=a(166);class i{constructor(t){this.eventManager=t,this.key=""}async activate(){try{this.eventManager.isEventLogged(this.key)||(console.log(`Activating event: ${this.key}`),await this.eventManager.addDiaryEntry(this.key))}catch(t){s.S.logError(t,"BaseEvent.activate"),s.S.showError("An error occurred during event activation.")}}async addDiaryEntry(t,e=!1){try{await this.eventManager.addDiaryEntry(t,e)}catch(t){s.S.logError(t,"BaseEvent.addDiaryEntry"),s.S.showError("An error occurred while adding a diary entry.")}}}},413:(t,e,a)=>{a.r(e),a.d(e,{BaseRepeatingQuest:()=>r,FinalEvent:()=>g.Z,PostRepeatingEvent:()=>s.y});var s=a(476),i=a(350),n=a(713);const o=["toilet","clock","lamp","chair","table","couch","bed","refrigerator","book","cup"];class r extends i.e{constructor(t,e,a={}){super(t),this.app=e,this.key=a.key||"repeating_quest",this.doneKey=a.doneKey||this.key+"_done",this.statusElementId=a.statusElementId||"repeating-quest-status",this.shootButtonId=a.shootButtonId||"btn_shoot",this.totalStages=a.totalStages||3,this.currentStage=1,this.activated=!1,this.finished=!1,this.finalRepeatingQuestCompleted=!1,this.loadState();const s=n.f.get("remainingItems");this.remainingItems=s?JSON.parse(s):[...o],n.f.set("remainingItems",JSON.stringify(this.remainingItems)),this.currentTarget=this.remainingItems.length>0?this.remainingItems[0]:null,document.addEventListener("objectDetected",this.onObjectDetected.bind(this))}generateDetectionConfig(){return console.log(`[BaseRepeatingQuest] Providing detection target: ${this.currentTarget}`),{target:this.currentTarget}}loadState(){const t=n.f.get(`quest_state_${this.key}`);if(t)try{const e=JSON.parse(t);this.currentStage=e.currentStage,this.finished=e.finished,e.totalStages&&(this.totalStages=e.totalStages),console.log(`[BaseRepeatingQuest] Restored quest state: stage=${this.currentStage}, finished=${this.finished}`)}catch(t){console.error("[BaseRepeatingQuest] Error parsing saved quest state:",t)}}saveState(){const t={currentStage:this.currentStage,finished:this.finished,totalStages:this.totalStages};n.f.set(`quest_state_${this.key}`,JSON.stringify(t)),console.log(`[BaseRepeatingQuest] Saved quest state: stage=${this.currentStage}, finished=${this.finished}`)}async activate(){console.log(`Activating repeating quest: ${this.key}`),await this.addDiaryEntry(this.key,!0),await this.app.databaseManager.saveQuestRecord({quest_key:this.key,status:"active",current_stage:this.currentStage,total_stages:this.totalStages}),this.app.viewManager?.setCameraButtonActive&&this.app.viewManager.setCameraButtonActive(!0),this.activated=!0,this.app.isCameraOpen?this.startCheckLoop():document.addEventListener("cameraReady",(()=>{console.log("[BaseRepeatingQuest] cameraReady received ‚Äî starting quest loop"),this.startCheckLoop()}),{once:!0})}startCheckLoop(){this.app.isCameraOpen&&this.activated&&!this.finished&&(console.log(`[BaseRepeatingQuest] Starting AI detection for target '${this.currentTarget}'.`),this.app.cameraSectionManager?.startAIDetection?.({target:this.currentTarget})),this.app.viewManager?.startRepeatingQuestUI?this.app.viewManager.startRepeatingQuestUI({statusElementId:this.statusElementId,shootButtonId:this.shootButtonId,stage:this.currentStage,totalStages:this.totalStages,target:this.currentTarget,onShoot:()=>this.finishStage(),quest:this}):console.error("[BaseRepeatingQuest] ViewManager.startRepeatingQuestUI is not available."),console.log("[BaseRepeatingQuest] Repeating quest UI updated. Awaiting user action to capture snapshot.")}restoreUI(){console.log("[BaseRepeatingQuest] Attempting to restore repeating quest UI...");const t=this.app.databaseManager.getQuestRecord(this.key);if(!t||"active"!==t.status)return void console.log("[BaseRepeatingQuest] DB record is not active; UI restoration skipped.");if(this.finished)return void console.log("[BaseRepeatingQuest] Quest is finished; UI restoration skipped.");this.activated||(console.log("[BaseRepeatingQuest] Quest not activated locally; setting activated=true based on DB record."),this.activated=!0);const e=()=>{this.startCheckLoop(),console.log("[BaseRepeatingQuest] UI restored; shoot button will be enabled upon detection.")};this.app.isCameraOpen?e():document.addEventListener("cameraReady",e,{once:!0});const a=this.app.cameraSectionManager.videoElement;n.f.isCameraOpen()&&a&&a.srcObject&&a.readyState>=2&&(console.log("[BaseRepeatingQuest] videoElement.readyState >= 2 ‚Äî —Å—Ä–∞–∑—É –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ç–µ–∫—Ü–∏—é"),e())}async finishStage(){if(this.finished)return;this.app.cameraSectionManager&&"function"==typeof this.app.cameraSectionManager.stopAIDetection&&(this.app.cameraSectionManager.stopAIDetection(),console.log("[BaseRepeatingQuest] AI detection stopped after shoot.")),this.app.viewManager&&"function"==typeof this.app.viewManager.setShootButtonActive&&(this.app.viewManager.setShootButtonActive(!1),console.log("[BaseRepeatingQuest] Shoot button disabled after click."));const t=this.captureSimplePhoto();console.log(`[BaseRepeatingQuest] Captured snapshot for stage ${this.currentStage}.`),await this.addDiaryEntry(`repeating_stage_${this.currentStage} [photo attached]\n${t}`,!1),console.log(`[BaseRepeatingQuest] Completed stage: ${this.currentStage}`),this.currentStage++,this.saveState(),this.currentTarget&&(this.remainingItems.shift(),n.f.set("remainingItems",JSON.stringify(this.remainingItems)),this.currentTarget=this.remainingItems[0]||null,console.log(`[BaseRepeatingQuest] Next detection target: ${this.currentTarget}`)),this.currentStage<=this.totalStages?(await this.app.databaseManager.saveQuestRecord({quest_key:this.key,status:"finished",current_stage:this.currentStage,total_stages:this.totalStages}),this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&(this.app.viewManager.setPostButtonEnabled(!0),console.log("[BaseRepeatingQuest] Post button enabled for next stage.")),document.dispatchEvent(new CustomEvent("questCompleted",{detail:this.key})),console.log("[BaseRepeatingQuest] questCompleted event dispatched for repeating quest stage.")):await this.finishCompletely()}async finishCompletely(){this.finished=!0,await this.app.databaseManager.saveQuestRecord({quest_key:this.key,status:"finished",current_stage:this.currentStage,total_stages:this.totalStages}),n.f.remove(`quest_state_${this.key}`),document.dispatchEvent(new CustomEvent("questCompleted",{detail:this.key})),console.log("[BaseRepeatingQuest] Quest completely finished. questCompleted event dispatched.")}captureSimplePhoto(){const t=this.app.cameraSectionManager?.videoElement;if(!t||!t.srcObject)return console.warn("[BaseRepeatingQuest] Camera is not active ‚Äî returning an empty string"),"";const e=document.createElement("canvas");e.width=t.videoWidth||640,e.height=t.videoHeight||480;return e.getContext("2d").drawImage(t,0,0,e.width,e.height),e.toDataURL("image/png")}resetCycle(){this.finished=!1,this.currentStage=1,console.log("[BaseRepeatingQuest] Quest state has been reset for a new cycle."),this.saveState()}async getCurrentQuestStatus(){const t=this.app.databaseManager.getQuestRecord(this.key),e=n.f.getActiveQuestKey()===this.key;return{key:this.key,active:e,finished:this.finished,currentStage:this.currentStage,totalStages:this.totalStages,dbStatus:t?t.status:"not recorded"}}getRandomLetter(t){if(!t)return"";const e=t.replace(/[^A-Za-z–ê-–Ø–∞-—è–Å—ë]/g,"").split("");return e.length?e[Math.floor(Math.random()*e.length)]:""}onObjectDetected(t){const e=t.detail;e===this.currentTarget&&this.app.isCameraOpen&&(console.log(`[BaseRepeatingQuest] Detected '${e}', enabling Shoot button.`),this.app.viewManager&&"function"==typeof this.app.viewManager.setShootButtonActive&&this.app.viewManager.setShootButtonActive(!0))}}var g=a(61)},476:(t,e,a)=>{a.d(e,{y:()=>i});var s=a(350);a(713);class i extends s.e{constructor(t,e,a,s){super(t),this.app=e,this.key=a.key}async activate(t){const e=t||this.key;if(this.eventManager.isEventLogged(e))return void console.log(`[PostRepeatingEvent] Event '${e}' is already logged, skipping activation.`);console.log(`[PostRepeatingEvent] Activating event '${e}'.`),await this.addDiaryEntry(e,!0);const a=this.app.ghostManager.getCurrentGhost();a&&a.isFinished?console.log("[PostRepeatingEvent] Ghost is finished; ready to dispatch event completion."):(this.app.viewManager&&"function"==typeof this.app.viewManager.setPostButtonEnabled&&this.app.viewManager.setPostButtonEnabled(!0),this.app.visualEffectsManager&&"function"==typeof this.app.visualEffectsManager.triggerMirrorEffect&&this.app.visualEffectsManager.triggerMirrorEffect(),console.log("[PostRepeatingEvent] Repeating quest cycle ended; waiting for user action.")),document.dispatchEvent(new CustomEvent("gameEventCompleted",{detail:e}))}}}}]);